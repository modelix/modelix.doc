antoraSearch.initSearch(lunr, {"index":{"version":"2.3.9","fields":["title","name","text","component"],"fieldVectors":[["title/1-1",[0,46.502]],["name/1-1",[]],["text/1-1",[]],["component/1-1",[]],["title/1-2",[1,36.271]],["name/1-2",[]],["text/1-2",[]],["component/1-2",[]],["title/1-3",[2,26.577,3,48.299]],["name/1-3",[]],["text/1-3",[]],["component/1-3",[]],["title/1-4",[3,48.299,4,48.299]],["name/1-4",[]],["text/1-4",[]],["component/1-4",[]],["title/1-5",[5,50.967]],["name/1-5",[]],["text/1-5",[]],["component/1-5",[]],["title/1-6",[6,62.827]],["name/1-6",[]],["text/1-6",[]],["component/1-6",[]],["title/1",[7,36.146,8,8.247]],["name/1",[9,2.075]],["text/1",[1,4.246,3,3.901,4,1.806,5,1.596,6,1.968,8,0.997,10,2.191,11,2.658,12,3.024,13,1.819,14,1.078,15,2.737,16,1.968,17,1.806,18,1.968,19,1.434,20,1.968,21,1.165,22,1.968,23,2.004,24,1.688,25,1.457,26,2.673,27,1.197,28,1.521,29,1.521,30,0.828,31,1.806,32,1.968,33,2.547,34,1.903,35,2.673,36,1.447,37,1.814,38,2.233,39,1.806,40,2.233,41,1.596,42,1.806,43,1.806,44,1.857,45,1.457,46,2.233,47,1.622,48,0.815,49,2.824,50,2.233,51,1.23,52,1.521,53,1.968,54,1.806,55,2.233,56,1.114,57,2.827,58,1.631,59,2.233,60,1.688,61,1.968,62,1.197,63,3.026,64,3.739,65,2.06,66,2.104,67,1.401,68,2.233,69,4.823,70,1.806,71,3.024,72,1.307,73,1.307,74,1.596,75,1.806,76,1.457,77,0.66,78,1.137,79,2.233,80,1.457,81,1.307,82,2.233,83,1.968,84,1.688,85,2.233,86,2.233,87,3.296,88,1.457,89,1.857,90,2.595,91,2.233,92,1.165,93,3.739,94,1.197,95,1.521,96,1.688,97,1.631,98,2.233,99,1.109,100,1.569,101,2.233,102,2.233,103,3.739,104,2.233,105,1.521,106,1.688,107,2.233,108,2.233,109,2.233,110,1.267,111,1.521,112,1.596,113,1.968,114,1.688,115,1.806,116,1.521,117,1.457,118,1.968,119,1.596,120,1.267,121,1.968,122,1.596,123,1.735,124,1.688,125,2.439,126,1.457,127,2.233,128,1.968,129,1.109,130,1.688,131,1.51,132,3.024,133,2.233,134,1.806,135,1.688,136,1.968,137,2.233,138,2.233,139,2.547,140,1.136,141,1.968,142,1.806,143,3.901,144,1.351,145,1.457,146,2.233,147,2.233,148,2.233,149,2.233,150,1.688,151,2.233,152,1.018,153,2.233,154,2.233,155,2.233,156,1.307,157,1.968,158,1.457,159,2.233,160,2.233,161,0.642,162,2.233,163,1.968,164,0.802,165,1.165,166,2.233,167,1.596,168,1.307,169,2.233,170,2.233,171,2.233,172,1.197,173,1.968,174,1.165,175,2.233,176,2.233,177,2.233]],["component/1",[8,0.418]],["title/2-1",[8,6.227,36,13.524,62,24.167,178,20.486]],["name/2-1",[]],["text/2-1",[]],["component/2-1",[]],["title/2-2",[179,41.729]],["name/2-2",[]],["text/2-2",[]],["component/2-2",[]],["title/2-3",[14,10.645]],["name/2-3",[]],["text/2-3",[]],["component/2-3",[]],["title/2",[178,32.382]],["name/2",[178,2.119]],["text/2",[2,0.816,8,0.685,14,1.16,15,1.534,17,1.482,21,2.176,23,0.982,27,2.234,30,1.546,34,1.609,35,1.311,36,0.55,44,0.91,45,2.063,47,0.438,48,1.154,49,1.073,52,1.248,56,0.979,60,1.386,62,0.982,63,2.615,67,1.15,84,1.386,89,3.441,92,2.588,105,3.378,106,1.386,114,1.386,122,2.981,123,0.851,131,0.574,140,0.933,142,2.557,150,1.386,152,2.049,165,0.957,168,1.073,179,4.406,180,4.958,181,1.482,182,1.01,183,1.833,184,2.009,185,1.616,186,1.311,187,1.98,188,3.161,189,1.833,190,1.546,191,2.998,192,2.261,193,4.958,194,1.833,195,1.196,196,2.022,197,1.833,198,1.196,199,3.372,200,2.121,201,1.482,202,1.196,203,2.931,204,1.833,205,1.196,206,2.063,207,1.04,208,2.063,209,0.833,210,1.609,211,3.65,212,1.467,213,1.311,214,1.482,215,3.161,216,1.616,217,1.833,218,1.428,219,0.816,220,0.41,221,1.01,222,1.833,223,1.109,224,1.833,225,1.196,226,0.91,227,0.8,228,2.153,229,1.248,230,1.833,231,2.787,232,1.833,233,2.063,234,0.703,235,1.833,236,1.833,237,1.15,238,0.889,239,1.833,240,1.833,241,1.482,242,1.311,243,1.833,244,1.482,245,2.234,246,1.833,247,0.982,248,2.063,249,1.833,250,1.482,251,1.833,252,1.833,253,1.01,254,1.311,255,3.001,256,2.261,257,2.557,258,1.521,259,1.833,260,1.482,261,1.833,262,1.279,263,1.833,264,1.482,265,1.833,266,0.933,267,1.279,268,2.463,269,3.111,270,1.109,271,2.557,272,1.311,273,1.482,274,1.196,275,1.04,276,1.482,277,0.91,278,1.833,279,1.04,280,1.482,281,3.378,282,1.311,283,1.482,284,1.311,285,1.482,286,1.482,287,1.196,288,1.311,289,2.557,290,1.482,291,1.482,292,1.482,293,1.482,294,1.213,295,1.248,296,0.833,297,1.833,298,1.196,299,2.391,300,1.482,301,1.482,302,1.482,303,2.063,304,0.933,305,4.01,306,1.482,307,2.557,308,1.482,309,1.482,310,3.372,311,1.482,312,1.04,313,2.261,314,1.196,315,3.161,316,0.982,317,1.482,318,1.482,319,1.482,320,1.482]],["component/2",[8,0.418]],["title/3",[5,50.967]],["name/3",[5,3.334]],["text/3",[1,2.918,5,4.101,8,0.792,10,2.606,19,2.2,26,4.101,30,3.194,31,4.639,36,1.72,37,2.782,56,1.51,58,2.502,73,3.358,99,2.848,100,2.407,122,4.101,152,2.345,156,4.479,161,1.65,165,2.993,174,2.993,179,3.358,228,3.907,321,5.735,322,5.735,323,5.735,324,5.735,325,5.735,326,4.639,327,7.651,328,3.742,329,5.735,330,3.742,331,5.735,332,1.521,333,3.742,334,4.337,335,5.735,336,5.735,337,5.735]],["component/3",[8,0.418]],["title/4-1",[338,71.275]],["name/4-1",[]],["text/4-1",[]],["component/4-1",[]],["title/4-2",[339,71.275]],["name/4-2",[]],["text/4-2",[]],["component/4-2",[]],["title/4-3",[218,24.411]],["name/4-3",[]],["text/4-3",[]],["component/4-3",[]],["title/4",[8,8.247,340,40.678]],["name/4",[340,3.176]],["text/4",[10,3.037,11,3.683,12,3.582,13,2.521,14,1.384,15,4.1,16,5.892,18,5.892,19,2.564,20,5.892,21,3.489,22,5.892,23,3.582,24,5.055,25,4.361,26,4.779,27,3.582,28,4.553,29,4.553,30,2.479,31,5.406,32,5.892,33,4.553,34,3.401,35,4.779]],["component/4",[8,0.418]],["title/5",[125,46.502]],["name/5",[9,2.075]],["text/5",[112,5.553,125,6.046,164,3.328,341,7.766,342,7.766,343,7.766,344,7.766,345,7.766,346,5.553,347,7.766]],["component/5",[8,0.418]],["title/6",[87,45.293,348,51.383,349,51.383]],["name/6",[83,4.11]],["text/6",[350,4.34]],["component/6",[8,0.418]],["title/7",[124,53.903]],["name/7",[9,2.075]],["text/7",[112,5.235,114,5.537,115,5.921,117,4.776,119,5.235,124,7.303,164,3.211,196,3.552,299,5.537,340,4.987,351,7.321,352,7.321,353,4.155,354,7.321,355,7.321]],["component/7",[8,0.418]],["title/8-1",[10,32.382]],["name/8-1",[]],["text/8-1",[]],["component/8-1",[]],["title/8-2",[356,34.962,357,52.638]],["name/8-2",[]],["text/8-2",[]],["component/8-2",[]],["title/8-3",[74,50.967]],["name/8-3",[]],["text/8-3",[]],["component/8-3",[]],["title/8",[10,23.345,74,36.743,356,30.083]],["name/8",[74,3.334]],["text/8",[1,1.545,2,1.351,8,0.663,10,3.078,11,1.673,12,1.627,13,2.248,14,0.453,29,2.068,36,1.441,44,3.364,47,1.874,53,2.676,56,0.599,58,1.324,61,2.676,62,1.627,63,3.013,65,2.647,66,2.095,72,1.777,74,3.434,78,0.924,89,3.665,97,1.324,123,1.409,128,2.676,131,1.504,139,2.068,143,5.479,144,1.838,145,1.981,152,2.01,156,1.777,163,4.234,187,0.774,190,1.782,216,2.676,218,1.04,238,1.473,245,1.627,253,1.673,269,1.905,332,0.805,340,2.068,356,5.368,357,2.676,358,2.456,359,3.036,360,2.456,361,4.803,362,3.036,363,4.234,364,1.838,365,2.455,366,3.036,367,2.456,368,1.723,369,3.013,370,2.171,371,3.036,372,1.251,373,1.905,374,1.409,375,1.185,376,3.036,377,3.036,378,2.171,379,2.456,380,3.036,381,3.036,382,2.507,383,0.924,384,3.036,385,3.036,386,3.036,387,1.838,388,2.676,389,2.456,390,3.036,391,3.036,392,3.885,393,4.803,394,1.165,395,2.676,396,3.036,397,3.036,398,3.885,399,3.036,400,1.723,401,2.456,402,3.036,403,3.036,404,1.473,405,3.036,406,3.036,407,3.036,408,3.036,409,3.036,410,3.036,411,2.456,412,2.171,413,3.036,414,3.036,415,1.905,416,2.171,417,1.585,418,1.473,419,3.036,420,3.036,421,1.545,422,3.036,423,1.981,424,2.456]],["component/8",[8,0.418]],["title/9",[350,29.658,425,45.161]],["name/9",[350,2.316]],["text/9",[1,3.524,11,3.816,25,4.518,94,4.632,123,3.214,130,5.237,135,5.237,136,6.104,139,4.717,140,3.524,141,6.104,142,5.601,143,5.601,144,4.192,210,3.524,295,4.717,296,3.146,350,3.439,425,5.237,426,4.952,427,4.952,428,6.925,429,6.925]],["component/9",[8,0.418]],["title/10",[8,7.096,47,12.269,334,38.859]],["name/10",[47,0.756,334,2.395]],["text/10",[8,0.319,13,0.87,14,1.314,15,1.119,26,3.53,77,0.682,152,1.881,157,4.352,161,3.17,173,2.033,179,1.35,185,2.033,187,1.76,190,1.425,203,0.933,220,1.718,231,2.033,294,2.209,332,1.309,363,3.386,374,1.07,375,0.9,388,2.033,395,6.088,430,1.07,431,2.306,432,1.396,433,2.306,434,2.306,435,8.016,436,5.221,437,1.119,438,1.309,439,2.342,440,1.649,441,2.3,442,1.865,443,1.865,444,2.306,445,3.842,446,1.204,447,0.968,448,2.747,449,2.306,450,2.306,451,2.306,452,1.396,453,2.306,454,3.107,455,2.306,456,2.306,457,4.937,458,2.306]],["component/10",[8,0.418]],["title/11",[65,39.279]],["name/11",[9,2.075]],["text/11",[4,6.218,65,5.077,112,5.497,124,5.814,164,3.308,281,5.237,423,5.016,459,4.013,460,7.688,461,7.688,462,7.688]],["component/11",[8,0.418]],["title/12-1",[8,5.548,44,19.951,47,9.592,415,25.204,463,22.138]],["name/12-1",[]],["text/12-1",[]],["component/12-1",[]],["title/12-2",[8,8.944,13,17.009,464,35.606]],["name/12-2",[]],["text/12-2",[]],["component/12-2",[]],["title/12-3",[8,8.944,418,21.877,464,35.606]],["name/12-3",[]],["text/12-3",[]],["component/12-3",[]],["title/12-4",[8,8.944,77,13.335,464,35.606]],["name/12-4",[]],["text/12-4",[]],["component/12-4",[]],["title/12",[8,8.247,47,14.258]],["name/12",[47,0.756,131,0.992]],["text/12",[8,1.3,13,2.919,14,1.274,15,3.082,17,2.713,21,1.751,26,2.399,29,2.285,30,1.244,37,1.627,45,2.188,47,2.161,56,1.025,57,2.537,58,1.463,62,1.798,63,2.105,66,1.463,77,1.879,81,1.964,89,1.666,94,1.798,95,3.537,96,2.537,97,1.463,120,1.904,123,2.41,129,3.156,131,2.562,139,2.285,145,2.188,152,1.73,156,1.964,165,1.751,178,1.524,182,2.862,187,0.855,218,2.176,220,1.163,229,2.285,234,1.287,245,1.798,258,1.224,294,1.287,296,1.524,332,0.889,334,2.537,356,1.964,382,1.751,394,1.287,417,2.71,418,1.627,423,2.188,439,2.463,441,1.453,446,1.751,447,1.408,459,1.751,465,3.354,466,3.354,467,3.354,468,3.354,469,3.354,470,3.354,471,3.354,472,3.354,473,3.354,474,3.354,475,2.03,476,3.354,477,3.354,478,2.188,479,1.798,480,1.904,481,2.713,482,2.188,483,2.713,484,2.713,485,2.713,486,2.713,487,2.713,488,2.713,489,3.388,490,4.2,491,2.188,492,2.399,493,2.399,494,2.188,495,2.713]],["component/12",[8,0.418]],["title/13-1",[332,15.833,496,33.889]],["name/13-1",[]],["text/13-1",[]],["component/13-1",[]],["title/13-2",[8,7.096,372,21.166,497,31.102]],["name/13-2",[]],["text/13-2",[]],["component/13-2",[]],["title/13-3",[296,18.251,365,16.547,375,15.681,498,18.642,499,26.209]],["name/13-3",[]],["text/13-3",[]],["component/13-3",[]],["title/13",[47,10.766,56,8.9,332,11.956,441,12.618]],["name/13",[47,0.756,332,0.84]],["text/13",[8,1.152,36,1.773,47,1.412,51,2.194,56,1.392,66,1.736,97,1.736,131,2.209,161,1.701,187,1.014,196,2.869,209,1.808,210,2.026,221,2.194,226,1.977,227,1.736,234,3.201,237,2.497,238,1.931,262,2.391,267,1.61,268,1.977,277,1.977,332,2.07,365,3.216,369,2.497,372,2.436,373,3.71,374,2.744,375,3.256,383,1.211,394,1.527,441,1.974,463,2.194,500,1.931,501,1.931,502,2.259,503,1.772,504,1.64,505,2.597,506,3.858,507,2.597,508,2.409,509,2.409,510,1.477,511,2.026,512,2.026,513,2.597,514,5.094,515,3.169,516,2.597,517,3.858,518,2.133,519,2.597,520,2.409,521,3.858,522,3.858,523,2.597,524,2.597,525,2.597,526,2.597,527,2.597,528,2.409,529,2.597,530,2.409,531,2.133]],["component/13",[8,0.418]],["title/14",[110,40.449]],["name/14",[9,2.075]],["text/14",[36,2.217,110,5.105,111,5.035,112,5.286,113,6.516,114,5.59,115,5.978,116,5.035,117,4.822,118,6.516,119,5.286,120,4.195,121,6.516,164,3.23,532,7.392]],["component/14",[8,0.418]],["title/15-1",[0,46.502]],["name/15-1",[]],["text/15-1",[]],["component/15-1",[]],["title/15-2",[78,18.167,533,40.678]],["name/15-2",[]],["text/15-2",[]],["component/15-2",[]],["title/15-3",[47,10.766,56,8.9,332,11.956,441,12.618]],["name/15-3",[]],["text/15-3",[]],["component/15-3",[]],["title/15-4",[332,15.833,496,33.889]],["name/15-4",[]],["text/15-4",[]],["component/15-4",[]],["title/15-5",[8,7.096,372,21.166,497,31.102]],["name/15-5",[]],["text/15-5",[]],["component/15-5",[]],["title/15-6",[296,18.251,365,16.547,375,15.681,498,18.642,499,26.209]],["name/15-6",[]],["text/15-6",[]],["component/15-6",[]],["title/15-7",[534,45.161,535,40.678]],["name/15-7",[]],["text/15-7",[]],["component/15-7",[]],["title/15",[7,31.102,8,7.096,77,15.196]],["name/15",[9,2.075]],["text/15",[2,0.949,8,1.186,10,1.635,11,1.176,13,1.357,14,0.697,15,1.746,19,0.818,21,1.113,28,1.453,30,1.731,36,1.991,37,1.035,39,1.725,44,1.06,47,1.114,49,1.249,51,1.176,56,1.621,66,1.57,75,1.725,77,2.089,78,0.649,84,1.613,95,1.453,97,1.57,99,1.06,120,2.648,123,1.67,125,1.392,129,1.06,131,2.212,145,1.392,152,2.021,161,1.035,178,0.969,179,2.732,182,1.983,187,0.544,195,1.392,196,1.746,209,0.969,210,1.086,211,1.392,218,1.598,221,1.983,225,1.392,226,1.06,227,1.57,229,1.453,234,2.547,237,1.338,238,1.035,245,1.143,258,2.234,262,1.455,267,0.863,268,1.06,277,1.06,296,0.969,316,1.143,328,1.392,332,1.623,340,1.453,346,1.525,365,2.258,369,1.338,372,1.482,373,2.258,374,1.67,375,2.389,383,0.649,394,2.71,400,1.211,417,2.861,421,1.086,441,1.306,463,1.176,481,1.725,482,1.392,483,1.725,484,1.725,485,1.725,486,1.725,487,1.725,488,1.725,489,2.348,490,2.91,491,1.392,492,1.525,493,1.525,494,1.392,495,1.725,500,1.035,501,1.035,502,1.211,503,2.439,504,0.879,505,1.392,506,2.348,507,1.392,508,1.291,509,1.291,510,0.791,511,1.086,512,1.086,513,1.392,514,3.576,515,1.929,516,1.392,517,2.348,518,1.143,519,1.392,520,1.291,521,2.348,522,2.348,523,1.392,524,1.392,525,1.392,526,1.392,527,1.392,528,1.291,529,1.392,530,1.291,531,1.143,536,1.453,537,1.88,538,1.88,539,1.88,540,1.613,541,3.172,542,1.88,543,1.88,544,1.453,545,1.613,546,1.613,547,1.88,548,1.613,549,1.338,550,1.983,551,0.931,552,1.613,553,1.88,554,1.88,555,1.88,556,1.453,557,1.453,558,1.06,559,0.778,560,1.012,561,1.88,562,1.453,563,1.88,564,1.88]],["component/15",[8,0.418]],["title/16",[14,6,19,15.413,30,14.903,152,10.941,551,17.524]],["name/16",[19,1.215,551,1.381]],["text/16",[]],["component/16",[8,0.418]],["title/17",[2,22.869,77,15.196,131,16.088]],["name/17",[2,2.075]],["text/17",[1,1.753,2,1.533,8,0.476,14,1.416,19,1.322,23,1.846,24,2.605,30,2.397,36,1.033,47,1.266,48,2.358,56,1.275,77,1.019,94,1.846,100,2.711,116,2.347,131,1.079,145,2.247,152,2.346,161,2.624,184,1.903,187,1.996,190,1.966,191,1.846,200,2.697,219,3.681,220,1.625,248,2.247,304,3.692,314,2.247,332,0.913,382,1.798,383,1.965,394,2.479,400,1.955,404,2.572,417,1.798,421,1.753,436,1.955,437,1.671,441,0.964,447,1.446,459,1.798,489,2.247,503,2.359,510,1.278,512,2.697,550,1.898,556,2.347,558,1.711,559,1.934,560,2.514,562,2.347,565,3.036,566,3.036,567,3.036,568,2.017,569,1.798,570,2.605,571,3.608,572,3.036,573,2.605,574,4.401,575,2.347,576,3.036,577,2.017,578,2.605,579,1.898,580,2.017]],["component/17",[8,0.418]],["title/18",[56,8.9,164,16.191,258,16.455,559,16.455]],["name/18",[164,1.137,581,1.745]],["text/18",[14,1.135,19,1.238,44,1.603,47,0.771,48,1.178,56,1.661,58,1.408,67,3.162,81,1.89,88,3.288,92,1.685,94,1.73,120,1.832,129,1.603,134,2.61,152,1.688,182,4.438,184,1.159,196,3.008,203,1.305,208,2.106,212,1.498,226,1.603,234,1.238,242,3.604,254,3.604,258,2.939,262,1.305,294,1.933,304,3.565,328,2.106,333,3.288,378,2.308,382,1.685,404,1.566,417,1.685,423,2.106,424,4.076,426,2.308,500,1.566,510,1.869,548,4.688,550,1.779,558,1.603,559,2.557,560,1.531,569,1.685,580,1.89,582,2.845,583,4.223,584,5.465,585,2.441,586,2.025,587,2.025,588,2.199,589,5.298,590,2.025,591,3.63,592,7.673,593,2.845,594,2.95,595,4.442,596,5.465,597,4.442,598,3.162,599,4.442,600,2.441,601,2.025,602,3.842,603,5.465,604,2.95,605,2.845,606,2.845,607,2.845,608,3.162,609,2.845,610,2.845,611,2.845,612,2.845,613,2.845,614,2.845,615,1.603]],["component/18",[8,0.418]],["title/19",[56,7.149,172,19.412,258,13.218,604,21.206,616,22.725,617,27.392]],["name/19",[172,1.697,581,1.745]],["text/19",[]],["component/19",[8,0.418]],["title/20-1",[62,38.201]],["name/20-1",[]],["text/20-1",[]],["component/20-1",[]],["title/20-2",[56,8.9,178,20.486,258,16.455,618,30.716]],["name/20-2",[]],["text/20-2",[]],["component/20-2",[]],["title/20",[36,13.524,56,8.9,77,13.335,258,16.455]],["name/20",[581,2.57]],["text/20",[14,1.399,19,1.704,36,1.332,37,2.155,47,1.06,56,1.849,77,1.313,80,2.897,92,2.318,123,2.061,152,1.21,161,2.613,164,2.3,168,2.6,172,3.433,178,2.018,187,1.915,212,2.061,218,1.521,219,3.344,220,1.683,234,1.704,258,3.418,294,2.458,353,2.52,447,2.689,459,2.318,475,2.688,551,1.937,552,3.359,559,2.338,579,3.53,583,3.025,588,3.025,590,2.786,601,2.786,604,2.6,616,2.786,617,3.359,619,3.025,620,3.915,621,3.359,622,3.359,623,3.915,624,3.915,625,4.019,626,3.751,627,4.845]],["component/20",[8,0.418]],["title/21-1",[88,33.523,165,26.819,178,23.345]],["name/21-1",[]],["text/21-1",[]],["component/21-1",[]],["title/21-2",[30,22.153,152,16.264]],["name/21-2",[]],["text/21-2",[]],["component/21-2",[]],["title/21-3",[14,6,19,15.413,220,13.332,383,12.221]],["name/21-3",[]],["text/21-3",[]],["component/21-3",[]],["title/21-4",[19,19.714,100,21.564,571,22.414]],["name/21-4",[]],["text/21-4",[]],["component/21-4",[]],["title/21-5",[48,21.792,571,26.049]],["name/21-5",[]],["text/21-5",[]],["component/21-5",[]],["title/21-6",[94,21.53,404,19.49,558,19.951,559,14.66,615,19.951]],["name/21-6",[]],["text/21-6",[]],["component/21-6",[]],["title/21-7",[15,19.49,168,23.519,212,18.642,353,22.798,615,19.951]],["name/21-7",[]],["text/21-7",[]],["component/21-7",[]],["title/21-8",[161,12.969,213,32.243,214,36.47,370,32.243]],["name/21-8",[]],["text/21-8",[]],["component/21-8",[]],["title/21",[47,10.766,131,14.118,165,23.535,178,20.486]],["name/21",[178,2.119]],["text/21",[1,2.361,8,0.493,10,0.961,12,1.915,13,0.798,14,1.377,15,1.026,19,2.092,27,1.134,30,2.022,36,1.072,37,2.251,45,1.38,47,2.004,48,2.568,51,1.166,56,1.52,58,2.883,62,1.134,66,0.923,73,4.662,76,1.38,77,1.372,80,2.331,88,1.38,92,1.865,97,0.923,99,1.775,100,1.947,117,1.38,131,0.662,152,1.8,156,1.239,158,1.38,161,2.127,164,0.76,167,1.513,174,3.672,178,0.961,182,1.969,184,2.187,187,1.552,190,0.785,191,1.915,196,1.026,200,1.077,203,0.856,208,1.38,218,2.532,220,1.656,228,1.441,234,2.337,245,1.915,248,1.38,255,1.281,256,1.513,258,1.989,262,0.856,294,0.812,304,1.077,316,1.134,330,1.38,382,1.104,383,1.411,394,0.812,417,1.865,437,1.026,446,1.104,463,1.166,475,1.281,480,1.201,489,1.38,491,1.38,510,2.022,511,1.077,512,2.361,536,1.441,545,1.6,550,1.969,551,0.923,559,1.989,562,2.434,571,2.883,574,1.441,575,1.441,577,2.092,578,1.6,587,1.327,588,2.434,619,1.441,625,3.822,628,1.865,629,3.15,630,1.865,631,1.865,632,1.865,633,2.91,634,1.865,635,1.865,636,1.6,637,1.865,638,2.556,639,1.865,640,1.865,641,1.865,642,1.441,643,3.508,644,1.327,645,1.865,646,1.865,647,2.702,648,1.865,649,1.865,650,1.865,651,1.327,652,3.15,653,1.865]],["component/21",[8,0.418]],["title/22-1",[161,14.779,184,18.45,332,13.624]],["name/22-1",[]],["text/22-1",[]],["component/22-1",[]],["title/22-2",[164,14.424,332,10.651,558,19.951,559,14.66,560,19.054]],["name/22-2",[]],["text/22-2",[]],["component/22-2",[]],["title/22-3",[48,16.455,78,13.718,172,24.167,571,19.67]],["name/22-3",[]],["text/22-3",[]],["component/22-3",[]],["title/22-4",[184,16.191,560,21.388,580,26.399,654,39.746]],["name/22-4",[]],["text/22-4",[]],["component/22-4",[]],["title/22",[94,19.412,245,19.412,404,17.573,559,13.218,560,17.18,615,17.989]],["name/22",[559,1.702]],["text/22",[1,1.7,8,0.461,14,1.272,23,1.79,27,1.79,36,1.552,43,2.701,47,1.236,48,2.818,49,1.955,56,1.251,67,2.095,77,0.988,78,2.171,94,3.396,97,1.457,99,1.659,100,1.402,122,2.388,123,1.55,144,2.022,152,1.944,164,1.199,172,1.79,174,1.743,182,1.841,184,2.275,187,1.319,203,1.351,218,1.772,219,2.82,220,1.729,233,2.179,234,1.281,247,1.79,258,1.219,262,2.093,266,2.634,268,1.659,304,3.224,328,2.179,332,0.886,387,2.022,400,1.895,404,3.462,417,2.701,423,2.179,441,0.935,463,1.841,503,1.486,504,2.132,510,2.35,512,1.7,550,1.841,551,1.457,558,3.147,559,2.981,569,1.743,571,2.764,579,1.841,580,3.03,583,2.275,586,2.095,587,2.095,594,1.955,615,3.147,621,2.526,651,2.095,655,4.562,656,2.944,657,2.275,658,2.526,659,2.944,660,2.944,661,2.275,662,2.275,663,2.944,664,2.275,665,1.841,666,2.944,667,2.275,668,2.275,669,2.275,670,2.944,671,2.275,672,2.944,673,2.275]],["component/22",[8,0.418]],["title/23-1",[30,26.441]],["name/23-1",[]],["text/23-1",[]],["component/23-1",[]],["title/23-2",[220,13.374,383,18.167]],["name/23-2",[]],["text/23-2",[]],["component/23-2",[]],["title/23-3",[330,46.502]],["name/23-3",[]],["text/23-3",[]],["component/23-3",[]],["title/23",[14,7.654,19,12.652,37,15.999,100,13.84,220,7.385,383,10.032]],["name/23",[14,0.493,37,0.936,220,0.432]],["text/23",[2,0.627,8,0.195,12,0.755,14,0.21,25,1.638,30,1.944,34,1.727,36,0.423,42,2.745,48,1.725,49,0.825,52,1.71,56,0.813,65,3.131,70,1.14,77,0.417,99,0.7,100,0.591,116,0.96,117,0.919,129,1.247,130,1.066,131,0.786,152,0.924,158,0.919,161,3.033,164,0.901,179,1.987,195,2.688,203,1.373,210,0.717,211,0.919,212,1.165,220,0.562,223,0.853,225,0.919,248,0.919,275,1.425,277,2.603,279,0.8,313,1.008,316,0.755,320,1.14,330,1.638,332,1.092,375,0.55,382,0.735,383,1.947,394,0.963,400,0.8,401,1.14,404,0.684,427,1.008,430,1.575,438,0.8,439,0.668,459,1.31,475,0.853,497,4.709,508,0.853,531,3.431,536,0.96,551,1.481,568,1.47,591,4.214,594,3.551,602,0.873,604,1.987,665,1.383,674,1.242,675,1.242,676,0.884,677,1.066,678,1.242,679,2.213,680,1.242,681,2.585,682,2.992,683,1.242,684,1.242,685,3.22,686,1.242,687,1.242,688,1.242,689,1.066,690,1.242,691,1.898,692,1.575,693,1.242,694,4.562,695,1.066,696,2.213,697,1.066,698,4.166,699,1.242,700,1.242,701,0.884,702,1.066,703,4.297,704,1.575,705,0.96,706,1.242,707,1.242,708,1.242,709,1.242,710,0.96,711,1.242,712,1.242,713,1.066,714,1.242,715,3.574,716,2.213,717,2.213,718,0.884,719,1.242,720,0.884,721,2.992,722,0.884,723,3.116,724,1.242,725,1.242,726,3.963,727,1.242,728,1.242,729,1.242,730,1.242,731,1.242,732,1.242,733,1.242,734,1.242,735,1.242,736,1.242,737,1.242,738,1.242,739,2.992,740,1.242,741,2.992,742,2.312,743,2.992,744,6.345,745,2.992,746,3.632,747,1.242,748,1.575,749,3.632,750,1.242,751,4.132,752,2.213,753,1.242,754,1.242,755,2.213,756,1.242,757,1.242,758,1.242,759,1.242,760,1.242,761,2.213,762,1.242,763,1.242,764,1.242,765,1.242,766,1.242,767,2.992,768,1.242,769,1.242,770,2.213,771,2.213,772,2.213,773,1.242,774,1.242,775,1.242,776,1.242,777,2.213,778,1.242,779,1.242,780,1.242,781,1.242,782,0.96,783,0.96,784,1.242]],["component/23",[8,0.418]],["title/24",[14,6.734,78,13.718,187,11.49,785,28.291]],["name/24",[14,0.473,187,0.807]],["text/24",[14,1.408,47,1.774,56,1.662,66,3.241,78,2.562,131,1.719,184,2.667,187,2.146,190,2.036,203,2.22,213,5.312,266,2.793,353,3.115,441,1.536,500,2.663,501,2.663,504,2.261,568,3.214,615,2.726,692,3.444,785,3.444,786,3.444,787,3.739,788,5.061,789,4.151,790,4.151,791,3.444,792,4.838,793,4.838,794,4.838,795,4.838,796,4.838,797,4.838,798,4.838,799,4.838,800,4.838,801,4.838,802,4.151]],["component/24",[8,0.418]],["title/25",[19,17.3,551,19.67,571,19.67,658,34.101]],["name/25",[571,2.034]],["text/25",[8,0.55,10,2.686,14,1.054,15,3.422,19,2.269,30,2.193,35,2.846,36,1.194,44,1.977,47,0.95,48,2.158,51,2.194,56,0.786,66,1.736,76,2.597,81,2.33,96,3.01,99,1.977,100,2.96,106,3.01,140,2.026,164,1.429,167,4.228,187,1.507,209,1.808,218,2.994,219,1.772,220,2.082,238,1.931,245,2.133,253,2.194,262,1.61,267,1.61,279,4.003,333,3.858,346,2.846,383,1.211,394,2.269,404,1.931,412,2.846,510,2.193,546,3.01,551,2.579,559,2.158,560,1.888,569,2.078,571,3.077,577,2.33,580,3.462,587,2.497,633,3.71,636,3.01,638,4.817,676,2.497,803,3.509,804,3.509,805,3.509,806,3.509,807,3.509,808,3.509,809,3.509,810,3.01,811,3.509,812,3.509,813,3.509,814,3.509]],["component/25",[8,0.418]],["title/26-1",[332,18.898]],["name/26-1",[]],["text/26-1",[]],["component/26-1",[]],["title/26-2",[815,32.382]],["name/26-2",[]],["text/26-2",[]],["component/26-2",[]],["title/26",[220,11.508,510,19.062,577,30.083]],["name/26",[14,0.288,219,0.859,220,0.432,579,1.063]],["text/26",[7,0.985,11,1.571,14,0.854,30,0.604,34,0.828,36,1.141,48,1.04,78,0.495,97,0.71,111,2.591,152,2.341,161,2.87,174,0.849,184,1.366,187,0.726,190,1.057,200,0.828,203,0.658,218,1.564,219,2.033,220,1.538,223,2.302,234,0.624,262,0.658,266,0.828,267,0.658,296,0.739,312,1.618,332,0.756,333,1.061,368,0.923,394,1.094,417,0.849,421,1.45,430,3.033,441,0.798,447,1.196,459,2.384,496,0.923,498,1.323,501,0.789,503,1.269,504,1.174,510,1.057,549,1.021,559,0.594,569,0.849,571,1.243,573,1.23,574,1.108,577,0.953,591,3.346,594,1.669,598,1.021,608,1.021,638,0.897,644,1.021,651,1.021,661,1.108,662,1.108,664,1.108,667,1.108,685,1.108,704,1.021,718,1.788,720,2.866,722,2.866,751,1.942,816,1.108,817,1.23,818,1.23,819,1.434,820,1.23,821,1.23,822,1.23,823,1.434,824,1.434,825,1.108,826,1.108,827,1.434,828,1.108,829,1.108,830,1.108,831,1.108,832,1.434,833,1.434,834,1.434,835,5.192,836,0.953,837,4.943,838,4.943,839,1.23,840,4.453,841,4.943,842,4.943,843,4.943,844,3.454,845,7.068,846,6.188,847,6.188,848,6.188,849,4.578,850,2.512,851,2.512,852,4.026,853,2.156,854,2.156,855,2.512,856,1.434,857,1.434,858,1.434,859,2.512,860,4.026,861,3.353,862,3.353,863,2.512,864,3.353,865,3.454,866,2.877,867,1.434,868,1.434,869,1.434,870,1.434,871,1.434,872,1.434,873,1.434,874,1.434]],["component/26",[8,0.418]],["title/27-1",[332,18.898]],["name/27-1",[]],["text/27-1",[]],["component/27-1",[]],["title/27-2",[815,32.382]],["name/27-2",[]],["text/27-2",[]],["component/27-2",[]],["title/27-3",[412,36.743,647,38.859,875,45.293]],["name/27-3",[]],["text/27-3",[]],["component/27-3",[]],["title/27",[14,6.734,187,11.49,220,10.098,510,16.728]],["name/27",[14,0.288,187,0.492,219,0.859,220,0.432]],["text/27",[14,1.153,15,1.62,36,1.002,48,1.219,56,0.659,78,1.574,97,1.457,131,1.046,152,0.91,161,2.705,184,1.199,187,1.615,200,2.634,203,2.563,218,2.444,219,3.792,220,2.106,226,1.659,254,3.701,262,1.351,266,1.7,312,2.937,332,0.886,368,1.895,370,2.388,383,1.016,394,2.738,421,1.7,430,2.402,441,0.935,501,1.62,503,2.303,504,2.132,510,1.239,551,1.457,559,1.889,569,1.743,575,2.275,591,1.955,598,2.095,638,1.841,651,2.095,661,2.275,662,2.275,664,2.275,704,2.095,720,3.247,722,3.247,786,2.095,816,2.275,818,2.526,820,2.526,835,3.914,836,1.955,837,2.526,838,2.526,839,2.526,840,2.275,841,2.526,842,2.526,843,2.526,844,3.914,846,3.914,847,3.914,848,3.914,853,2.526,854,2.526,866,2.526,876,2.944,877,2.944,878,2.944,879,2.944,880,2.944,881,2.944,882,4.562,883,2.944,884,2.944,885,2.944,886,2.944,887,4.562,888,2.944,889,4.562,890,2.944,891,2.944,892,2.944]],["component/27",[8,0.418]],["title/28-1",[78,15.632,590,32.238,893,30.083]],["name/28-1",[]],["text/28-1",[]],["component/28-1",[]],["title/28",[48,14.66,56,7.929,164,14.424,184,14.424,258,14.66]],["name/28",[78,0.729,164,0.861,581,1.321]],["text/28",[10,1.374,11,1.667,14,1.17,27,2.566,33,1.186,34,1.539,36,1.202,47,0.416,48,0.635,56,1.07,58,0.76,73,1.771,77,0.894,78,1.649,81,1.02,110,0.988,120,1.716,126,1.136,131,0.545,152,1.929,161,2.86,164,1.086,165,1.579,174,1.579,178,0.791,182,0.96,184,1.439,186,1.245,187,1.515,190,1.487,198,1.136,203,0.704,205,1.136,207,0.988,212,1.403,218,1.036,219,2.841,220,1.514,221,0.96,234,0.668,238,0.845,253,0.96,255,1.054,258,1.104,262,1.223,267,0.704,268,0.865,270,1.831,275,0.988,294,0.668,296,1.374,303,1.973,304,0.886,316,0.933,332,1.063,364,1.054,383,1.22,421,0.886,430,0.808,440,1.245,441,0.846,447,1.269,448,1.245,480,0.988,500,0.845,501,1.467,502,0.988,503,1.784,504,1.651,510,0.646,511,0.886,518,0.933,549,1.898,557,1.186,558,1.991,559,2.467,560,0.826,579,0.96,589,1.317,590,1.093,602,1.079,608,1.093,615,2.692,616,1.093,625,2.515,626,3.174,627,2.287,633,1.093,669,2.06,671,2.731,673,2.06,676,1.093,710,2.06,783,2.06,791,1.093,810,1.317,825,2.731,826,2.731,828,2.731,829,2.731,830,1.186,831,1.186,836,1.771,893,1.02,894,2.287,895,1.535,896,1.535,897,1.186,898,1.317,899,2.287,900,2.287,901,1.317,902,1.317,903,1.093,904,1.317,905,2.287,906,1.898,907,3.534,908,2.287,909,2.06,910,4.099,911,4.099,912,3.534,913,1.535,914,2.666,915,1.317,916,1.317,917,1.535,918,1.535,919,1.535,920,1.535,921,2.06,922,1.535,923,1.535,924,1.317,925,1.317,926,2.287,927,3.032,928,1.317,929,2.287,930,1.317,931,1.186,932,1.317,933,1.317,934,1.317,935,2.287,936,1.317,937,1.317,938,1.317,939,3.621,940,1.317,941,1.317,942,1.317,943,1.317,944,1.317,945,1.317,946,1.317,947,1.317,948,1.317,949,1.317,950,2.287,951,1.317,952,1.186,953,1.317,954,1.317,955,1.317,956,1.317,957,1.317,958,1.317,959,1.317,960,1.317,961,1.317]],["component/28",[8,0.418]],["title/29-1",[78,15.632,601,32.238,893,30.083]],["name/29-1",[]],["text/29-1",[]],["component/29-1",[]],["title/29-2",[78,15.632,893,30.083,962,38.859]],["name/29-2",[]],["text/29-2",[]],["component/29-2",[]],["title/29",[48,14.66,56,7.929,184,14.424,258,14.66,963,35.41]],["name/29",[78,0.587,164,0.693,581,1.063,964,1.7]],["text/29",[8,0.097,10,1.075,11,1.304,14,1.146,23,0.707,27,2.104,33,0.899,34,1.205,36,0.965,41,1.693,44,0.348,47,0.315,56,0.555,58,0.816,71,1.067,73,1.647,78,1.53,81,0.772,120,1.343,126,0.457,131,0.413,135,0.529,152,1.432,161,2.889,164,0.474,165,0.689,174,1.469,184,1.01,186,0.943,187,1.535,190,1.456,191,0.707,198,0.861,203,0.283,205,0.861,206,0.457,207,0.749,209,0.599,212,1.098,218,0.452,219,1.885,220,1.072,221,0.727,223,0.799,227,1.033,234,0.506,238,0.64,244,0.566,247,0.375,253,1.304,255,0.799,258,0.255,262,0.957,267,1.588,268,0.655,270,1.703,274,0.457,275,1.062,277,0.93,287,0.457,295,0.477,296,0.599,303,1.544,304,0.671,312,0.749,316,0.707,332,0.951,350,0.348,364,0.799,368,1.343,383,0.979,394,0.269,411,2.604,421,0.671,425,0.529,430,1.306,435,0.566,440,0.943,441,0.787,447,0.993,448,0.943,480,1.062,496,1.062,498,1.098,500,0.908,501,1.148,502,1.343,503,1.433,504,1.745,510,0.694,511,0.952,512,0.356,518,1.003,531,0.375,535,0.477,549,2.02,557,0.899,558,1.599,559,1.996,560,0.626,579,0.386,601,0.439,602,4.336,608,0.828,615,2.245,616,0.439,625,1.174,633,0.828,638,0.386,643,0.529,657,0.477,667,0.899,668,0.477,669,1.917,671,2.193,673,1.612,676,0.828,692,0.439,701,1.174,702,0.529,710,1.612,718,0.828,751,0.899,783,1.612,786,1.485,787,0.899,788,0.899,789,0.998,790,0.998,791,0.828,802,4.425,822,1.415,825,0.899,826,0.899,828,5.609,829,2.193,830,0.899,831,0.477,836,1.647,840,1.275,893,1.096,894,0.998,897,0.899,898,0.998,899,1.79,900,1.79,901,0.529,902,0.998,903,0.828,904,0.998,905,1.79,906,1.485,908,2.434,909,1.917,910,1.79,911,1.79,915,0.998,916,0.998,921,1.917,924,0.998,925,0.998,926,1.79,927,2.434,928,0.998,929,1.79,930,0.998,931,0.899,932,0.998,933,0.998,934,0.998,935,1.79,936,0.998,937,0.998,938,0.998,939,2.969,940,0.998,941,0.998,942,0.998,943,0.998,944,0.998,945,0.998,946,0.998,947,0.998,948,0.998,949,0.998,950,1.79,951,0.998,952,0.899,953,1.415,954,0.998,955,0.998,956,0.998,957,0.998,958,0.998,959,1.415,960,0.998,961,0.529,962,0.529,965,0.617,966,0.617,967,0.617,968,0.617,969,2.128,970,0.617,971,0.617,972,1.65,973,1.415,974,0.617,975,0.617,976,1.163,977,0.617,978,0.617,979,1.163,980,1.163,981,1.163,982,1.163,983,1.163,984,1.163,985,0.617,986,0.617,987,0.617,988,1.163,989,0.617,990,2.086,991,0.617,992,0.617,993,0.617,994,0.617,995,0.617,996,0.617,997,2.48,998,0.617,999,1.163,1000,0.617,1001,1.163,1002,1.163,1003,0.617,1004,0.617,1005,0.617,1006,0.617,1007,0.617,1008,0.617,1009,0.617,1010,2.837,1011,1.163,1012,1.163,1013,1.163,1014,3.985,1015,1.163,1016,1.163,1017,0.998,1018,1.163,1019,1.163,1020,0.617,1021,0.617,1022,0.617,1023,0.617,1024,0.617,1025,0.617,1026,0.617,1027,0.617,1028,0.617,1029,0.617,1030,0.617,1031,2.086,1032,0.617,1033,0.617,1034,0.617,1035,1.65,1036,0.617,1037,0.617,1038,0.617,1039,1.163,1040,1.163,1041,0.617,1042,0.617,1043,2.837,1044,1.163,1045,0.617,1046,0.617,1047,0.617,1048,2.837,1049,0.617,1050,1.163,1051,2.837,1052,2.837,1053,0.617,1054,1.65,1055,0.617,1056,0.617,1057,0.617,1058,0.617,1059,0.617,1060,0.617,1061,0.617,1062,1.163,1063,0.617,1064,0.617,1065,0.617,1066,0.617,1067,0.617,1068,0.617]],["component/29",[8,0.418]],["title/30",[]],["name/30",[581,1.745,1069,2.395]],["text/30",[110,4.848,350,4.243,1069,6.461]],["component/30",[8,0.418]],["title/31-1",[0,46.502]],["name/31-1",[]],["text/31-1",[]],["component/31-1",[]],["title/31-2",[78,18.167,533,40.678]],["name/31-2",[]],["text/31-2",[]],["component/31-2",[]],["title/31-3",[47,10.766,56,8.9,332,11.956,441,12.618]],["name/31-3",[]],["text/31-3",[]],["component/31-3",[]],["title/31-4",[332,15.833,496,33.889]],["name/31-4",[]],["text/31-4",[]],["component/31-4",[]],["title/31-5",[8,7.096,372,21.166,497,31.102]],["name/31-5",[]],["text/31-5",[]],["component/31-5",[]],["title/31-6",[296,18.251,365,16.547,375,15.681,498,18.642,499,26.209]],["name/31-6",[]],["text/31-6",[]],["component/31-6",[]],["title/31",[7,36.146,479,32.005]],["name/31",[9,2.075]],["text/31",[8,1.148,13,1.317,14,1.091,36,1.606,47,1.881,51,1.924,56,1.286,57,2.641,66,1.523,97,1.523,129,1.734,131,2.467,152,0.951,156,2.044,161,1.54,187,1.365,196,2.598,209,1.586,210,1.777,220,1.199,221,1.924,226,1.734,227,1.523,234,3.023,237,2.191,238,1.694,262,2.166,267,1.412,268,1.734,277,1.734,294,1.34,332,1.937,365,3.009,369,2.191,372,2.206,373,3.36,374,2.485,375,3.076,383,1.062,394,1.34,418,1.694,439,2.54,441,2.044,446,1.822,447,1.465,463,1.924,479,1.871,480,1.982,500,1.694,501,1.694,502,1.982,503,1.554,504,1.438,505,2.278,506,3.494,507,2.278,508,2.114,509,2.114,510,1.295,511,1.777,512,1.777,513,2.278,514,4.767,515,2.871,516,2.278,517,3.494,518,1.871,519,2.278,520,2.114,521,3.494,522,3.494,523,2.278,524,2.278,525,2.278,526,2.278,527,2.278,528,2.114,529,2.278,530,2.114,531,1.871]],["component/31",[8,0.418]],["title/32",[125,38.96,479,32.005]],["name/32",[9,2.075]],["text/32",[350,4.34]],["component/32",[8,0.418]],["title/33",[479,38.201]],["name/33",[9,2.075]],["text/33",[350,4.34]],["component/33",[8,0.418]],["title/34",[14,6.734,56,8.9,294,17.3,447,18.924]],["name/34",[14,0.288,294,0.74,447,0.81,815,0.876]],["text/34",[14,1.047,25,2.57,36,1.182,56,1.384,58,1.719,63,2.472,72,2.307,77,1.165,78,1.199,123,1.828,152,1.073,158,2.57,161,2.93,187,1.495,190,1.462,191,2.112,192,2.817,200,2.986,202,2.57,203,1.593,207,2.236,209,1.79,223,3.552,234,2.251,247,2.112,275,4.942,294,2.69,332,1.045,364,2.385,415,2.472,427,2.817,480,3.33,498,1.828,540,4.437,550,2.171,586,2.472,665,3.233,692,2.472,713,5.302,815,1.79,821,5.875,897,2.684,1070,3.997,1071,2.684,1072,2.684,1073,5.302,1074,3.473,1075,3.473,1076,3.473,1077,3.473,1078,3.473,1079,3.473,1080,3.473,1081,5.172,1082,3.473,1083,3.473,1084,5.172,1085,3.473,1086,3.473,1087,3.473,1088,3.473,1089,3.473,1090,3.473,1091,2.979,1092,3.473,1093,3.473]],["component/34",[8,0.418]],["title/35",[14,4.925,21,17.212,56,6.509,190,12.233,220,7.385,383,10.032,441,9.228]],["name/35",[14,0.241,220,0.361,439,0.765,441,0.452,815,0.733]],["text/35",[2,0.81,12,0.975,14,0.619,21,0.95,28,1.24,29,2.14,30,2.26,36,2.167,37,1.524,54,1.472,56,0.818,58,0.794,65,1.003,66,1.371,72,1.065,76,1.187,77,0.538,89,2.059,100,1.319,123,2.29,131,1.298,140,1.599,152,1.88,156,1.065,161,3.086,181,2.541,190,1.538,195,1.187,196,0.883,218,1.076,220,1.546,226,0.904,233,1.187,234,0.698,266,1.599,267,1.996,270,1.101,279,1.783,314,1.187,332,1.616,356,1.065,364,1.902,383,1.854,394,0.698,415,1.971,416,1.301,421,0.926,430,1.458,436,3.458,437,1.524,439,1.49,441,2.022,442,1.472,446,2.164,452,2.51,454,1.472,492,1.301,498,1.924,503,1.398,504,0.75,509,1.101,510,1.166,511,1.599,518,0.975,528,2.51,556,2.14,570,1.376,598,1.142,600,1.376,622,1.376,665,1.003,668,1.24,681,1.971,694,2.14,704,1.142,726,1.376,748,2.601,785,2.601,815,0.827,1070,1.24,1071,1.24,1072,1.24,1073,4.94,1091,1.376,1094,1.376,1095,2.77,1096,2.77,1097,2.376,1098,1.604,1099,1.604,1100,1.604,1101,2.77,1102,1.604,1103,3.655,1104,2.77,1105,2.77,1106,1.604,1107,1.604,1108,1.604,1109,2.77,1110,2.376,1111,2.376,1112,2.77,1113,1.604,1114,2.77,1115,1.604,1116,1.604,1117,1.604,1118,1.604,1119,1.604,1120,1.604,1121,1.604,1122,1.604,1123,1.376,1124,1.604,1125,1.604,1126,1.604,1127,1.376,1128,1.604,1129,1.604,1130,1.604,1131,1.604,1132,1.604,1133,1.604,1134,2.824,1135,1.376,1136,1.604,1137,1.376,1138,2.77,1139,1.376,1140,1.376,1141,1.604,1142,3.732,1143,1.376,1144,1.604,1145,1.604,1146,1.604,1147,1.604]],["component/35",[8,0.418]],["title/36",[14,6.734,78,13.718,187,11.49,206,29.418]],["name/36",[14,0.358,187,0.611,815,1.089]],["text/36",[10,2.476,14,1.405,36,1.635,41,3.897,58,2.377,72,3.191,77,1.612,78,1.658,92,2.845,123,2.529,140,2.773,161,2.413,184,2.655,187,1.884,227,3.225,247,2.921,264,4.408,272,3.897,368,3.093,479,4.497,504,3.456,515,2.921,665,3.003,782,3.713,786,5.264,787,5.036,788,3.713,815,2.476,969,4.122,1017,4.122,1070,3.713,1071,3.713,1072,3.713,1148,6.517,1149,4.804,1150,4.804,1151,4.804]],["component/36",[8,0.418]],["title/37",[14,8.891,234,15.413,294,15.413,447,16.859]],["name/37",[14,0.288,47,0.461,294,0.74,447,0.81]],["text/37",[8,0.722,13,1.972,14,1.384,27,3.851,48,1.908,56,1.032,58,2.28,60,3.953,131,1.637,152,1.424,161,2.362,184,2.58,187,1.831,191,2.802,203,2.114,218,1.79,220,1.171,253,3.96,260,4.228,266,2.66,284,3.738,287,3.41,294,3.392,326,4.228,365,2.153,372,2.153,374,2.426,375,2.041,432,3.164,436,2.967,447,3.016,475,3.164,494,3.41,952,3.561,973,3.953,1152,3.06,1153,4.608,1154,4.608,1155,3.953,1156,4.608,1157,4.608,1158,4.608,1159,4.608,1160,4.608,1161,3.953,1162,3.953]],["component/37",[8,0.418]],["title/38-1",[62,38.201]],["name/38-1",[]],["text/38-1",[]],["component/38-1",[]],["title/38",[152,12.28,437,21.877,438,25.589,452,27.293]],["name/38",[47,0.572,437,1.163,438,1.361]],["text/38",[2,0.925,8,0.158,14,0.427,30,0.424,37,0.554,45,2.297,56,0.41,65,3.609,131,0.358,144,0.692,152,0.779,161,3.13,174,0.596,200,1.058,209,2.08,212,0.53,218,0.391,220,0.466,267,0.841,298,0.745,312,2.32,365,0.471,372,0.471,374,0.53,375,0.446,383,0.632,387,0.692,416,0.817,430,4.156,437,1.387,438,2.32,452,1.258,459,0.596,482,0.745,491,0.745,531,3.51,551,0.498,586,0.717,591,2.061,594,2.061,604,1.217,618,0.778,626,1.217,638,0.63,642,0.778,681,0.717,685,2.398,689,0.864,691,0.864,694,1.416,695,0.864,697,0.864,701,4.377,703,4.952,715,4.952,718,2.873,720,0.717,722,0.717,723,0.864,791,0.717,836,0.669,865,0.864,1097,0.864,1152,0.669,1163,1.007,1164,1.007,1165,1.007,1166,1.007,1167,1.007,1168,1.007,1169,1.007,1170,7.838,1171,6.859,1172,7.838,1173,7.838,1174,7.838,1175,1.007,1176,1.007,1177,5.772,1178,1.007,1179,1.007,1180,1.007,1181,2.52,1182,1.007,1183,2.52,1184,1.007,1185,1.832,1186,5.315,1187,1.832,1188,1.007,1189,1.007,1190,1.832,1191,1.007,1192,1.007,1193,1.007,1194,1.007,1195,1.007,1196,1.007,1197,1.007,1198,1.007,1199,1.007,1200,1.007,1201,1.007,1202,1.007,1203,1.007,1204,1.007,1205,1.832,1206,1.007,1207,1.007,1208,1.007,1209,1.007,1210,1.007,1211,1.007,1212,1.007,1213,1.007,1214,1.832,1215,1.007,1216,1.007,1217,1.007,1218,1.007,1219,1.007,1220,1.007,1221,1.007]],["component/38",[8,0.418]],["title/39-1",[62,38.201]],["name/39-1",[]],["text/39-1",[]],["component/39-1",[]],["title/39-2",[227,26.049,498,27.712]],["name/39-2",[]],["text/39-2",[]],["component/39-2",[]],["title/39-3",[227,26.049,705,40.678]],["name/39-3",[]],["text/39-3",[]],["component/39-3",[]],["title/39-4",[227,26.049,1222,45.161]],["name/39-4",[]],["text/39-4",[]],["component/39-4",[]],["title/39-5",[227,26.049,430,27.712]],["name/39-5",[]],["text/39-5",[]],["component/39-5",[]],["title/39-6",[247,32.005,277,29.658]],["name/39-6",[]],["text/39-6",[]],["component/39-6",[]],["title/39-7",[394,27.346]],["name/39-7",[]],["text/39-7",[]],["component/39-7",[]],["title/39",[14,6,190,14.903,220,8.997,383,12.221,441,11.241]],["name/39",[14,0.241,47,0.385,220,0.361,439,0.765,441,0.452]],["text/39",[2,0.749,12,1.574,14,0.793,21,0.879,30,1.736,36,0.881,56,1.238,66,0.735,67,1.057,100,1.233,105,1.147,119,3.346,129,2.324,131,0.527,140,2.967,152,1.9,161,2.659,172,0.903,190,1.09,198,1.099,202,2.549,209,0.765,218,0.577,220,1.683,227,2.544,229,1.147,238,0.817,247,1.574,250,1.362,253,1.619,258,0.615,267,3.129,279,0.956,282,1.204,365,0.694,367,1.362,372,0.694,374,0.782,375,0.657,378,1.204,379,1.362,383,2.518,387,1.019,389,3.16,415,1.843,426,1.204,430,3.086,432,1.019,436,1.667,437,3.753,438,3.56,439,1.393,441,1.093,443,1.362,446,1.533,452,1.778,459,1.533,482,1.099,493,1.204,498,3.766,500,0.817,515,3.564,530,1.019,534,1.274,535,1.147,544,1.147,568,1.72,626,4.084,642,1.147,644,1.843,657,1.147,681,1.843,701,2.451,705,2.001,748,3.935,785,1.057,816,1.147,817,1.274,903,1.057,906,2.936,909,2.661,921,2.661,931,1.147,1111,5.029,1123,2.222,1127,2.222,1134,2.661,1135,2.222,1137,1.274,1139,1.274,1140,2.222,1142,1.274,1143,2.222,1152,0.986,1155,1.274,1222,1.274,1223,2.589,1224,2.589,1225,2.589,1226,1.484,1227,2.589,1228,2.589,1229,2.589,1230,2.589,1231,1.484,1232,1.484,1233,2.589,1234,1.484,1235,2.589,1236,1.484,1237,1.484,1238,1.484,1239,2.589,1240,2.589,1241,2.589,1242,1.484,1243,1.484,1244,1.484,1245,1.484,1246,1.484,1247,2.589,1248,2.589,1249,1.484,1250,1.484,1251,1.484,1252,1.484,1253,1.484,1254,1.484,1255,2.589,1256,1.484,1257,1.484,1258,1.484,1259,1.484,1260,1.484,1261,1.484,1262,1.484,1263,1.484,1264,1.484,1265,1.484,1266,1.484,1267,1.484,1268,1.484,1269,1.484,1270,1.484,1271,1.484,1272,1.484,1273,1.484,1274,1.484,1275,1.484,1276,1.484,1277,1.484,1278,1.484,1279,1.484,1280,1.484,1281,1.484,1282,1.484]],["component/39",[8,0.418]],["title/40",[14,7.674,220,11.508,383,15.632]],["name/40",[14,0.288,47,0.461,220,0.432,439,0.915]],["text/40",[12,2.9,14,1.445,19,2.076,30,2.008,44,2.688,47,1.292,56,1.068,100,2.271,131,1.694,144,3.276,161,2.405,190,2.008,210,2.754,220,2.256,267,2.189,365,2.229,372,2.229,374,2.511,375,2.112,383,2.854,432,3.276,436,4.176,437,2.626,439,3.965,441,2.059,515,2.9,569,2.825,619,3.686,626,3.168,1134,3.686,1152,3.168,1283,4.77,1284,4.77]],["component/40",[8,0.418]],["title/41-1",[168,23.519,212,18.642,281,27.365,288,28.726,353,22.798]],["name/41-1",[]],["text/41-1",[]],["component/41-1",[]],["title/41-2",[14,7.674,152,13.994,187,13.094]],["name/41-2",[]],["text/41-2",[]],["component/41-2",[]],["title/41-3",[10,32.382]],["name/41-3",[]],["text/41-3",[]],["component/41-3",[]],["title/41-4",[220,15.962]],["name/41-4",[]],["text/41-4",[]],["component/41-4",[]],["title/41",[8,5.002,14,8.226,23,19.412,187,9.23,1285,31.927]],["name/41",[14,0.358,47,0.572,187,0.611]],["text/41",[1,1.286,2,1.124,8,0.572,14,1.189,15,1.226,21,2.748,23,1.354,34,2.108,44,1.255,47,0.989,48,0.922,49,1.479,52,1.721,56,0.818,63,1.585,65,1.392,73,1.479,78,0.769,89,3.953,92,2.162,95,1.721,99,1.255,105,2.822,123,1.172,131,1.648,139,1.721,140,1.286,150,1.911,152,1.966,161,1.751,165,1.319,168,1.479,179,1.479,184,1.487,187,1.713,190,0.937,191,2.22,192,1.807,196,1.226,199,3.35,200,2.679,201,2.043,202,2.702,203,2.129,205,1.648,206,2.702,207,1.434,208,1.648,209,1.148,210,2.108,211,3.973,212,2.443,218,0.865,220,0.566,225,1.648,228,1.721,233,1.648,241,2.043,245,1.354,255,3.186,256,1.807,257,2.043,258,0.922,262,1.022,266,1.286,267,2.129,268,2.615,269,3.82,270,1.529,271,4.258,272,3.764,273,2.043,274,1.648,275,1.434,276,4.258,277,1.255,279,1.434,280,2.043,281,4.148,282,1.807,283,2.043,284,1.807,285,2.043,286,2.043,287,1.648,288,1.807,289,3.35,290,2.043,291,2.043,292,2.043,293,2.043,294,1.589,295,1.721,296,1.148,298,1.648,299,3.133,300,2.043,301,2.043,302,2.043,303,2.702,304,1.286,305,4.925,306,2.043,307,3.35,308,2.043,309,2.043,310,4.258,311,2.043,312,1.434,313,2.962,314,1.648,316,1.354,317,2.043,318,2.043,319,2.043,353,1.434,358,2.043,360,2.043,365,1.041,372,1.041,374,1.172,375,0.986,432,1.529,504,1.041,544,1.721,571,1.102,585,3.133,1152,1.479,1161,1.911,1162,1.911,1286,2.227,1287,2.227,1288,2.227,1289,2.227,1290,2.227,1291,2.227]],["component/41",[8,0.418]],["title/42",[110,33.889,479,32.005]],["name/42",[9,2.075]],["text/42",[350,4.34]],["component/42",[8,0.418]],["title/43-1",[0,46.502]],["name/43-1",[]],["text/43-1",[]],["component/43-1",[]],["title/43-2",[78,18.167,533,40.678]],["name/43-2",[]],["text/43-2",[]],["component/43-2",[]],["title/43-3",[47,10.766,56,8.9,332,11.956,441,12.618]],["name/43-3",[]],["text/43-3",[]],["component/43-3",[]],["title/43-4",[332,15.833,496,33.889]],["name/43-4",[]],["text/43-4",[]],["component/43-4",[]],["title/43-5",[8,7.096,372,21.166,497,31.102]],["name/43-5",[]],["text/43-5",[]],["component/43-5",[]],["title/43-6",[296,18.251,365,16.547,375,15.681,498,18.642,499,26.209]],["name/43-6",[]],["text/43-6",[]],["component/43-6",[]],["title/43",[7,36.146,478,38.96]],["name/43",[9,2.075]],["text/43",[8,1.257,13,2.116,36,1.683,47,1.615,51,2.045,56,1.335,66,1.619,89,1.843,97,1.619,129,1.843,131,2.361,161,1.614,187,0.946,196,2.722,209,1.686,210,1.889,218,1.271,221,2.045,226,1.843,227,1.619,234,3.106,237,2.328,238,1.801,262,2.269,267,1.501,268,1.843,277,1.843,332,1.999,356,2.173,365,3.106,369,2.328,372,2.311,373,3.52,374,2.604,375,3.16,382,1.937,383,1.129,394,1.424,441,2.11,463,2.045,478,2.421,500,1.801,501,1.801,502,2.106,503,1.652,504,1.529,505,2.421,506,3.66,507,2.421,508,2.246,509,2.246,510,1.377,511,1.889,512,1.889,513,2.421,514,4.919,515,3.007,516,2.421,517,3.66,518,1.989,519,2.421,520,2.246,521,3.66,522,3.66,523,2.421,524,2.421,525,2.421,526,2.421,527,2.421,528,2.246,529,2.421,530,2.246,531,1.989]],["component/43",[8,0.418]],["title/44",[8,7.096,13,19.383,441,14.379]],["name/44",[9,2.075]],["text/44",[8,1.26,13,3.628,47,1.974,56,1.275,89,4.776,97,3.607,126,4.214,132,5.224,190,2.396,269,4.052,356,4.841,382,3.371,398,5.224,441,1.807,568,3.781,618,4.4,677,4.885,1110,4.885,1292,5.693,1293,5.693,1294,5.693]],["component/44",[8,0.418]],["title/45-1",[383,18.167,815,27.131]],["name/45-1",[]],["text/45-1",[]],["component/45-1",[]],["title/45-2",[89,29.658,742,40.678]],["name/45-2",[]],["text/45-2",[]],["component/45-2",[]],["title/45",[8,5.548,13,15.153,56,7.929,446,20.967,1295,35.41]],["name/45",[13,1.195,815,1.439]],["text/45",[1,1.714,8,1.071,13,3.331,34,1.714,36,1.011,47,1.851,56,1.618,58,1.47,66,1.47,72,1.973,80,2.198,89,4.681,92,1.758,97,1.47,99,1.673,100,2.187,111,2.295,129,3.164,140,1.714,152,2.111,161,2.358,164,1.21,207,1.912,218,1.784,226,3.164,242,2.409,269,3.269,274,3.399,294,1.293,298,2.198,332,1.382,368,1.912,387,3.154,392,2.725,394,1.293,400,1.912,404,1.635,441,1.458,446,4.609,494,2.198,520,3.154,644,3.269,665,1.857,742,3.549,748,3.269,782,2.295,903,3.269,906,2.114,1094,2.548,1296,4.593,1297,2.97,1298,6.32,1299,2.97,1300,2.97,1301,2.97,1302,2.97,1303,2.97,1304,2.97,1305,4.593,1306,5.616,1307,4.593,1308,2.97,1309,2.97,1310,2.97,1311,2.97,1312,2.97,1313,2.97,1314,2.97,1315,2.97,1316,2.97,1317,2.97]],["component/45",[8,0.418]],["title/46",[110,33.889,478,38.96]],["name/46",[9,2.075]],["text/46",[350,4.34]],["component/46",[8,0.418]],["title/47-1",[0,46.502]],["name/47-1",[]],["text/47-1",[]],["component/47-1",[]],["title/47-2",[1,36.271]],["name/47-2",[]],["text/47-2",[]],["component/47-2",[]],["title/47-3",[2,26.577,3,48.299]],["name/47-3",[]],["text/47-3",[]],["component/47-3",[]],["title/47-4",[3,48.299,4,48.299]],["name/47-4",[]],["text/47-4",[]],["component/47-4",[]],["title/47-5",[5,50.967]],["name/47-5",[]],["text/47-5",[]],["component/47-5",[]],["title/47-6",[6,62.827]],["name/47-6",[]],["text/47-6",[]],["component/47-6",[]],["title/47",[7,36.146,8,8.247]],["name/47",[9,2.075]],["text/47",[1,4.246,3,3.901,4,1.806,5,1.596,6,1.968,8,0.997,10,2.191,11,2.658,12,3.024,13,1.819,14,1.078,15,2.737,16,1.968,17,1.806,18,1.968,19,1.434,20,1.968,21,1.165,22,1.968,23,2.004,24,1.688,25,1.457,26,2.673,27,1.197,28,1.521,29,1.521,30,0.828,31,1.806,32,1.968,33,2.547,34,1.903,35,2.673,36,1.447,37,1.814,38,2.233,39,1.806,40,2.233,41,1.596,42,1.806,43,1.806,44,1.857,45,1.457,46,2.233,47,1.622,48,0.815,49,2.824,50,2.233,51,1.23,52,1.521,53,1.968,54,1.806,55,2.233,56,1.114,57,2.827,58,1.631,59,2.233,60,1.688,61,1.968,62,1.197,63,3.026,64,3.739,65,2.06,66,2.104,67,1.401,68,2.233,69,4.823,70,1.806,71,3.024,72,1.307,73,1.307,74,1.596,75,1.806,76,1.457,77,0.66,78,1.137,79,2.233,80,1.457,81,1.307,82,2.233,83,1.968,84,1.688,85,2.233,86,2.233,87,3.296,88,1.457,89,1.857,91,2.233,92,1.165,93,3.739,94,1.197,95,1.521,96,1.688,97,1.631,98,2.233,99,1.109,100,1.569,101,2.233,102,2.233,103,3.739,104,2.233,105,1.521,106,1.688,107,2.233,108,2.233,109,2.233,110,1.267,111,1.521,112,1.596,113,1.968,114,1.688,115,1.806,116,1.521,117,1.457,118,1.968,119,1.596,120,1.267,121,1.968,122,1.596,123,1.735,124,1.688,125,2.439,126,1.457,127,2.233,128,1.968,129,1.109,130,1.688,131,1.51,132,3.024,133,2.233,134,1.806,135,1.688,136,1.968,137,2.233,138,2.233,139,2.547,140,1.136,141,1.968,142,1.806,143,3.901,144,1.351,145,1.457,146,2.233,147,2.233,148,2.233,149,2.233,150,1.688,151,2.233,152,1.018,153,2.233,154,2.233,155,2.233,156,1.307,157,1.968,158,1.457,159,2.233,160,2.233,161,0.642,162,2.233,163,1.968,164,0.802,165,1.165,166,2.233,167,1.596,168,1.307,169,2.233,170,2.233,171,2.233,172,1.197,173,1.968,174,1.165,175,2.233,176,2.233,177,2.233,464,1.763]],["component/47",[8,0.418]],["title/48-1",[8,6.227,36,13.524,62,24.167,178,20.486]],["name/48-1",[]],["text/48-1",[]],["component/48-1",[]],["title/48-2",[179,41.729]],["name/48-2",[]],["text/48-2",[]],["component/48-2",[]],["title/48-3",[14,10.645]],["name/48-3",[]],["text/48-3",[]],["component/48-3",[]],["title/48",[178,32.382]],["name/48",[178,2.119]],["text/48",[2,0.816,8,0.685,14,1.16,15,1.534,17,1.482,21,2.176,23,0.982,27,2.234,30,1.546,34,1.609,35,1.311,36,0.55,44,0.91,45,2.063,47,0.438,48,1.154,49,1.073,52,1.248,56,0.979,60,1.386,62,0.982,63,2.615,67,1.15,84,1.386,89,3.441,92,2.588,105,3.378,106,1.386,114,1.386,122,2.981,123,0.851,131,0.574,140,0.933,142,2.557,150,1.386,152,2.049,165,0.957,168,1.073,179,4.406,180,4.958,181,1.482,182,1.01,183,1.833,184,2.009,185,1.616,186,1.311,187,1.98,188,3.161,189,1.833,190,1.546,191,2.998,192,2.261,193,4.958,194,1.833,195,1.196,196,2.022,197,1.833,198,1.196,199,3.372,200,2.121,201,1.482,202,1.196,203,2.931,204,1.833,205,1.196,206,2.063,207,1.04,208,2.063,209,0.833,210,1.609,211,3.65,212,1.467,213,1.311,214,1.482,215,3.161,216,1.616,217,1.833,218,1.428,219,0.816,220,0.41,221,1.01,222,1.833,223,1.109,224,1.833,225,1.196,226,0.91,227,0.8,228,2.153,229,1.248,230,1.833,231,2.787,232,1.833,233,2.063,234,0.703,235,1.833,236,1.833,237,1.15,238,0.889,239,1.833,240,1.833,241,1.482,242,1.311,243,1.833,244,1.482,245,2.234,246,1.833,247,0.982,248,2.063,249,1.833,250,1.482,251,1.833,252,1.833,253,1.01,254,1.311,255,3.001,256,2.261,257,2.557,258,1.521,259,1.833,260,1.482,261,1.833,262,1.279,263,1.833,264,1.482,265,1.833,266,0.933,267,1.279,268,2.463,269,3.111,270,1.109,271,2.557,272,1.311,273,1.482,274,1.196,275,1.04,276,1.482,277,0.91,278,1.833,279,1.04,280,1.482,281,3.378,282,1.311,283,1.482,284,1.311,285,1.482,286,1.482,287,1.196,288,1.311,289,2.557,290,1.482,291,1.482,292,1.482,293,1.482,294,1.213,295,1.248,296,0.833,297,1.833,298,1.196,299,2.391,300,1.482,301,1.482,302,1.482,303,2.063,304,0.933,305,4.01,306,1.482,307,2.557,308,1.482,309,1.482,310,3.372,311,1.482,312,1.04,313,2.261,314,1.196,315,3.161,316,0.982,317,1.482,318,1.482,319,1.482,320,1.482]],["component/48",[8,0.418]],["title/49",[5,50.967]],["name/49",[5,3.334]],["text/49",[1,2.918,5,4.101,8,0.792,10,2.606,19,2.2,26,4.101,30,3.194,31,4.639,36,1.72,37,2.782,56,1.51,58,2.502,73,3.358,99,2.848,100,2.407,122,4.101,152,2.345,156,4.479,161,1.65,165,2.993,174,2.993,179,3.358,228,3.907,321,5.735,322,5.735,323,5.735,324,5.735,325,5.735,326,4.639,327,7.651,328,3.742,329,5.735,330,3.742,331,5.735,332,1.521,333,3.742,334,4.337,335,5.735,336,5.735,337,5.735]],["component/49",[8,0.418]],["title/50-1",[338,71.275]],["name/50-1",[]],["text/50-1",[]],["component/50-1",[]],["title/50-2",[339,71.275]],["name/50-2",[]],["text/50-2",[]],["component/50-2",[]],["title/50-3",[218,24.411]],["name/50-3",[]],["text/50-3",[]],["component/50-3",[]],["title/50",[8,8.247,340,40.678]],["name/50",[340,3.176]],["text/50",[10,3.037,11,3.683,12,3.582,13,2.521,14,1.384,15,4.1,16,5.892,18,5.892,19,2.564,20,5.892,21,3.489,22,5.892,23,3.582,24,5.055,25,4.361,26,4.779,27,3.582,28,4.553,29,4.553,30,2.479,31,5.406,32,5.892,33,4.553,34,3.401,35,4.779]],["component/50",[8,0.418]],["title/51",[125,46.502]],["name/51",[9,2.075]],["text/51",[112,5.553,125,6.046,164,3.328,341,7.766,342,7.766,343,7.766,344,7.766,345,7.766,346,5.553,347,7.766]],["component/51",[8,0.418]],["title/52",[87,45.293,348,51.383,349,51.383]],["name/52",[83,4.11]],["text/52",[350,4.34]],["component/52",[8,0.418]],["title/53",[124,53.903]],["name/53",[9,2.075]],["text/53",[112,5.235,114,5.537,115,5.921,117,4.776,119,5.235,124,7.303,164,3.211,196,3.552,299,5.537,340,4.987,351,7.321,352,7.321,353,4.155,354,7.321,355,7.321]],["component/53",[8,0.418]],["title/54-1",[10,32.382]],["name/54-1",[]],["text/54-1",[]],["component/54-1",[]],["title/54-2",[356,34.962,357,52.638]],["name/54-2",[]],["text/54-2",[]],["component/54-2",[]],["title/54-3",[74,50.967]],["name/54-3",[]],["text/54-3",[]],["component/54-3",[]],["title/54",[10,23.345,74,36.743,356,30.083]],["name/54",[74,3.334]],["text/54",[1,1.545,2,1.351,8,0.663,10,3.078,11,1.673,12,1.627,13,2.248,14,0.453,29,2.068,36,1.441,44,3.364,47,1.874,53,2.676,56,0.599,58,1.324,61,2.676,62,1.627,63,3.013,65,2.647,66,2.095,72,1.777,74,3.434,78,0.924,89,3.665,97,1.324,123,1.409,128,2.676,131,1.504,139,2.068,143,5.479,144,1.838,145,1.981,152,2.01,156,1.777,163,4.234,187,0.774,190,1.782,216,2.676,218,1.04,238,1.473,245,1.627,253,1.673,269,1.905,332,0.805,340,2.068,356,5.368,357,2.676,358,2.456,359,3.036,360,2.456,361,4.803,362,3.036,363,4.234,364,1.838,365,2.455,366,3.036,367,2.456,368,1.723,369,3.013,370,2.171,371,3.036,372,1.251,373,1.905,374,1.409,375,1.185,376,3.036,377,3.036,378,2.171,379,2.456,380,3.036,381,3.036,382,2.507,383,0.924,384,3.036,385,3.036,386,3.036,387,1.838,388,2.676,389,2.456,390,3.036,391,3.036,392,3.885,393,4.803,394,1.165,395,2.676,396,3.036,397,3.036,398,3.885,399,3.036,400,1.723,401,2.456,402,3.036,403,3.036,404,1.473,405,3.036,406,3.036,407,3.036,408,3.036,409,3.036,410,3.036,411,2.456,412,2.171,413,3.036,414,3.036,415,1.905,416,2.171,417,1.585,418,1.473,419,3.036,420,3.036,421,1.545,422,3.036,423,1.981,424,2.456]],["component/54",[8,0.418]],["title/55",[350,29.658,425,45.161]],["name/55",[350,2.316]],["text/55",[1,3.524,11,3.816,25,4.518,94,4.632,123,3.214,130,5.237,135,5.237,136,6.104,139,4.717,140,3.524,141,6.104,142,5.601,143,5.601,144,4.192,210,3.524,295,4.717,296,3.146,350,3.439,425,5.237,426,4.952,427,4.952,428,6.925,429,6.925]],["component/55",[8,0.418]],["title/56",[8,7.096,47,12.269,334,38.859]],["name/56",[47,0.756,334,2.395]],["text/56",[8,0.319,13,0.87,14,1.314,15,1.119,26,3.53,77,0.682,152,1.881,157,4.352,161,3.17,173,2.033,179,1.35,185,2.033,187,1.76,190,1.425,203,0.933,220,1.718,231,2.033,294,2.209,332,1.309,363,3.386,374,1.07,375,0.9,388,2.033,395,6.088,430,1.07,431,2.306,432,1.396,433,2.306,434,2.306,435,8.016,436,5.221,437,1.119,438,1.309,439,2.342,440,1.649,441,2.3,442,1.865,443,1.865,444,2.306,445,3.842,446,1.204,447,0.968,448,2.747,449,2.306,450,2.306,451,2.306,452,1.396,453,2.306,454,3.107,455,2.306,456,2.306,457,4.937,458,2.306]],["component/56",[8,0.418]],["title/57",[65,39.279]],["name/57",[9,2.075]],["text/57",[4,6.218,65,5.077,112,5.497,124,5.814,164,3.308,281,5.237,423,5.016,459,4.013,460,7.688,461,7.688,462,7.688]],["component/57",[8,0.418]],["title/58-1",[8,5.548,44,19.951,47,9.592,415,25.204,463,22.138]],["name/58-1",[]],["text/58-1",[]],["component/58-1",[]],["title/58-2",[8,8.944,13,17.009,464,35.606]],["name/58-2",[]],["text/58-2",[]],["component/58-2",[]],["title/58-3",[8,8.944,418,21.877,464,35.606]],["name/58-3",[]],["text/58-3",[]],["component/58-3",[]],["title/58-4",[8,8.944,77,13.335,464,35.606]],["name/58-4",[]],["text/58-4",[]],["component/58-4",[]],["title/58",[8,8.247,47,14.258]],["name/58",[47,0.756,131,0.992]],["text/58",[8,1.3,13,2.919,14,1.274,15,3.082,17,2.713,21,1.751,26,2.399,29,2.285,30,1.244,37,1.627,45,2.188,47,2.161,56,1.025,57,2.537,58,1.463,62,1.798,63,2.105,66,1.463,77,1.879,81,1.964,89,1.666,94,1.798,95,3.537,96,2.537,97,1.463,120,1.904,123,2.41,129,3.156,131,2.562,139,2.285,145,2.188,152,1.73,156,1.964,165,1.751,178,1.524,182,2.862,187,0.855,218,2.176,220,1.163,229,2.285,234,1.287,245,1.798,258,1.224,294,1.287,296,1.524,332,0.889,334,2.537,356,1.964,382,1.751,394,1.287,417,2.71,418,1.627,423,2.188,439,2.463,441,1.453,446,1.751,447,1.408,459,1.751,465,3.354,466,3.354,467,3.354,468,3.354,469,3.354,470,3.354,471,3.354,472,3.354,473,3.354,474,3.354,475,2.03,476,3.354,477,3.354,478,2.188,479,1.798,480,1.904,481,2.713,482,2.188,483,2.713,484,2.713,485,2.713,486,2.713,487,2.713,488,2.713,489,3.388,490,4.2,491,2.188,492,2.399,493,2.399,494,2.188,495,2.713]],["component/58",[8,0.418]],["title/59-1",[332,15.833,496,33.889]],["name/59-1",[]],["text/59-1",[]],["component/59-1",[]],["title/59-2",[8,7.096,372,21.166,497,31.102]],["name/59-2",[]],["text/59-2",[]],["component/59-2",[]],["title/59-3",[296,18.251,365,16.547,375,15.681,498,18.642,499,26.209]],["name/59-3",[]],["text/59-3",[]],["component/59-3",[]],["title/59",[47,10.766,56,8.9,332,11.956,441,12.618]],["name/59",[47,0.756,332,0.84]],["text/59",[8,1.152,36,1.773,47,1.412,51,2.194,56,1.392,66,1.736,97,1.736,131,2.209,161,1.701,187,1.014,196,2.869,209,1.808,210,2.026,221,2.194,226,1.977,227,1.736,234,3.201,237,2.497,238,1.931,262,2.391,267,1.61,268,1.977,277,1.977,332,2.07,365,3.216,369,2.497,372,2.436,373,3.71,374,2.744,375,3.256,383,1.211,394,1.527,441,1.974,463,2.194,500,1.931,501,1.931,502,2.259,503,1.772,504,1.64,505,2.597,506,3.858,507,2.597,508,2.409,509,2.409,510,1.477,511,2.026,512,2.026,513,2.597,514,5.094,515,3.169,516,2.597,517,3.858,518,2.133,519,2.597,520,2.409,521,3.858,522,3.858,523,2.597,524,2.597,525,2.597,526,2.597,527,2.597,528,2.409,529,2.597,530,2.409,531,2.133]],["component/59",[8,0.418]],["title/60",[110,40.449]],["name/60",[9,2.075]],["text/60",[36,2.217,110,5.105,111,5.035,112,5.286,113,6.516,114,5.59,115,5.978,116,5.035,117,4.822,118,6.516,119,5.286,120,4.195,121,6.516,164,3.23,532,7.392]],["component/60",[8,0.418]],["title/61-1",[0,46.502]],["name/61-1",[]],["text/61-1",[]],["component/61-1",[]],["title/61-2",[78,18.167,533,40.678]],["name/61-2",[]],["text/61-2",[]],["component/61-2",[]],["title/61-3",[47,10.766,56,8.9,332,11.956,441,12.618]],["name/61-3",[]],["text/61-3",[]],["component/61-3",[]],["title/61-4",[332,15.833,496,33.889]],["name/61-4",[]],["text/61-4",[]],["component/61-4",[]],["title/61-5",[8,7.096,372,21.166,497,31.102]],["name/61-5",[]],["text/61-5",[]],["component/61-5",[]],["title/61-6",[296,18.251,365,16.547,375,15.681,498,18.642,499,26.209]],["name/61-6",[]],["text/61-6",[]],["component/61-6",[]],["title/61-7",[534,45.161,535,40.678]],["name/61-7",[]],["text/61-7",[]],["component/61-7",[]],["title/61",[7,31.102,8,7.096,77,15.196]],["name/61",[9,2.075]],["text/61",[2,0.949,8,1.186,10,1.635,11,1.176,13,1.357,14,0.697,15,1.746,19,0.818,21,1.113,28,1.453,30,1.731,36,1.991,37,1.035,39,1.725,44,1.06,47,1.114,49,1.249,51,1.176,56,1.621,66,1.57,75,1.725,77,2.089,78,0.649,84,1.613,95,1.453,97,1.57,99,1.06,120,2.648,123,1.67,125,1.392,129,1.06,131,2.212,145,1.392,152,2.021,161,1.035,178,0.969,179,2.732,182,1.983,187,0.544,195,1.392,196,1.746,209,0.969,210,1.086,211,1.392,218,1.598,221,1.983,225,1.392,226,1.06,227,1.57,229,1.453,234,2.547,237,1.338,238,1.035,245,1.143,258,2.234,262,1.455,267,0.863,268,1.06,277,1.06,296,0.969,316,1.143,328,1.392,332,1.623,340,1.453,346,1.525,365,2.258,369,1.338,372,1.482,373,2.258,374,1.67,375,2.389,383,0.649,394,2.71,400,1.211,417,2.861,421,1.086,441,1.306,463,1.176,481,1.725,482,1.392,483,1.725,484,1.725,485,1.725,486,1.725,487,1.725,488,1.725,489,2.348,490,2.91,491,1.392,492,1.525,493,1.525,494,1.392,495,1.725,500,1.035,501,1.035,502,1.211,503,2.439,504,0.879,505,1.392,506,2.348,507,1.392,508,1.291,509,1.291,510,0.791,511,1.086,512,1.086,513,1.392,514,3.576,515,1.929,516,1.392,517,2.348,518,1.143,519,1.392,520,1.291,521,2.348,522,2.348,523,1.392,524,1.392,525,1.392,526,1.392,527,1.392,528,1.291,529,1.392,530,1.291,531,1.143,536,1.453,537,1.88,538,1.88,539,1.88,540,1.613,541,3.172,542,1.88,543,1.88,544,1.453,545,1.613,546,1.613,547,1.88,548,1.613,549,1.338,550,1.983,551,0.931,552,1.613,553,1.88,554,1.88,555,1.88,556,1.453,557,1.453,558,1.06,559,0.778,560,1.012,561,1.88,562,1.453,563,1.88,564,1.88]],["component/61",[8,0.418]],["title/62",[14,6,19,15.413,30,14.903,152,10.941,551,17.524]],["name/62",[19,1.215,551,1.381]],["text/62",[]],["component/62",[8,0.418]],["title/63",[2,22.869,77,15.196,131,16.088]],["name/63",[2,2.075]],["text/63",[1,1.753,2,1.533,8,0.476,14,1.416,19,1.322,23,1.846,24,2.605,30,2.397,36,1.033,47,1.266,48,2.358,56,1.275,77,1.019,94,1.846,100,2.711,116,2.347,131,1.079,145,2.247,152,2.346,161,2.624,184,1.903,187,1.996,190,1.966,191,1.846,200,2.697,219,3.681,220,1.625,248,2.247,304,3.692,314,2.247,332,0.913,382,1.798,383,1.965,394,2.479,400,1.955,404,2.572,417,1.798,421,1.753,436,1.955,437,1.671,441,0.964,447,1.446,459,1.798,489,2.247,503,2.359,510,1.278,512,2.697,550,1.898,556,2.347,558,1.711,559,1.934,560,2.514,562,2.347,565,3.036,566,3.036,567,3.036,568,2.017,569,1.798,570,2.605,571,3.608,572,3.036,573,2.605,574,4.401,575,2.347,576,3.036,577,2.017,578,2.605,579,1.898,580,2.017]],["component/63",[8,0.418]],["title/64",[56,8.9,164,16.191,258,16.455,559,16.455]],["name/64",[164,1.137,581,1.745]],["text/64",[14,1.135,19,1.238,44,1.603,47,0.771,48,1.178,56,1.661,58,1.408,67,3.162,81,1.89,88,3.288,92,1.685,94,1.73,120,1.832,129,1.603,134,2.61,152,1.688,182,4.438,184,1.159,196,3.008,203,1.305,208,2.106,212,1.498,226,1.603,234,1.238,242,3.604,254,3.604,258,2.939,262,1.305,294,1.933,304,3.565,328,2.106,333,3.288,378,2.308,382,1.685,404,1.566,417,1.685,423,2.106,424,4.076,426,2.308,500,1.566,510,1.869,548,4.688,550,1.779,558,1.603,559,2.557,560,1.531,569,1.685,580,1.89,582,2.845,583,4.223,584,5.465,585,2.441,586,2.025,587,2.025,588,2.199,589,5.298,590,2.025,591,3.63,592,7.673,593,2.845,594,2.95,595,4.442,596,5.465,597,4.442,598,3.162,599,4.442,600,2.441,601,2.025,602,3.842,603,5.465,604,2.95,605,2.845,606,2.845,607,2.845,608,3.162,609,2.845,610,2.845,611,2.845,612,2.845,613,2.845,614,2.845,615,1.603]],["component/64",[8,0.418]],["title/65",[56,7.149,172,19.412,258,13.218,604,21.206,616,22.725,617,27.392]],["name/65",[172,1.697,581,1.745]],["text/65",[]],["component/65",[8,0.418]],["title/66-1",[62,38.201]],["name/66-1",[]],["text/66-1",[]],["component/66-1",[]],["title/66-2",[56,8.9,178,20.486,258,16.455,618,30.716]],["name/66-2",[]],["text/66-2",[]],["component/66-2",[]],["title/66",[36,13.524,56,8.9,77,13.335,258,16.455]],["name/66",[581,2.57]],["text/66",[14,1.399,19,1.704,36,1.332,37,2.155,47,1.06,56,1.849,77,1.313,80,2.897,92,2.318,123,2.061,152,1.21,161,2.613,164,2.3,168,2.6,172,3.433,178,2.018,187,1.915,212,2.061,218,1.521,219,3.344,220,1.683,234,1.704,258,3.418,294,2.458,353,2.52,447,2.689,459,2.318,475,2.688,551,1.937,552,3.359,559,2.338,579,3.53,583,3.025,588,3.025,590,2.786,601,2.786,604,2.6,616,2.786,617,3.359,619,3.025,620,3.915,621,3.359,622,3.359,623,3.915,624,3.915,625,4.019,626,3.751,627,4.845]],["component/66",[8,0.418]],["title/67-1",[88,33.523,165,26.819,178,23.345]],["name/67-1",[]],["text/67-1",[]],["component/67-1",[]],["title/67-2",[30,22.153,152,16.264]],["name/67-2",[]],["text/67-2",[]],["component/67-2",[]],["title/67-3",[14,6,19,15.413,220,13.332,383,12.221]],["name/67-3",[]],["text/67-3",[]],["component/67-3",[]],["title/67-4",[19,19.714,100,21.564,571,22.414]],["name/67-4",[]],["text/67-4",[]],["component/67-4",[]],["title/67-5",[48,21.792,571,26.049]],["name/67-5",[]],["text/67-5",[]],["component/67-5",[]],["title/67-6",[94,21.53,404,19.49,558,19.951,559,14.66,615,19.951]],["name/67-6",[]],["text/67-6",[]],["component/67-6",[]],["title/67-7",[15,19.49,168,23.519,212,18.642,353,22.798,615,19.951]],["name/67-7",[]],["text/67-7",[]],["component/67-7",[]],["title/67-8",[161,12.969,213,32.243,214,36.47,370,32.243]],["name/67-8",[]],["text/67-8",[]],["component/67-8",[]],["title/67",[47,10.766,131,14.118,165,23.535,178,20.486]],["name/67",[178,2.119]],["text/67",[1,2.361,8,0.493,10,0.961,12,1.915,13,0.798,14,1.377,15,1.026,19,2.092,27,1.134,30,2.022,36,1.072,37,2.251,45,1.38,47,2.004,48,2.568,51,1.166,56,1.52,58,2.883,62,1.134,66,0.923,73,4.662,76,1.38,77,1.372,80,2.331,88,1.38,92,1.865,97,0.923,99,1.775,100,1.947,117,1.38,131,0.662,152,1.8,156,1.239,158,1.38,161,2.127,164,0.76,167,1.513,174,3.672,178,0.961,182,1.969,184,2.187,187,1.552,190,0.785,191,1.915,196,1.026,200,1.077,203,0.856,208,1.38,218,2.532,220,1.656,228,1.441,234,2.337,245,1.915,248,1.38,255,1.281,256,1.513,258,1.989,262,0.856,294,0.812,304,1.077,316,1.134,330,1.38,382,1.104,383,1.411,394,0.812,417,1.865,437,1.026,446,1.104,463,1.166,475,1.281,480,1.201,489,1.38,491,1.38,510,2.022,511,1.077,512,2.361,536,1.441,545,1.6,550,1.969,551,0.923,559,1.989,562,2.434,571,2.883,574,1.441,575,1.441,577,2.092,578,1.6,587,1.327,588,2.434,619,1.441,625,3.822,628,1.865,629,3.15,630,1.865,631,1.865,632,1.865,633,2.91,634,1.865,635,1.865,636,1.6,637,1.865,638,2.556,639,1.865,640,1.865,641,1.865,642,1.441,643,3.508,644,1.327,645,1.865,646,1.865,647,2.702,648,1.865,649,1.865,650,1.865,651,1.327,652,3.15,653,1.865]],["component/67",[8,0.418]],["title/68-1",[161,14.779,184,18.45,332,13.624]],["name/68-1",[]],["text/68-1",[]],["component/68-1",[]],["title/68-2",[164,14.424,332,10.651,558,19.951,559,14.66,560,19.054]],["name/68-2",[]],["text/68-2",[]],["component/68-2",[]],["title/68-3",[48,16.455,78,13.718,172,24.167,571,19.67]],["name/68-3",[]],["text/68-3",[]],["component/68-3",[]],["title/68-4",[184,16.191,560,21.388,580,26.399,654,39.746]],["name/68-4",[]],["text/68-4",[]],["component/68-4",[]],["title/68",[94,19.412,245,19.412,404,17.573,559,13.218,560,17.18,615,17.989]],["name/68",[559,1.702]],["text/68",[1,1.7,8,0.461,14,1.272,23,1.79,27,1.79,36,1.552,43,2.701,47,1.236,48,2.818,49,1.955,56,1.251,67,2.095,77,0.988,78,2.171,94,3.396,97,1.457,99,1.659,100,1.402,122,2.388,123,1.55,144,2.022,152,1.944,164,1.199,172,1.79,174,1.743,182,1.841,184,2.275,187,1.319,203,1.351,218,1.772,219,2.82,220,1.729,233,2.179,234,1.281,247,1.79,258,1.219,262,2.093,266,2.634,268,1.659,304,3.224,328,2.179,332,0.886,387,2.022,400,1.895,404,3.462,417,2.701,423,2.179,441,0.935,463,1.841,503,1.486,504,2.132,510,2.35,512,1.7,550,1.841,551,1.457,558,3.147,559,2.981,569,1.743,571,2.764,579,1.841,580,3.03,583,2.275,586,2.095,587,2.095,594,1.955,615,3.147,621,2.526,651,2.095,655,4.562,656,2.944,657,2.275,658,2.526,659,2.944,660,2.944,661,2.275,662,2.275,663,2.944,664,2.275,665,1.841,666,2.944,667,2.275,668,2.275,669,2.275,670,2.944,671,2.275,672,2.944,673,2.275]],["component/68",[8,0.418]],["title/69-1",[30,26.441]],["name/69-1",[]],["text/69-1",[]],["component/69-1",[]],["title/69-2",[220,13.374,383,18.167]],["name/69-2",[]],["text/69-2",[]],["component/69-2",[]],["title/69-3",[330,46.502]],["name/69-3",[]],["text/69-3",[]],["component/69-3",[]],["title/69",[14,7.654,19,12.652,37,15.999,100,13.84,220,7.385,383,10.032]],["name/69",[14,0.493,37,0.936,220,0.432]],["text/69",[2,0.627,8,0.195,12,0.755,14,0.21,25,1.638,30,1.944,34,1.727,36,0.423,42,2.745,48,1.725,49,0.825,52,1.71,56,0.813,65,3.131,70,1.14,77,0.417,99,0.7,100,0.591,116,0.96,117,0.919,129,1.247,130,1.066,131,0.786,152,0.924,158,0.919,161,3.033,164,0.901,179,1.987,195,2.688,203,1.373,210,0.717,211,0.919,212,1.165,220,0.562,223,0.853,225,0.919,248,0.919,275,1.425,277,2.603,279,0.8,313,1.008,316,0.755,320,1.14,330,1.638,332,1.092,375,0.55,382,0.735,383,1.947,394,0.963,400,0.8,401,1.14,404,0.684,427,1.008,430,1.575,438,0.8,439,0.668,459,1.31,475,0.853,497,4.709,508,0.853,531,3.431,536,0.96,551,1.481,568,1.47,591,4.214,594,3.551,602,0.873,604,1.987,665,1.383,674,1.242,675,1.242,676,0.884,677,1.066,678,1.242,679,2.213,680,1.242,681,2.585,682,2.992,683,1.242,684,1.242,685,3.22,686,1.242,687,1.242,688,1.242,689,1.066,690,1.242,691,1.898,692,1.575,693,1.242,694,4.562,695,1.066,696,2.213,697,1.066,698,4.166,699,1.242,700,1.242,701,0.884,702,1.066,703,4.297,704,1.575,705,0.96,706,1.242,707,1.242,708,1.242,709,1.242,710,0.96,711,1.242,712,1.242,713,1.066,714,1.242,715,3.574,716,2.213,717,2.213,718,0.884,719,1.242,720,0.884,721,2.992,722,0.884,723,3.116,724,1.242,725,1.242,726,3.963,727,1.242,728,1.242,729,1.242,730,1.242,731,1.242,732,1.242,733,1.242,734,1.242,735,1.242,736,1.242,737,1.242,738,1.242,739,2.992,740,1.242,741,2.992,742,2.312,743,2.992,744,6.345,745,2.992,746,3.632,747,1.242,748,1.575,749,3.632,750,1.242,751,4.132,752,2.213,753,1.242,754,1.242,755,2.213,756,1.242,757,1.242,758,1.242,759,1.242,760,1.242,761,2.213,762,1.242,763,1.242,764,1.242,765,1.242,766,1.242,767,2.992,768,1.242,769,1.242,770,2.213,771,2.213,772,2.213,773,1.242,774,1.242,775,1.242,776,1.242,777,2.213,778,1.242,779,1.242,780,1.242,781,1.242,782,0.96,783,0.96,784,1.242]],["component/69",[8,0.418]],["title/70",[14,6.734,78,13.718,187,11.49,785,28.291]],["name/70",[14,0.473,187,0.807]],["text/70",[14,1.408,47,1.774,56,1.662,66,3.241,78,2.562,131,1.719,184,2.667,187,2.146,190,2.036,203,2.22,213,5.312,266,2.793,353,3.115,441,1.536,500,2.663,501,2.663,504,2.261,568,3.214,615,2.726,692,3.444,785,3.444,786,3.444,787,3.739,788,5.061,789,4.151,790,4.151,791,3.444,792,4.838,793,4.838,794,4.838,795,4.838,796,4.838,797,4.838,798,4.838,799,4.838,800,4.838,801,4.838,802,4.151]],["component/70",[8,0.418]],["title/71",[19,17.3,551,19.67,571,19.67,658,34.101]],["name/71",[571,2.034]],["text/71",[8,0.55,10,2.686,14,1.054,15,3.422,19,2.269,30,2.193,35,2.846,36,1.194,44,1.977,47,0.95,48,2.158,51,2.194,56,0.786,66,1.736,76,2.597,81,2.33,96,3.01,99,1.977,100,2.96,106,3.01,140,2.026,164,1.429,167,4.228,187,1.507,209,1.808,218,2.994,219,1.772,220,2.082,238,1.931,245,2.133,253,2.194,262,1.61,267,1.61,279,4.003,333,3.858,346,2.846,383,1.211,394,2.269,404,1.931,412,2.846,510,2.193,546,3.01,551,2.579,559,2.158,560,1.888,569,2.078,571,3.077,577,2.33,580,3.462,587,2.497,633,3.71,636,3.01,638,4.817,676,2.497,803,3.509,804,3.509,805,3.509,806,3.509,807,3.509,808,3.509,809,3.509,810,3.01,811,3.509,812,3.509,813,3.509,814,3.509]],["component/71",[8,0.418]],["title/72-1",[332,18.898]],["name/72-1",[]],["text/72-1",[]],["component/72-1",[]],["title/72-2",[815,32.382]],["name/72-2",[]],["text/72-2",[]],["component/72-2",[]],["title/72",[220,11.508,510,19.062,577,30.083]],["name/72",[14,0.288,219,0.859,220,0.432,579,1.063]],["text/72",[7,0.985,11,1.571,14,0.854,30,0.604,34,0.828,36,1.141,48,1.04,78,0.495,97,0.71,111,2.591,152,2.341,161,2.87,174,0.849,184,1.366,187,0.726,190,1.057,200,0.828,203,0.658,218,1.564,219,2.033,220,1.538,223,2.302,234,0.624,262,0.658,266,0.828,267,0.658,296,0.739,312,1.618,332,0.756,333,1.061,368,0.923,394,1.094,417,0.849,421,1.45,430,3.033,441,0.798,447,1.196,459,2.384,496,0.923,498,1.323,501,0.789,503,1.269,504,1.174,510,1.057,549,1.021,559,0.594,569,0.849,571,1.243,573,1.23,574,1.108,577,0.953,591,3.346,594,1.669,598,1.021,608,1.021,638,0.897,644,1.021,651,1.021,661,1.108,662,1.108,664,1.108,667,1.108,685,1.108,704,1.021,718,1.788,720,2.866,722,2.866,751,1.942,816,1.108,817,1.23,818,1.23,819,1.434,820,1.23,821,1.23,822,1.23,823,1.434,824,1.434,825,1.108,826,1.108,827,1.434,828,1.108,829,1.108,830,1.108,831,1.108,832,1.434,833,1.434,834,1.434,835,5.192,836,0.953,837,4.943,838,4.943,839,1.23,840,4.453,841,4.943,842,4.943,843,4.943,844,3.454,845,7.068,846,6.188,847,6.188,848,6.188,849,4.578,850,2.512,851,2.512,852,4.026,853,2.156,854,2.156,855,2.512,856,1.434,857,1.434,858,1.434,859,2.512,860,4.026,861,3.353,862,3.353,863,2.512,864,3.353,865,3.454,866,2.877,867,1.434,868,1.434,869,1.434,870,1.434,871,1.434,872,1.434,873,1.434,874,1.434]],["component/72",[8,0.418]],["title/73-1",[332,18.898]],["name/73-1",[]],["text/73-1",[]],["component/73-1",[]],["title/73-2",[815,32.382]],["name/73-2",[]],["text/73-2",[]],["component/73-2",[]],["title/73-3",[412,36.743,647,38.859,875,45.293]],["name/73-3",[]],["text/73-3",[]],["component/73-3",[]],["title/73",[14,6.734,187,11.49,220,10.098,510,16.728]],["name/73",[14,0.288,187,0.492,219,0.859,220,0.432]],["text/73",[14,1.153,15,1.62,36,1.002,48,1.219,56,0.659,78,1.574,97,1.457,131,1.046,152,0.91,161,2.705,184,1.199,187,1.615,200,2.634,203,2.563,218,2.444,219,3.792,220,2.106,226,1.659,254,3.701,262,1.351,266,1.7,312,2.937,332,0.886,368,1.895,370,2.388,383,1.016,394,2.738,421,1.7,430,2.402,441,0.935,501,1.62,503,2.303,504,2.132,510,1.239,551,1.457,559,1.889,569,1.743,575,2.275,591,1.955,598,2.095,638,1.841,651,2.095,661,2.275,662,2.275,664,2.275,704,2.095,720,3.247,722,3.247,786,2.095,816,2.275,818,2.526,820,2.526,835,3.914,836,1.955,837,2.526,838,2.526,839,2.526,840,2.275,841,2.526,842,2.526,843,2.526,844,3.914,846,3.914,847,3.914,848,3.914,853,2.526,854,2.526,866,2.526,876,2.944,877,2.944,878,2.944,879,2.944,880,2.944,881,2.944,882,4.562,883,2.944,884,2.944,885,2.944,886,2.944,887,4.562,888,2.944,889,4.562,890,2.944,891,2.944,892,2.944]],["component/73",[8,0.418]],["title/74-1",[78,15.632,590,32.238,893,30.083]],["name/74-1",[]],["text/74-1",[]],["component/74-1",[]],["title/74",[48,14.66,56,7.929,164,14.424,184,14.424,258,14.66]],["name/74",[78,0.729,164,0.861,581,1.321]],["text/74",[10,1.374,11,1.667,14,1.17,27,2.566,33,1.186,34,1.539,36,1.202,47,0.416,48,0.635,56,1.07,58,0.76,73,1.771,77,0.894,78,1.649,81,1.02,110,0.988,120,1.716,126,1.136,131,0.545,152,1.929,161,2.86,164,1.086,165,1.579,174,1.579,178,0.791,182,0.96,184,1.439,186,1.245,187,1.515,190,1.487,198,1.136,203,0.704,205,1.136,207,0.988,212,1.403,218,1.036,219,2.841,220,1.514,221,0.96,234,0.668,238,0.845,253,0.96,255,1.054,258,1.104,262,1.223,267,0.704,268,0.865,270,1.831,275,0.988,294,0.668,296,1.374,303,1.973,304,0.886,316,0.933,332,1.063,364,1.054,383,1.22,421,0.886,430,0.808,440,1.245,441,0.846,447,1.269,448,1.245,480,0.988,500,0.845,501,1.467,502,0.988,503,1.784,504,1.651,510,0.646,511,0.886,518,0.933,549,1.898,557,1.186,558,1.991,559,2.467,560,0.826,579,0.96,589,1.317,590,1.093,602,1.079,608,1.093,615,2.692,616,1.093,625,2.515,626,3.174,627,2.287,633,1.093,669,2.06,671,2.731,673,2.06,676,1.093,710,2.06,783,2.06,791,1.093,810,1.317,825,2.731,826,2.731,828,2.731,829,2.731,830,1.186,831,1.186,836,1.771,893,1.02,894,2.287,895,1.535,896,1.535,897,1.186,898,1.317,899,2.287,900,2.287,901,1.317,902,1.317,903,1.093,904,1.317,905,2.287,906,1.898,907,3.534,908,2.287,909,2.06,910,4.099,911,4.099,912,3.534,913,1.535,914,2.666,915,1.317,916,1.317,917,1.535,918,1.535,919,1.535,920,1.535,921,2.06,922,1.535,923,1.535,924,1.317,925,1.317,926,2.287,927,3.032,928,1.317,929,2.287,930,1.317,931,1.186,932,1.317,933,1.317,934,1.317,935,2.287,936,1.317,937,1.317,938,1.317,939,3.621,940,1.317,941,1.317,942,1.317,943,1.317,944,1.317,945,1.317,946,1.317,947,1.317,948,1.317,949,1.317,950,2.287,951,1.317,952,1.186,953,1.317,954,1.317,955,1.317,956,1.317,957,1.317,958,1.317,959,1.317,960,1.317,961,1.317]],["component/74",[8,0.418]],["title/75-1",[78,15.632,601,32.238,893,30.083]],["name/75-1",[]],["text/75-1",[]],["component/75-1",[]],["title/75-2",[78,15.632,893,30.083,962,38.859]],["name/75-2",[]],["text/75-2",[]],["component/75-2",[]],["title/75",[48,14.66,56,7.929,184,14.424,258,14.66,963,35.41]],["name/75",[78,0.587,164,0.693,581,1.063,964,1.7]],["text/75",[8,0.097,10,1.075,11,1.304,14,1.146,23,0.707,27,2.104,33,0.899,34,1.205,36,0.965,41,1.693,44,0.348,47,0.315,56,0.555,58,0.816,71,1.067,73,1.647,78,1.53,81,0.772,120,1.343,126,0.457,131,0.413,135,0.529,152,1.432,161,2.889,164,0.474,165,0.689,174,1.469,184,1.01,186,0.943,187,1.535,190,1.456,191,0.707,198,0.861,203,0.283,205,0.861,206,0.457,207,0.749,209,0.599,212,1.098,218,0.452,219,1.885,220,1.072,221,0.727,223,0.799,227,1.033,234,0.506,238,0.64,244,0.566,247,0.375,253,1.304,255,0.799,258,0.255,262,0.957,267,1.588,268,0.655,270,1.703,274,0.457,275,1.062,277,0.93,287,0.457,295,0.477,296,0.599,303,1.544,304,0.671,312,0.749,316,0.707,332,0.951,350,0.348,364,0.799,368,1.343,383,0.979,394,0.269,411,2.604,421,0.671,425,0.529,430,1.306,435,0.566,440,0.943,441,0.787,447,0.993,448,0.943,480,1.062,496,1.062,498,1.098,500,0.908,501,1.148,502,1.343,503,1.433,504,1.745,510,0.694,511,0.952,512,0.356,518,1.003,531,0.375,535,0.477,549,2.02,557,0.899,558,1.599,559,1.996,560,0.626,579,0.386,601,0.439,602,4.336,608,0.828,615,2.245,616,0.439,625,1.174,633,0.828,638,0.386,643,0.529,657,0.477,667,0.899,668,0.477,669,1.917,671,2.193,673,1.612,676,0.828,692,0.439,701,1.174,702,0.529,710,1.612,718,0.828,751,0.899,783,1.612,786,1.485,787,0.899,788,0.899,789,0.998,790,0.998,791,0.828,802,4.425,822,1.415,825,0.899,826,0.899,828,5.609,829,2.193,830,0.899,831,0.477,836,1.647,840,1.275,893,1.096,894,0.998,897,0.899,898,0.998,899,1.79,900,1.79,901,0.529,902,0.998,903,0.828,904,0.998,905,1.79,906,1.485,908,2.434,909,1.917,910,1.79,911,1.79,915,0.998,916,0.998,921,1.917,924,0.998,925,0.998,926,1.79,927,2.434,928,0.998,929,1.79,930,0.998,931,0.899,932,0.998,933,0.998,934,0.998,935,1.79,936,0.998,937,0.998,938,0.998,939,2.969,940,0.998,941,0.998,942,0.998,943,0.998,944,0.998,945,0.998,946,0.998,947,0.998,948,0.998,949,0.998,950,1.79,951,0.998,952,0.899,953,1.415,954,0.998,955,0.998,956,0.998,957,0.998,958,0.998,959,1.415,960,0.998,961,0.529,962,0.529,965,0.617,966,0.617,967,0.617,968,0.617,969,2.128,970,0.617,971,0.617,972,1.65,973,1.415,974,0.617,975,0.617,976,1.163,977,0.617,978,0.617,979,1.163,980,1.163,981,1.163,982,1.163,983,1.163,984,1.163,985,0.617,986,0.617,987,0.617,988,1.163,989,0.617,990,2.086,991,0.617,992,0.617,993,0.617,994,0.617,995,0.617,996,0.617,997,2.48,998,0.617,999,1.163,1000,0.617,1001,1.163,1002,1.163,1003,0.617,1004,0.617,1005,0.617,1006,0.617,1007,0.617,1008,0.617,1009,0.617,1010,2.837,1011,1.163,1012,1.163,1013,1.163,1014,3.985,1015,1.163,1016,1.163,1017,0.998,1018,1.163,1019,1.163,1020,0.617,1021,0.617,1022,0.617,1023,0.617,1024,0.617,1025,0.617,1026,0.617,1027,0.617,1028,0.617,1029,0.617,1030,0.617,1031,2.086,1032,0.617,1033,0.617,1034,0.617,1035,1.65,1036,0.617,1037,0.617,1038,0.617,1039,1.163,1040,1.163,1041,0.617,1042,0.617,1043,2.837,1044,1.163,1045,0.617,1046,0.617,1047,0.617,1048,2.837,1049,0.617,1050,1.163,1051,2.837,1052,2.837,1053,0.617,1054,1.65,1055,0.617,1056,0.617,1057,0.617,1058,0.617,1059,0.617,1060,0.617,1061,0.617,1062,1.163,1063,0.617,1064,0.617,1065,0.617,1066,0.617,1067,0.617,1068,0.617]],["component/75",[8,0.418]],["title/76",[]],["name/76",[581,1.745,1069,2.395]],["text/76",[110,4.848,350,4.243,1069,6.461]],["component/76",[8,0.418]],["title/77-1",[0,46.502]],["name/77-1",[]],["text/77-1",[]],["component/77-1",[]],["title/77-2",[78,18.167,533,40.678]],["name/77-2",[]],["text/77-2",[]],["component/77-2",[]],["title/77-3",[47,10.766,56,8.9,332,11.956,441,12.618]],["name/77-3",[]],["text/77-3",[]],["component/77-3",[]],["title/77-4",[332,15.833,496,33.889]],["name/77-4",[]],["text/77-4",[]],["component/77-4",[]],["title/77-5",[8,7.096,372,21.166,497,31.102]],["name/77-5",[]],["text/77-5",[]],["component/77-5",[]],["title/77-6",[296,18.251,365,16.547,375,15.681,498,18.642,499,26.209]],["name/77-6",[]],["text/77-6",[]],["component/77-6",[]],["title/77",[7,36.146,479,32.005]],["name/77",[9,2.075]],["text/77",[8,1.148,13,1.317,14,1.091,36,1.606,47,1.881,51,1.924,56,1.286,57,2.641,66,1.523,97,1.523,129,1.734,131,2.467,152,0.951,156,2.044,161,1.54,187,1.365,196,2.598,209,1.586,210,1.777,220,1.199,221,1.924,226,1.734,227,1.523,234,3.023,237,2.191,238,1.694,262,2.166,267,1.412,268,1.734,277,1.734,294,1.34,332,1.937,365,3.009,369,2.191,372,2.206,373,3.36,374,2.485,375,3.076,383,1.062,394,1.34,418,1.694,439,2.54,441,2.044,446,1.822,447,1.465,463,1.924,479,1.871,480,1.982,500,1.694,501,1.694,502,1.982,503,1.554,504,1.438,505,2.278,506,3.494,507,2.278,508,2.114,509,2.114,510,1.295,511,1.777,512,1.777,513,2.278,514,4.767,515,2.871,516,2.278,517,3.494,518,1.871,519,2.278,520,2.114,521,3.494,522,3.494,523,2.278,524,2.278,525,2.278,526,2.278,527,2.278,528,2.114,529,2.278,530,2.114,531,1.871]],["component/77",[8,0.418]],["title/78",[125,38.96,479,32.005]],["name/78",[9,2.075]],["text/78",[350,4.34]],["component/78",[8,0.418]],["title/79",[479,38.201]],["name/79",[9,2.075]],["text/79",[350,4.34]],["component/79",[8,0.418]],["title/80",[14,6.734,56,8.9,294,17.3,447,18.924]],["name/80",[14,0.288,294,0.74,447,0.81,815,0.876]],["text/80",[14,1.047,25,2.57,36,1.182,56,1.384,58,1.719,63,2.472,72,2.307,77,1.165,78,1.199,123,1.828,152,1.073,158,2.57,161,2.93,187,1.495,190,1.462,191,2.112,192,2.817,200,2.986,202,2.57,203,1.593,207,2.236,209,1.79,223,3.552,234,2.251,247,2.112,275,4.942,294,2.69,332,1.045,364,2.385,415,2.472,427,2.817,480,3.33,498,1.828,540,4.437,550,2.171,586,2.472,665,3.233,692,2.472,713,5.302,815,1.79,821,5.875,897,2.684,1070,3.997,1071,2.684,1072,2.684,1073,5.302,1074,3.473,1075,3.473,1076,3.473,1077,3.473,1078,3.473,1079,3.473,1080,3.473,1081,5.172,1082,3.473,1083,3.473,1084,5.172,1085,3.473,1086,3.473,1087,3.473,1088,3.473,1089,3.473,1090,3.473,1091,2.979,1092,3.473,1093,3.473]],["component/80",[8,0.418]],["title/81",[14,4.925,21,17.212,56,6.509,190,12.233,220,7.385,383,10.032,441,9.228]],["name/81",[14,0.241,220,0.361,439,0.765,441,0.452,815,0.733]],["text/81",[2,0.81,12,0.975,14,0.619,21,0.95,28,1.24,29,2.14,30,2.26,36,2.167,37,1.524,54,1.472,56,0.818,58,0.794,65,1.003,66,1.371,72,1.065,76,1.187,77,0.538,89,2.059,100,1.319,123,2.29,131,1.298,140,1.599,152,1.88,156,1.065,161,3.086,181,2.541,190,1.538,195,1.187,196,0.883,218,1.076,220,1.546,226,0.904,233,1.187,234,0.698,266,1.599,267,1.996,270,1.101,279,1.783,314,1.187,332,1.616,356,1.065,364,1.902,383,1.854,394,0.698,415,1.971,416,1.301,421,0.926,430,1.458,436,3.458,437,1.524,439,1.49,441,2.022,442,1.472,446,2.164,452,2.51,454,1.472,492,1.301,498,1.924,503,1.398,504,0.75,509,1.101,510,1.166,511,1.599,518,0.975,528,2.51,556,2.14,570,1.376,598,1.142,600,1.376,622,1.376,665,1.003,668,1.24,681,1.971,694,2.14,704,1.142,726,1.376,748,2.601,785,2.601,815,0.827,1070,1.24,1071,1.24,1072,1.24,1073,4.94,1091,1.376,1094,1.376,1095,2.77,1096,2.77,1097,2.376,1098,1.604,1099,1.604,1100,1.604,1101,2.77,1102,1.604,1103,3.655,1104,2.77,1105,2.77,1106,1.604,1107,1.604,1108,1.604,1109,2.77,1110,2.376,1111,2.376,1112,2.77,1113,1.604,1114,2.77,1115,1.604,1116,1.604,1117,1.604,1118,1.604,1119,1.604,1120,1.604,1121,1.604,1122,1.604,1123,1.376,1124,1.604,1125,1.604,1126,1.604,1127,1.376,1128,1.604,1129,1.604,1130,1.604,1131,1.604,1132,1.604,1133,1.604,1134,2.824,1135,1.376,1136,1.604,1137,1.376,1138,2.77,1139,1.376,1140,1.376,1141,1.604,1142,3.732,1143,1.376,1144,1.604,1145,1.604,1146,1.604,1147,1.604]],["component/81",[8,0.418]],["title/82",[14,6.734,78,13.718,187,11.49,206,29.418]],["name/82",[14,0.358,187,0.611,815,1.089]],["text/82",[10,2.476,14,1.405,36,1.635,41,3.897,58,2.377,72,3.191,77,1.612,78,1.658,92,2.845,123,2.529,140,2.773,161,2.413,184,2.655,187,1.884,227,3.225,247,2.921,264,4.408,272,3.897,368,3.093,479,4.497,504,3.456,515,2.921,665,3.003,782,3.713,786,5.264,787,5.036,788,3.713,815,2.476,969,4.122,1017,4.122,1070,3.713,1071,3.713,1072,3.713,1148,6.517,1149,4.804,1150,4.804,1151,4.804]],["component/82",[8,0.418]],["title/83",[14,8.891,234,15.413,294,15.413,447,16.859]],["name/83",[14,0.288,47,0.461,294,0.74,447,0.81]],["text/83",[8,0.722,13,1.972,14,1.384,27,3.851,48,1.908,56,1.032,58,2.28,60,3.953,131,1.637,152,1.424,161,2.362,184,2.58,187,1.831,191,2.802,203,2.114,218,1.79,220,1.171,253,3.96,260,4.228,266,2.66,284,3.738,287,3.41,294,3.392,326,4.228,365,2.153,372,2.153,374,2.426,375,2.041,432,3.164,436,2.967,447,3.016,475,3.164,494,3.41,952,3.561,973,3.953,1152,3.06,1153,4.608,1154,4.608,1155,3.953,1156,4.608,1157,4.608,1158,4.608,1159,4.608,1160,4.608,1161,3.953,1162,3.953]],["component/83",[8,0.418]],["title/84-1",[62,38.201]],["name/84-1",[]],["text/84-1",[]],["component/84-1",[]],["title/84",[152,12.28,437,21.877,438,25.589,452,27.293]],["name/84",[47,0.572,437,1.163,438,1.361]],["text/84",[2,0.925,8,0.158,14,0.427,30,0.424,37,0.554,45,2.297,56,0.41,65,3.609,131,0.358,144,0.692,152,0.779,161,3.13,174,0.596,200,1.058,209,2.08,212,0.53,218,0.391,220,0.466,267,0.841,298,0.745,312,2.32,365,0.471,372,0.471,374,0.53,375,0.446,383,0.632,387,0.692,416,0.817,430,4.156,437,1.387,438,2.32,452,1.258,459,0.596,482,0.745,491,0.745,531,3.51,551,0.498,586,0.717,591,2.061,594,2.061,604,1.217,618,0.778,626,1.217,638,0.63,642,0.778,681,0.717,685,2.398,689,0.864,691,0.864,694,1.416,695,0.864,697,0.864,701,4.377,703,4.952,715,4.952,718,2.873,720,0.717,722,0.717,723,0.864,791,0.717,836,0.669,865,0.864,1097,0.864,1152,0.669,1163,1.007,1164,1.007,1165,1.007,1166,1.007,1167,1.007,1168,1.007,1169,1.007,1170,7.838,1171,6.859,1172,7.838,1173,7.838,1174,7.838,1175,1.007,1176,1.007,1177,5.772,1178,1.007,1179,1.007,1180,1.007,1181,2.52,1182,1.007,1183,2.52,1184,1.007,1185,1.832,1186,5.315,1187,1.832,1188,1.007,1189,1.007,1190,1.832,1191,1.007,1192,1.007,1193,1.007,1194,1.007,1195,1.007,1196,1.007,1197,1.007,1198,1.007,1199,1.007,1200,1.007,1201,1.007,1202,1.007,1203,1.007,1204,1.007,1205,1.832,1206,1.007,1207,1.007,1208,1.007,1209,1.007,1210,1.007,1211,1.007,1212,1.007,1213,1.007,1214,1.832,1215,1.007,1216,1.007,1217,1.007,1218,1.007,1219,1.007,1220,1.007,1221,1.007]],["component/84",[8,0.418]],["title/85-1",[62,38.201]],["name/85-1",[]],["text/85-1",[]],["component/85-1",[]],["title/85-2",[227,26.049,498,27.712]],["name/85-2",[]],["text/85-2",[]],["component/85-2",[]],["title/85-3",[227,26.049,705,40.678]],["name/85-3",[]],["text/85-3",[]],["component/85-3",[]],["title/85-4",[227,26.049,1222,45.161]],["name/85-4",[]],["text/85-4",[]],["component/85-4",[]],["title/85-5",[227,26.049,430,27.712]],["name/85-5",[]],["text/85-5",[]],["component/85-5",[]],["title/85-6",[247,32.005,277,29.658]],["name/85-6",[]],["text/85-6",[]],["component/85-6",[]],["title/85-7",[394,27.346]],["name/85-7",[]],["text/85-7",[]],["component/85-7",[]],["title/85",[14,6,190,14.903,220,8.997,383,12.221,441,11.241]],["name/85",[14,0.241,47,0.385,220,0.361,439,0.765,441,0.452]],["text/85",[2,0.749,12,1.574,14,0.793,21,0.879,30,1.736,36,0.881,56,1.238,66,0.735,67,1.057,100,1.233,105,1.147,119,3.346,129,2.324,131,0.527,140,2.967,152,1.9,161,2.659,172,0.903,190,1.09,198,1.099,202,2.549,209,0.765,218,0.577,220,1.683,227,2.544,229,1.147,238,0.817,247,1.574,250,1.362,253,1.619,258,0.615,267,3.129,279,0.956,282,1.204,365,0.694,367,1.362,372,0.694,374,0.782,375,0.657,378,1.204,379,1.362,383,2.518,387,1.019,389,3.16,415,1.843,426,1.204,430,3.086,432,1.019,436,1.667,437,3.753,438,3.56,439,1.393,441,1.093,443,1.362,446,1.533,452,1.778,459,1.533,482,1.099,493,1.204,498,3.766,500,0.817,515,3.564,530,1.019,534,1.274,535,1.147,544,1.147,568,1.72,626,4.084,642,1.147,644,1.843,657,1.147,681,1.843,701,2.451,705,2.001,748,3.935,785,1.057,816,1.147,817,1.274,903,1.057,906,2.936,909,2.661,921,2.661,931,1.147,1111,5.029,1123,2.222,1127,2.222,1134,2.661,1135,2.222,1137,1.274,1139,1.274,1140,2.222,1142,1.274,1143,2.222,1152,0.986,1155,1.274,1222,1.274,1223,2.589,1224,2.589,1225,2.589,1226,1.484,1227,2.589,1228,2.589,1229,2.589,1230,2.589,1231,1.484,1232,1.484,1233,2.589,1234,1.484,1235,2.589,1236,1.484,1237,1.484,1238,1.484,1239,2.589,1240,2.589,1241,2.589,1242,1.484,1243,1.484,1244,1.484,1245,1.484,1246,1.484,1247,2.589,1248,2.589,1249,1.484,1250,1.484,1251,1.484,1252,1.484,1253,1.484,1254,1.484,1255,2.589,1256,1.484,1257,1.484,1258,1.484,1259,1.484,1260,1.484,1261,1.484,1262,1.484,1263,1.484,1264,1.484,1265,1.484,1266,1.484,1267,1.484,1268,1.484,1269,1.484,1270,1.484,1271,1.484,1272,1.484,1273,1.484,1274,1.484,1275,1.484,1276,1.484,1277,1.484,1278,1.484,1279,1.484,1280,1.484,1281,1.484,1282,1.484]],["component/85",[8,0.418]],["title/86",[14,7.674,220,11.508,383,15.632]],["name/86",[14,0.288,47,0.461,220,0.432,439,0.915]],["text/86",[12,2.9,14,1.445,19,2.076,30,2.008,44,2.688,47,1.292,56,1.068,100,2.271,131,1.694,144,3.276,161,2.405,190,2.008,210,2.754,220,2.256,267,2.189,365,2.229,372,2.229,374,2.511,375,2.112,383,2.854,432,3.276,436,4.176,437,2.626,439,3.965,441,2.059,515,2.9,569,2.825,619,3.686,626,3.168,1134,3.686,1152,3.168,1283,4.77,1284,4.77]],["component/86",[8,0.418]],["title/87-1",[168,23.519,212,18.642,281,27.365,288,28.726,353,22.798]],["name/87-1",[]],["text/87-1",[]],["component/87-1",[]],["title/87-2",[14,7.674,152,13.994,187,13.094]],["name/87-2",[]],["text/87-2",[]],["component/87-2",[]],["title/87-3",[10,32.382]],["name/87-3",[]],["text/87-3",[]],["component/87-3",[]],["title/87-4",[220,15.962]],["name/87-4",[]],["text/87-4",[]],["component/87-4",[]],["title/87",[8,5.002,14,8.226,23,19.412,187,9.23,1285,31.927]],["name/87",[14,0.358,47,0.572,187,0.611]],["text/87",[1,1.286,2,1.124,8,0.572,14,1.189,15,1.226,21,2.748,23,1.354,34,2.108,44,1.255,47,0.989,48,0.922,49,1.479,52,1.721,56,0.818,63,1.585,65,1.392,73,1.479,78,0.769,89,3.953,92,2.162,95,1.721,99,1.255,105,2.822,123,1.172,131,1.648,139,1.721,140,1.286,150,1.911,152,1.966,161,1.751,165,1.319,168,1.479,179,1.479,184,1.487,187,1.713,190,0.937,191,2.22,192,1.807,196,1.226,199,3.35,200,2.679,201,2.043,202,2.702,203,2.129,205,1.648,206,2.702,207,1.434,208,1.648,209,1.148,210,2.108,211,3.973,212,2.443,218,0.865,220,0.566,225,1.648,228,1.721,233,1.648,241,2.043,245,1.354,255,3.186,256,1.807,257,2.043,258,0.922,262,1.022,266,1.286,267,2.129,268,2.615,269,3.82,270,1.529,271,4.258,272,3.764,273,2.043,274,1.648,275,1.434,276,4.258,277,1.255,279,1.434,280,2.043,281,4.148,282,1.807,283,2.043,284,1.807,285,2.043,286,2.043,287,1.648,288,1.807,289,3.35,290,2.043,291,2.043,292,2.043,293,2.043,294,1.589,295,1.721,296,1.148,298,1.648,299,3.133,300,2.043,301,2.043,302,2.043,303,2.702,304,1.286,305,4.925,306,2.043,307,3.35,308,2.043,309,2.043,310,4.258,311,2.043,312,1.434,313,2.962,314,1.648,316,1.354,317,2.043,318,2.043,319,2.043,353,1.434,358,2.043,360,2.043,365,1.041,372,1.041,374,1.172,375,0.986,432,1.529,504,1.041,544,1.721,571,1.102,585,3.133,1152,1.479,1161,1.911,1162,1.911,1286,2.227,1287,2.227,1288,2.227,1289,2.227,1290,2.227,1291,2.227]],["component/87",[8,0.418]],["title/88",[110,33.889,479,32.005]],["name/88",[9,2.075]],["text/88",[350,4.34]],["component/88",[8,0.418]],["title/89-1",[0,46.502]],["name/89-1",[]],["text/89-1",[]],["component/89-1",[]],["title/89-2",[78,18.167,533,40.678]],["name/89-2",[]],["text/89-2",[]],["component/89-2",[]],["title/89-3",[47,10.766,56,8.9,332,11.956,441,12.618]],["name/89-3",[]],["text/89-3",[]],["component/89-3",[]],["title/89-4",[332,15.833,496,33.889]],["name/89-4",[]],["text/89-4",[]],["component/89-4",[]],["title/89-5",[8,7.096,372,21.166,497,31.102]],["name/89-5",[]],["text/89-5",[]],["component/89-5",[]],["title/89-6",[296,18.251,365,16.547,375,15.681,498,18.642,499,26.209]],["name/89-6",[]],["text/89-6",[]],["component/89-6",[]],["title/89",[7,36.146,478,38.96]],["name/89",[9,2.075]],["text/89",[8,1.257,13,2.116,36,1.683,47,1.615,51,2.045,56,1.335,66,1.619,89,1.843,97,1.619,129,1.843,131,2.361,161,1.614,187,0.946,196,2.722,209,1.686,210,1.889,218,1.271,221,2.045,226,1.843,227,1.619,234,3.106,237,2.328,238,1.801,262,2.269,267,1.501,268,1.843,277,1.843,332,1.999,356,2.173,365,3.106,369,2.328,372,2.311,373,3.52,374,2.604,375,3.16,382,1.937,383,1.129,394,1.424,441,2.11,463,2.045,478,2.421,500,1.801,501,1.801,502,2.106,503,1.652,504,1.529,505,2.421,506,3.66,507,2.421,508,2.246,509,2.246,510,1.377,511,1.889,512,1.889,513,2.421,514,4.919,515,3.007,516,2.421,517,3.66,518,1.989,519,2.421,520,2.246,521,3.66,522,3.66,523,2.421,524,2.421,525,2.421,526,2.421,527,2.421,528,2.246,529,2.421,530,2.246,531,1.989]],["component/89",[8,0.418]],["title/90",[8,7.096,13,19.383,441,14.379]],["name/90",[9,2.075]],["text/90",[8,1.26,13,3.628,47,1.974,56,1.275,89,4.776,97,3.607,126,4.214,132,5.224,190,2.396,269,4.052,356,4.841,382,3.371,398,5.224,441,1.807,568,3.781,618,4.4,677,4.885,1110,4.885,1292,5.693,1293,5.693,1294,5.693]],["component/90",[8,0.418]],["title/91-1",[383,18.167,815,27.131]],["name/91-1",[]],["text/91-1",[]],["component/91-1",[]],["title/91-2",[89,29.658,742,40.678]],["name/91-2",[]],["text/91-2",[]],["component/91-2",[]],["title/91",[8,5.548,13,15.153,56,7.929,446,20.967,1295,35.41]],["name/91",[13,1.195,815,1.439]],["text/91",[1,1.714,8,1.071,13,3.331,34,1.714,36,1.011,47,1.851,56,1.618,58,1.47,66,1.47,72,1.973,80,2.198,89,4.681,92,1.758,97,1.47,99,1.673,100,2.187,111,2.295,129,3.164,140,1.714,152,2.111,161,2.358,164,1.21,207,1.912,218,1.784,226,3.164,242,2.409,269,3.269,274,3.399,294,1.293,298,2.198,332,1.382,368,1.912,387,3.154,392,2.725,394,1.293,400,1.912,404,1.635,441,1.458,446,4.609,494,2.198,520,3.154,644,3.269,665,1.857,742,3.549,748,3.269,782,2.295,903,3.269,906,2.114,1094,2.548,1296,4.593,1297,2.97,1298,6.32,1299,2.97,1300,2.97,1301,2.97,1302,2.97,1303,2.97,1304,2.97,1305,4.593,1306,5.616,1307,4.593,1308,2.97,1309,2.97,1310,2.97,1311,2.97,1312,2.97,1313,2.97,1314,2.97,1315,2.97,1316,2.97,1317,2.97]],["component/91",[8,0.418]],["title/92",[110,33.889,478,38.96]],["name/92",[9,2.075]],["text/92",[350,4.34]],["component/92",[8,0.418]],["title/93-1",[0,46.502]],["name/93-1",[]],["text/93-1",[]],["component/93-1",[]],["title/93-2",[1,36.271]],["name/93-2",[]],["text/93-2",[]],["component/93-2",[]],["title/93-3",[2,26.577,3,48.299]],["name/93-3",[]],["text/93-3",[]],["component/93-3",[]],["title/93-4",[3,48.299,4,48.299]],["name/93-4",[]],["text/93-4",[]],["component/93-4",[]],["title/93-5",[5,50.967]],["name/93-5",[]],["text/93-5",[]],["component/93-5",[]],["title/93-6",[6,62.827]],["name/93-6",[]],["text/93-6",[]],["component/93-6",[]],["title/93",[7,36.146,8,8.247]],["name/93",[9,2.075]],["text/93",[1,4.251,3,3.909,4,1.811,5,1.601,6,1.974,8,0.94,10,2.196,11,2.664,12,3.029,13,1.823,14,1.079,15,2.742,16,1.974,17,1.811,18,1.974,19,1.438,20,1.974,21,1.169,22,1.974,23,2.009,24,1.693,25,1.461,26,2.68,27,1.2,28,1.525,29,1.525,30,0.831,31,1.811,32,1.974,33,2.553,34,1.907,35,2.68,36,1.45,37,1.818,38,2.239,39,1.811,40,2.239,41,1.601,42,1.811,43,1.811,44,1.861,45,1.461,46,2.239,47,1.625,48,0.817,49,2.83,50,2.239,51,1.234,52,1.525,53,1.974,54,1.811,55,2.239,56,1.116,57,2.834,58,1.635,59,2.239,60,1.693,61,1.974,62,1.2,63,3.033,64,3.748,65,2.065,66,2.108,67,1.405,68,2.239,69,4.833,70,1.811,71,3.031,72,1.311,73,1.311,74,1.601,75,1.811,76,1.461,77,0.662,78,1.14,79,2.239,80,1.461,81,1.311,82,2.239,83,1.974,84,1.693,85,2.239,86,2.239,87,3.304,88,1.461,89,1.861,91,2.239,92,1.169,93,3.748,94,1.2,95,1.525,96,1.693,97,1.635,98,2.239,99,1.112,100,1.573,101,2.239,102,2.239,103,3.748,104,2.239,105,1.525,106,1.693,107,2.239,108,2.239,109,2.239,110,1.271,111,1.525,112,1.601,113,1.974,114,1.693,115,1.811,116,1.525,117,1.461,118,1.974,119,1.601,120,1.271,121,1.974,122,1.601,123,1.739,124,1.693,125,2.445,126,1.461,127,2.239,128,1.974,129,1.112,130,1.693,131,1.513,132,3.031,133,2.239,134,1.811,135,1.693,136,1.974,137,2.239,138,2.239,139,2.553,140,1.139,141,1.974,142,1.811,143,3.909,144,1.355,145,1.461,146,2.239,147,2.239,148,2.239,149,2.239,150,1.693,151,2.239,152,1.021,153,2.239,154,2.239,155,2.239,156,1.311,157,1.974,158,1.461,159,2.239,160,2.239,161,0.644,162,2.239,163,1.974,164,0.804,165,1.169,166,2.239,167,1.601,168,1.311,169,2.239,170,2.239,171,2.239,172,1.2,173,1.974,174,1.169,175,2.239,176,2.239,177,2.239,602,1.388]],["component/93",[8,0.418]],["title/94-1",[8,6.227,36,13.524,62,24.167,178,20.486]],["name/94-1",[]],["text/94-1",[]],["component/94-1",[]],["title/94-2",[179,41.729]],["name/94-2",[]],["text/94-2",[]],["component/94-2",[]],["title/94-3",[14,10.645]],["name/94-3",[]],["text/94-3",[]],["component/94-3",[]],["title/94",[178,32.382]],["name/94",[178,2.119]],["text/94",[2,0.816,8,0.685,14,1.16,15,1.534,17,1.482,21,2.176,23,0.982,27,2.234,30,1.546,34,1.609,35,1.311,36,0.55,44,0.91,45,2.063,47,0.438,48,1.154,49,1.073,52,1.248,56,0.979,60,1.386,62,0.982,63,2.615,67,1.15,84,1.386,89,3.441,92,2.588,105,3.378,106,1.386,114,1.386,122,2.981,123,0.851,131,0.574,140,0.933,142,2.557,150,1.386,152,2.049,165,0.957,168,1.073,179,4.406,180,4.958,181,1.482,182,1.01,183,1.833,184,2.009,185,1.616,186,1.311,187,1.98,188,3.161,189,1.833,190,1.546,191,2.998,192,2.261,193,4.958,194,1.833,195,1.196,196,2.022,197,1.833,198,1.196,199,3.372,200,2.121,201,1.482,202,1.196,203,2.931,204,1.833,205,1.196,206,2.063,207,1.04,208,2.063,209,0.833,210,1.609,211,3.65,212,1.467,213,1.311,214,1.482,215,3.161,216,1.616,217,1.833,218,1.428,219,0.816,220,0.41,221,1.01,222,1.833,223,1.109,224,1.833,225,1.196,226,0.91,227,0.8,228,2.153,229,1.248,230,1.833,231,2.787,232,1.833,233,2.063,234,0.703,235,1.833,236,1.833,237,1.15,238,0.889,239,1.833,240,1.833,241,1.482,242,1.311,243,1.833,244,1.482,245,2.234,246,1.833,247,0.982,248,2.063,249,1.833,250,1.482,251,1.833,252,1.833,253,1.01,254,1.311,255,3.001,256,2.261,257,2.557,258,1.521,259,1.833,260,1.482,261,1.833,262,1.279,263,1.833,264,1.482,265,1.833,266,0.933,267,1.279,268,2.463,269,3.111,270,1.109,271,2.557,272,1.311,273,1.482,274,1.196,275,1.04,276,1.482,277,0.91,278,1.833,279,1.04,280,1.482,281,3.378,282,1.311,283,1.482,284,1.311,285,1.482,286,1.482,287,1.196,288,1.311,289,2.557,290,1.482,291,1.482,292,1.482,293,1.482,294,1.213,295,1.248,296,0.833,297,1.833,298,1.196,299,2.391,300,1.482,301,1.482,302,1.482,303,2.063,304,0.933,305,4.01,306,1.482,307,2.557,308,1.482,309,1.482,310,3.372,311,1.482,312,1.04,313,2.261,314,1.196,315,3.161,316,0.982,317,1.482,318,1.482,319,1.482,320,1.482]],["component/94",[8,0.418]],["title/95",[5,50.967]],["name/95",[5,3.334]],["text/95",[1,2.918,5,4.101,8,0.792,10,2.606,19,2.2,26,4.101,30,3.194,31,4.639,36,1.72,37,2.782,56,1.51,58,2.502,73,3.358,99,2.848,100,2.407,122,4.101,152,2.345,156,4.479,161,1.65,165,2.993,174,2.993,179,3.358,228,3.907,321,5.735,322,5.735,323,5.735,324,5.735,325,5.735,326,4.639,327,7.651,328,3.742,329,5.735,330,3.742,331,5.735,332,1.521,333,3.742,334,4.337,335,5.735,336,5.735,337,5.735]],["component/95",[8,0.418]],["title/96-1",[338,71.275]],["name/96-1",[]],["text/96-1",[]],["component/96-1",[]],["title/96-2",[339,71.275]],["name/96-2",[]],["text/96-2",[]],["component/96-2",[]],["title/96-3",[218,24.411]],["name/96-3",[]],["text/96-3",[]],["component/96-3",[]],["title/96",[8,8.247,340,40.678]],["name/96",[340,3.176]],["text/96",[10,3.037,11,3.683,12,3.582,13,2.521,14,1.384,15,4.1,16,5.892,18,5.892,19,2.564,20,5.892,21,3.489,22,5.892,23,3.582,24,5.055,25,4.361,26,4.779,27,3.582,28,4.553,29,4.553,30,2.479,31,5.406,32,5.892,33,4.553,34,3.401,35,4.779]],["component/96",[8,0.418]],["title/97",[125,46.502]],["name/97",[9,2.075]],["text/97",[112,5.553,125,6.046,164,3.328,341,7.766,342,7.766,343,7.766,344,7.766,345,7.766,346,5.553,347,7.766]],["component/97",[8,0.418]],["title/98",[87,45.293,348,51.383,349,51.383]],["name/98",[83,4.11]],["text/98",[350,4.34]],["component/98",[8,0.418]],["title/99",[124,53.903]],["name/99",[9,2.075]],["text/99",[112,5.235,114,5.537,115,5.921,117,4.776,119,5.235,124,7.303,164,3.211,196,3.552,299,5.537,340,4.987,351,7.321,352,7.321,353,4.155,354,7.321,355,7.321]],["component/99",[8,0.418]],["title/100-1",[10,32.382]],["name/100-1",[]],["text/100-1",[]],["component/100-1",[]],["title/100-2",[356,34.962,357,52.638]],["name/100-2",[]],["text/100-2",[]],["component/100-2",[]],["title/100-3",[74,50.967]],["name/100-3",[]],["text/100-3",[]],["component/100-3",[]],["title/100",[10,23.345,74,36.743,356,30.083]],["name/100",[74,3.334]],["text/100",[1,1.545,2,1.351,8,0.663,10,3.078,11,1.673,12,1.627,13,2.248,14,0.453,29,2.068,36,1.441,44,3.364,47,1.874,53,2.676,56,0.599,58,1.324,61,2.676,62,1.627,63,3.013,65,2.647,66,2.095,72,1.777,74,3.434,78,0.924,89,3.665,97,1.324,123,1.409,128,2.676,131,1.504,139,2.068,143,5.479,144,1.838,145,1.981,152,2.01,156,1.777,163,4.234,187,0.774,190,1.782,216,2.676,218,1.04,238,1.473,245,1.627,253,1.673,269,1.905,332,0.805,340,2.068,356,5.368,357,2.676,358,2.456,359,3.036,360,2.456,361,4.803,362,3.036,363,4.234,364,1.838,365,2.455,366,3.036,367,2.456,368,1.723,369,3.013,370,2.171,371,3.036,372,1.251,373,1.905,374,1.409,375,1.185,376,3.036,377,3.036,378,2.171,379,2.456,380,3.036,381,3.036,382,2.507,383,0.924,384,3.036,385,3.036,386,3.036,387,1.838,388,2.676,389,2.456,390,3.036,391,3.036,392,3.885,393,4.803,394,1.165,395,2.676,396,3.036,397,3.036,398,3.885,399,3.036,400,1.723,401,2.456,402,3.036,403,3.036,404,1.473,405,3.036,406,3.036,407,3.036,408,3.036,409,3.036,410,3.036,411,2.456,412,2.171,413,3.036,414,3.036,415,1.905,416,2.171,417,1.585,418,1.473,419,3.036,420,3.036,421,1.545,422,3.036,423,1.981,424,2.456]],["component/100",[8,0.418]],["title/101",[350,29.658,425,45.161]],["name/101",[350,2.316]],["text/101",[1,3.524,11,3.816,25,4.518,94,4.632,123,3.214,130,5.237,135,5.237,136,6.104,139,4.717,140,3.524,141,6.104,142,5.601,143,5.601,144,4.192,210,3.524,295,4.717,296,3.146,350,3.439,425,5.237,426,4.952,427,4.952,428,6.925,429,6.925]],["component/101",[8,0.418]],["title/102",[8,7.096,47,12.269,334,38.859]],["name/102",[47,0.756,334,2.395]],["text/102",[8,0.319,13,0.87,14,1.314,15,1.119,26,3.53,77,0.682,152,1.881,157,4.352,161,3.17,173,2.033,179,1.35,185,2.033,187,1.76,190,1.425,203,0.933,220,1.718,231,2.033,294,2.209,332,1.309,363,3.386,374,1.07,375,0.9,388,2.033,395,6.088,430,1.07,431,2.306,432,1.396,433,2.306,434,2.306,435,8.016,436,5.221,437,1.119,438,1.309,439,2.342,440,1.649,441,2.3,442,1.865,443,1.865,444,2.306,445,3.842,446,1.204,447,0.968,448,2.747,449,2.306,450,2.306,451,2.306,452,1.396,453,2.306,454,3.107,455,2.306,456,2.306,457,4.937,458,2.306]],["component/102",[8,0.418]],["title/103",[65,39.279]],["name/103",[9,2.075]],["text/103",[4,6.218,65,5.077,112,5.497,124,5.814,164,3.308,281,5.237,423,5.016,459,4.013,460,7.688,461,7.688,462,7.688]],["component/103",[8,0.418]],["title/104-1",[8,5.548,44,19.951,47,9.592,415,25.204,463,22.138]],["name/104-1",[]],["text/104-1",[]],["component/104-1",[]],["title/104-2",[8,8.944,13,17.009,464,35.606]],["name/104-2",[]],["text/104-2",[]],["component/104-2",[]],["title/104-3",[8,8.944,418,21.877,464,35.606]],["name/104-3",[]],["text/104-3",[]],["component/104-3",[]],["title/104-4",[8,8.944,77,13.335,464,35.606]],["name/104-4",[]],["text/104-4",[]],["component/104-4",[]],["title/104",[8,8.247,47,14.258]],["name/104",[47,0.756,131,0.992]],["text/104",[8,1.3,13,2.919,14,1.274,15,3.082,17,2.713,21,1.751,26,2.399,29,2.285,30,1.244,37,1.627,45,2.188,47,2.161,56,1.025,57,2.537,58,1.463,62,1.798,63,2.105,66,1.463,77,1.879,81,1.964,89,1.666,94,1.798,95,3.537,96,2.537,97,1.463,120,1.904,123,2.41,129,3.156,131,2.562,139,2.285,145,2.188,152,1.73,156,1.964,165,1.751,178,1.524,182,2.862,187,0.855,218,2.176,220,1.163,229,2.285,234,1.287,245,1.798,258,1.224,294,1.287,296,1.524,332,0.889,334,2.537,356,1.964,382,1.751,394,1.287,417,2.71,418,1.627,423,2.188,439,2.463,441,1.453,446,1.751,447,1.408,459,1.751,465,3.354,466,3.354,467,3.354,468,3.354,469,3.354,470,3.354,471,3.354,472,3.354,473,3.354,474,3.354,475,2.03,476,3.354,477,3.354,478,2.188,479,1.798,480,1.904,481,2.713,482,2.188,483,2.713,484,2.713,485,2.713,486,2.713,487,2.713,488,2.713,489,3.388,490,4.2,491,2.188,492,2.399,493,2.399,494,2.188,495,2.713]],["component/104",[8,0.418]],["title/105-1",[332,15.833,496,33.889]],["name/105-1",[]],["text/105-1",[]],["component/105-1",[]],["title/105-2",[8,7.096,372,21.166,497,31.102]],["name/105-2",[]],["text/105-2",[]],["component/105-2",[]],["title/105-3",[296,18.251,365,16.547,375,15.681,498,18.642,499,26.209]],["name/105-3",[]],["text/105-3",[]],["component/105-3",[]],["title/105",[47,10.766,56,8.9,332,11.956,441,12.618]],["name/105",[47,0.756,332,0.84]],["text/105",[8,1.152,36,1.773,47,1.412,51,2.194,56,1.392,66,1.736,97,1.736,131,2.209,161,1.701,187,1.014,196,2.869,209,1.808,210,2.026,221,2.194,226,1.977,227,1.736,234,3.201,237,2.497,238,1.931,262,2.391,267,1.61,268,1.977,277,1.977,332,2.07,365,3.216,369,2.497,372,2.436,373,3.71,374,2.744,375,3.256,383,1.211,394,1.527,441,1.974,463,2.194,500,1.931,501,1.931,502,2.259,503,1.772,504,1.64,505,2.597,506,3.858,507,2.597,508,2.409,509,2.409,510,1.477,511,2.026,512,2.026,513,2.597,514,5.094,515,3.169,516,2.597,517,3.858,518,2.133,519,2.597,520,2.409,521,3.858,522,3.858,523,2.597,524,2.597,525,2.597,526,2.597,527,2.597,528,2.409,529,2.597,530,2.409,531,2.133]],["component/105",[8,0.418]],["title/106",[110,40.449]],["name/106",[9,2.075]],["text/106",[36,2.217,110,5.105,111,5.035,112,5.286,113,6.516,114,5.59,115,5.978,116,5.035,117,4.822,118,6.516,119,5.286,120,4.195,121,6.516,164,3.23,532,7.392]],["component/106",[8,0.418]],["title/107-1",[0,46.502]],["name/107-1",[]],["text/107-1",[]],["component/107-1",[]],["title/107-2",[78,18.167,533,40.678]],["name/107-2",[]],["text/107-2",[]],["component/107-2",[]],["title/107-3",[47,10.766,56,8.9,332,11.956,441,12.618]],["name/107-3",[]],["text/107-3",[]],["component/107-3",[]],["title/107-4",[332,15.833,496,33.889]],["name/107-4",[]],["text/107-4",[]],["component/107-4",[]],["title/107-5",[8,7.096,372,21.166,497,31.102]],["name/107-5",[]],["text/107-5",[]],["component/107-5",[]],["title/107-6",[296,18.251,365,16.547,375,15.681,498,18.642,499,26.209]],["name/107-6",[]],["text/107-6",[]],["component/107-6",[]],["title/107-7",[534,45.161,535,40.678]],["name/107-7",[]],["text/107-7",[]],["component/107-7",[]],["title/107",[7,31.102,8,7.096,77,15.196]],["name/107",[9,2.075]],["text/107",[2,0.949,8,1.186,10,1.635,11,1.176,13,1.357,14,0.697,15,1.746,19,0.818,21,1.113,28,1.453,30,1.731,36,1.991,37,1.035,39,1.725,44,1.06,47,1.114,49,1.249,51,1.176,56,1.621,66,1.57,75,1.725,77,2.089,78,0.649,84,1.613,95,1.453,97,1.57,99,1.06,120,2.648,123,1.67,125,1.392,129,1.06,131,2.212,145,1.392,152,2.021,161,1.035,178,0.969,179,2.732,182,1.983,187,0.544,195,1.392,196,1.746,209,0.969,210,1.086,211,1.392,218,1.598,221,1.983,225,1.392,226,1.06,227,1.57,229,1.453,234,2.547,237,1.338,238,1.035,245,1.143,258,2.234,262,1.455,267,0.863,268,1.06,277,1.06,296,0.969,316,1.143,328,1.392,332,1.623,340,1.453,346,1.525,365,2.258,369,1.338,372,1.482,373,2.258,374,1.67,375,2.389,383,0.649,394,2.71,400,1.211,417,2.861,421,1.086,441,1.306,463,1.176,481,1.725,482,1.392,483,1.725,484,1.725,485,1.725,486,1.725,487,1.725,488,1.725,489,2.348,490,2.91,491,1.392,492,1.525,493,1.525,494,1.392,495,1.725,500,1.035,501,1.035,502,1.211,503,2.439,504,0.879,505,1.392,506,2.348,507,1.392,508,1.291,509,1.291,510,0.791,511,1.086,512,1.086,513,1.392,514,3.576,515,1.929,516,1.392,517,2.348,518,1.143,519,1.392,520,1.291,521,2.348,522,2.348,523,1.392,524,1.392,525,1.392,526,1.392,527,1.392,528,1.291,529,1.392,530,1.291,531,1.143,536,1.453,537,1.88,538,1.88,539,1.88,540,1.613,541,3.172,542,1.88,543,1.88,544,1.453,545,1.613,546,1.613,547,1.88,548,1.613,549,1.338,550,1.983,551,0.931,552,1.613,553,1.88,554,1.88,555,1.88,556,1.453,557,1.453,558,1.06,559,0.778,560,1.012,561,1.88,562,1.453,563,1.88,564,1.88]],["component/107",[8,0.418]],["title/108",[14,6,19,15.413,30,14.903,152,10.941,551,17.524]],["name/108",[19,1.215,551,1.381]],["text/108",[]],["component/108",[8,0.418]],["title/109",[2,22.869,77,15.196,131,16.088]],["name/109",[2,2.075]],["text/109",[1,1.753,2,1.533,8,0.476,14,1.416,19,1.322,23,1.846,24,2.605,30,2.397,36,1.033,47,1.266,48,2.358,56,1.275,77,1.019,94,1.846,100,2.711,116,2.347,131,1.079,145,2.247,152,2.346,161,2.624,184,1.903,187,1.996,190,1.966,191,1.846,200,2.697,219,3.681,220,1.625,248,2.247,304,3.692,314,2.247,332,0.913,382,1.798,383,1.965,394,2.479,400,1.955,404,2.572,417,1.798,421,1.753,436,1.955,437,1.671,441,0.964,447,1.446,459,1.798,489,2.247,503,2.359,510,1.278,512,2.697,550,1.898,556,2.347,558,1.711,559,1.934,560,2.514,562,2.347,565,3.036,566,3.036,567,3.036,568,2.017,569,1.798,570,2.605,571,3.608,572,3.036,573,2.605,574,4.401,575,2.347,576,3.036,577,2.017,578,2.605,579,1.898,580,2.017]],["component/109",[8,0.418]],["title/110",[56,8.9,164,16.191,258,16.455,559,16.455]],["name/110",[164,1.137,581,1.745]],["text/110",[14,1.135,19,1.238,44,1.603,47,0.771,48,1.178,56,1.661,58,1.408,67,3.162,81,1.89,88,3.288,92,1.685,94,1.73,120,1.832,129,1.603,134,2.61,152,1.688,182,4.438,184,1.159,196,3.008,203,1.305,208,2.106,212,1.498,226,1.603,234,1.238,242,3.604,254,3.604,258,2.939,262,1.305,294,1.933,304,3.565,328,2.106,333,3.288,378,2.308,382,1.685,404,1.566,417,1.685,423,2.106,424,4.076,426,2.308,500,1.566,510,1.869,548,4.688,550,1.779,558,1.603,559,2.557,560,1.531,569,1.685,580,1.89,582,2.845,583,4.223,584,5.465,585,2.441,586,2.025,587,2.025,588,2.199,589,5.298,590,2.025,591,3.63,592,7.673,593,2.845,594,2.95,595,4.442,596,5.465,597,4.442,598,3.162,599,4.442,600,2.441,601,2.025,602,3.842,603,5.465,604,2.95,605,2.845,606,2.845,607,2.845,608,3.162,609,2.845,610,2.845,611,2.845,612,2.845,613,2.845,614,2.845,615,1.603]],["component/110",[8,0.418]],["title/111",[56,7.149,172,19.412,258,13.218,604,21.206,616,22.725,617,27.392]],["name/111",[172,1.697,581,1.745]],["text/111",[]],["component/111",[8,0.418]],["title/112-1",[62,38.201]],["name/112-1",[]],["text/112-1",[]],["component/112-1",[]],["title/112-2",[56,8.9,178,20.486,258,16.455,618,30.716]],["name/112-2",[]],["text/112-2",[]],["component/112-2",[]],["title/112",[36,13.524,56,8.9,77,13.335,258,16.455]],["name/112",[581,2.57]],["text/112",[14,1.399,19,1.704,36,1.332,37,2.155,47,1.06,56,1.849,77,1.313,80,2.897,92,2.318,123,2.061,152,1.21,161,2.613,164,2.3,168,2.6,172,3.433,178,2.018,187,1.915,212,2.061,218,1.521,219,3.344,220,1.683,234,1.704,258,3.418,294,2.458,353,2.52,447,2.689,459,2.318,475,2.688,551,1.937,552,3.359,559,2.338,579,3.53,583,3.025,588,3.025,590,2.786,601,2.786,604,2.6,616,2.786,617,3.359,619,3.025,620,3.915,621,3.359,622,3.359,623,3.915,624,3.915,625,4.019,626,3.751,627,4.845]],["component/112",[8,0.418]],["title/113-1",[88,33.523,165,26.819,178,23.345]],["name/113-1",[]],["text/113-1",[]],["component/113-1",[]],["title/113-2",[30,22.153,152,16.264]],["name/113-2",[]],["text/113-2",[]],["component/113-2",[]],["title/113-3",[14,6,19,15.413,220,13.332,383,12.221]],["name/113-3",[]],["text/113-3",[]],["component/113-3",[]],["title/113-4",[19,19.714,100,21.564,571,22.414]],["name/113-4",[]],["text/113-4",[]],["component/113-4",[]],["title/113-5",[48,21.792,571,26.049]],["name/113-5",[]],["text/113-5",[]],["component/113-5",[]],["title/113-6",[94,21.53,404,19.49,558,19.951,559,14.66,615,19.951]],["name/113-6",[]],["text/113-6",[]],["component/113-6",[]],["title/113-7",[15,19.49,168,23.519,212,18.642,353,22.798,615,19.951]],["name/113-7",[]],["text/113-7",[]],["component/113-7",[]],["title/113-8",[161,12.969,213,32.243,214,36.47,370,32.243]],["name/113-8",[]],["text/113-8",[]],["component/113-8",[]],["title/113",[47,10.766,131,14.118,165,23.535,178,20.486]],["name/113",[178,2.119]],["text/113",[1,2.361,8,0.493,10,0.961,12,1.915,13,0.798,14,1.377,15,1.026,19,2.092,27,1.134,30,2.022,36,1.072,37,2.251,45,1.38,47,2.004,48,2.568,51,1.166,56,1.52,58,2.883,62,1.134,66,0.923,73,4.662,76,1.38,77,1.372,80,2.331,88,1.38,92,1.865,97,0.923,99,1.775,100,1.947,117,1.38,131,0.662,152,1.8,156,1.239,158,1.38,161,2.127,164,0.76,167,1.513,174,3.672,178,0.961,182,1.969,184,2.187,187,1.552,190,0.785,191,1.915,196,1.026,200,1.077,203,0.856,208,1.38,218,2.532,220,1.656,228,1.441,234,2.337,245,1.915,248,1.38,255,1.281,256,1.513,258,1.989,262,0.856,294,0.812,304,1.077,316,1.134,330,1.38,382,1.104,383,1.411,394,0.812,417,1.865,437,1.026,446,1.104,463,1.166,475,1.281,480,1.201,489,1.38,491,1.38,510,2.022,511,1.077,512,2.361,536,1.441,545,1.6,550,1.969,551,0.923,559,1.989,562,2.434,571,2.883,574,1.441,575,1.441,577,2.092,578,1.6,587,1.327,588,2.434,619,1.441,625,3.822,628,1.865,629,3.15,630,1.865,631,1.865,632,1.865,633,2.91,634,1.865,635,1.865,636,1.6,637,1.865,638,2.556,639,1.865,640,1.865,641,1.865,642,1.441,643,3.508,644,1.327,645,1.865,646,1.865,647,2.702,648,1.865,649,1.865,650,1.865,651,1.327,652,3.15,653,1.865]],["component/113",[8,0.418]],["title/114-1",[161,14.779,184,18.45,332,13.624]],["name/114-1",[]],["text/114-1",[]],["component/114-1",[]],["title/114-2",[164,14.424,332,10.651,558,19.951,559,14.66,560,19.054]],["name/114-2",[]],["text/114-2",[]],["component/114-2",[]],["title/114-3",[48,16.455,78,13.718,172,24.167,571,19.67]],["name/114-3",[]],["text/114-3",[]],["component/114-3",[]],["title/114-4",[184,16.191,560,21.388,580,26.399,654,39.746]],["name/114-4",[]],["text/114-4",[]],["component/114-4",[]],["title/114",[94,19.412,245,19.412,404,17.573,559,13.218,560,17.18,615,17.989]],["name/114",[559,1.702]],["text/114",[1,1.7,8,0.461,14,1.272,23,1.79,27,1.79,36,1.552,43,2.701,47,1.236,48,2.818,49,1.955,56,1.251,67,2.095,77,0.988,78,2.171,94,3.396,97,1.457,99,1.659,100,1.402,122,2.388,123,1.55,144,2.022,152,1.944,164,1.199,172,1.79,174,1.743,182,1.841,184,2.275,187,1.319,203,1.351,218,1.772,219,2.82,220,1.729,233,2.179,234,1.281,247,1.79,258,1.219,262,2.093,266,2.634,268,1.659,304,3.224,328,2.179,332,0.886,387,2.022,400,1.895,404,3.462,417,2.701,423,2.179,441,0.935,463,1.841,503,1.486,504,2.132,510,2.35,512,1.7,550,1.841,551,1.457,558,3.147,559,2.981,569,1.743,571,2.764,579,1.841,580,3.03,583,2.275,586,2.095,587,2.095,594,1.955,615,3.147,621,2.526,651,2.095,655,4.562,656,2.944,657,2.275,658,2.526,659,2.944,660,2.944,661,2.275,662,2.275,663,2.944,664,2.275,665,1.841,666,2.944,667,2.275,668,2.275,669,2.275,670,2.944,671,2.275,672,2.944,673,2.275]],["component/114",[8,0.418]],["title/115-1",[30,26.441]],["name/115-1",[]],["text/115-1",[]],["component/115-1",[]],["title/115-2",[220,13.374,383,18.167]],["name/115-2",[]],["text/115-2",[]],["component/115-2",[]],["title/115-3",[330,46.502]],["name/115-3",[]],["text/115-3",[]],["component/115-3",[]],["title/115",[14,7.654,19,12.652,37,15.999,100,13.84,220,7.385,383,10.032]],["name/115",[14,0.493,37,0.936,220,0.432]],["text/115",[2,0.627,8,0.195,12,0.755,14,0.21,25,1.638,30,1.944,34,1.727,36,0.423,42,2.745,48,1.725,49,0.825,52,1.71,56,0.813,65,3.131,70,1.14,77,0.417,99,0.7,100,0.591,116,0.96,117,0.919,129,1.247,130,1.066,131,0.786,152,0.924,158,0.919,161,3.033,164,0.901,179,1.987,195,2.688,203,1.373,210,0.717,211,0.919,212,1.165,220,0.562,223,0.853,225,0.919,248,0.919,275,1.425,277,2.603,279,0.8,313,1.008,316,0.755,320,1.14,330,1.638,332,1.092,375,0.55,382,0.735,383,1.947,394,0.963,400,0.8,401,1.14,404,0.684,427,1.008,430,1.575,438,0.8,439,0.668,459,1.31,475,0.853,497,4.709,508,0.853,531,3.431,536,0.96,551,1.481,568,1.47,591,4.214,594,3.551,602,0.873,604,1.987,665,1.383,674,1.242,675,1.242,676,0.884,677,1.066,678,1.242,679,2.213,680,1.242,681,2.585,682,2.992,683,1.242,684,1.242,685,3.22,686,1.242,687,1.242,688,1.242,689,1.066,690,1.242,691,1.898,692,1.575,693,1.242,694,4.562,695,1.066,696,2.213,697,1.066,698,4.166,699,1.242,700,1.242,701,0.884,702,1.066,703,4.297,704,1.575,705,0.96,706,1.242,707,1.242,708,1.242,709,1.242,710,0.96,711,1.242,712,1.242,713,1.066,714,1.242,715,3.574,716,2.213,717,2.213,718,0.884,719,1.242,720,0.884,721,2.992,722,0.884,723,3.116,724,1.242,725,1.242,726,3.963,727,1.242,728,1.242,729,1.242,730,1.242,731,1.242,732,1.242,733,1.242,734,1.242,735,1.242,736,1.242,737,1.242,738,1.242,739,2.992,740,1.242,741,2.992,742,2.312,743,2.992,744,6.345,745,2.992,746,3.632,747,1.242,748,1.575,749,3.632,750,1.242,751,4.132,752,2.213,753,1.242,754,1.242,755,2.213,756,1.242,757,1.242,758,1.242,759,1.242,760,1.242,761,2.213,762,1.242,763,1.242,764,1.242,765,1.242,766,1.242,767,2.992,768,1.242,769,1.242,770,2.213,771,2.213,772,2.213,773,1.242,774,1.242,775,1.242,776,1.242,777,2.213,778,1.242,779,1.242,780,1.242,781,1.242,782,0.96,783,0.96,784,1.242]],["component/115",[8,0.418]],["title/116",[14,6.734,78,13.718,187,11.49,785,28.291]],["name/116",[14,0.473,187,0.807]],["text/116",[14,1.408,47,1.774,56,1.662,66,3.241,78,2.562,131,1.719,184,2.667,187,2.146,190,2.036,203,2.22,213,5.312,266,2.793,353,3.115,441,1.536,500,2.663,501,2.663,504,2.261,568,3.214,615,2.726,692,3.444,785,3.444,786,3.444,787,3.739,788,5.061,789,4.151,790,4.151,791,3.444,792,4.838,793,4.838,794,4.838,795,4.838,796,4.838,797,4.838,798,4.838,799,4.838,800,4.838,801,4.838,802,4.151]],["component/116",[8,0.418]],["title/117",[19,17.3,551,19.67,571,19.67,658,34.101]],["name/117",[571,2.034]],["text/117",[8,0.55,10,2.686,14,1.054,15,3.422,19,2.269,30,2.193,35,2.846,36,1.194,44,1.977,47,0.95,48,2.158,51,2.194,56,0.786,66,1.736,76,2.597,81,2.33,96,3.01,99,1.977,100,2.96,106,3.01,140,2.026,164,1.429,167,4.228,187,1.507,209,1.808,218,2.994,219,1.772,220,2.082,238,1.931,245,2.133,253,2.194,262,1.61,267,1.61,279,4.003,333,3.858,346,2.846,383,1.211,394,2.269,404,1.931,412,2.846,510,2.193,546,3.01,551,2.579,559,2.158,560,1.888,569,2.078,571,3.077,577,2.33,580,3.462,587,2.497,633,3.71,636,3.01,638,4.817,676,2.497,803,3.509,804,3.509,805,3.509,806,3.509,807,3.509,808,3.509,809,3.509,810,3.01,811,3.509,812,3.509,813,3.509,814,3.509]],["component/117",[8,0.418]],["title/118-1",[332,18.898]],["name/118-1",[]],["text/118-1",[]],["component/118-1",[]],["title/118-2",[815,32.382]],["name/118-2",[]],["text/118-2",[]],["component/118-2",[]],["title/118",[220,11.508,510,19.062,577,30.083]],["name/118",[14,0.288,219,0.859,220,0.432,579,1.063]],["text/118",[7,0.985,11,1.571,14,0.854,30,0.604,34,0.828,36,1.141,48,1.04,78,0.495,97,0.71,111,2.591,152,2.341,161,2.87,174,0.849,184,1.366,187,0.726,190,1.057,200,0.828,203,0.658,218,1.564,219,2.033,220,1.538,223,2.302,234,0.624,262,0.658,266,0.828,267,0.658,296,0.739,312,1.618,332,0.756,333,1.061,368,0.923,394,1.094,417,0.849,421,1.45,430,3.033,441,0.798,447,1.196,459,2.384,496,0.923,498,1.323,501,0.789,503,1.269,504,1.174,510,1.057,549,1.021,559,0.594,569,0.849,571,1.243,573,1.23,574,1.108,577,0.953,591,3.346,594,1.669,598,1.021,608,1.021,638,0.897,644,1.021,651,1.021,661,1.108,662,1.108,664,1.108,667,1.108,685,1.108,704,1.021,718,1.788,720,2.866,722,2.866,751,1.942,816,1.108,817,1.23,818,1.23,819,1.434,820,1.23,821,1.23,822,1.23,823,1.434,824,1.434,825,1.108,826,1.108,827,1.434,828,1.108,829,1.108,830,1.108,831,1.108,832,1.434,833,1.434,834,1.434,835,5.192,836,0.953,837,4.943,838,4.943,839,1.23,840,4.453,841,4.943,842,4.943,843,4.943,844,3.454,845,7.068,846,6.188,847,6.188,848,6.188,849,4.578,850,2.512,851,2.512,852,4.026,853,2.156,854,2.156,855,2.512,856,1.434,857,1.434,858,1.434,859,2.512,860,4.026,861,3.353,862,3.353,863,2.512,864,3.353,865,3.454,866,2.877,867,1.434,868,1.434,869,1.434,870,1.434,871,1.434,872,1.434,873,1.434,874,1.434]],["component/118",[8,0.418]],["title/119-1",[332,18.898]],["name/119-1",[]],["text/119-1",[]],["component/119-1",[]],["title/119-2",[815,32.382]],["name/119-2",[]],["text/119-2",[]],["component/119-2",[]],["title/119-3",[412,36.743,647,38.859,875,45.293]],["name/119-3",[]],["text/119-3",[]],["component/119-3",[]],["title/119",[14,6.734,187,11.49,220,10.098,510,16.728]],["name/119",[14,0.288,187,0.492,219,0.859,220,0.432]],["text/119",[14,1.153,15,1.62,36,1.002,48,1.219,56,0.659,78,1.574,97,1.457,131,1.046,152,0.91,161,2.705,184,1.199,187,1.615,200,2.634,203,2.563,218,2.444,219,3.792,220,2.106,226,1.659,254,3.701,262,1.351,266,1.7,312,2.937,332,0.886,368,1.895,370,2.388,383,1.016,394,2.738,421,1.7,430,2.402,441,0.935,501,1.62,503,2.303,504,2.132,510,1.239,551,1.457,559,1.889,569,1.743,575,2.275,591,1.955,598,2.095,638,1.841,651,2.095,661,2.275,662,2.275,664,2.275,704,2.095,720,3.247,722,3.247,786,2.095,816,2.275,818,2.526,820,2.526,835,3.914,836,1.955,837,2.526,838,2.526,839,2.526,840,2.275,841,2.526,842,2.526,843,2.526,844,3.914,846,3.914,847,3.914,848,3.914,853,2.526,854,2.526,866,2.526,876,2.944,877,2.944,878,2.944,879,2.944,880,2.944,881,2.944,882,4.562,883,2.944,884,2.944,885,2.944,886,2.944,887,4.562,888,2.944,889,4.562,890,2.944,891,2.944,892,2.944]],["component/119",[8,0.418]],["title/120-1",[78,15.632,590,32.238,893,30.083]],["name/120-1",[]],["text/120-1",[]],["component/120-1",[]],["title/120",[48,14.66,56,7.929,164,14.424,184,14.424,258,14.66]],["name/120",[78,0.729,164,0.861,581,1.321]],["text/120",[10,1.374,11,1.667,14,1.17,27,2.566,33,1.186,34,1.539,36,1.202,47,0.416,48,0.635,56,1.07,58,0.76,73,1.771,77,0.894,78,1.649,81,1.02,110,0.988,120,1.716,126,1.136,131,0.545,152,1.929,161,2.86,164,1.086,165,1.579,174,1.579,178,0.791,182,0.96,184,1.439,186,1.245,187,1.515,190,1.487,198,1.136,203,0.704,205,1.136,207,0.988,212,1.403,218,1.036,219,2.841,220,1.514,221,0.96,234,0.668,238,0.845,253,0.96,255,1.054,258,1.104,262,1.223,267,0.704,268,0.865,270,1.831,275,0.988,294,0.668,296,1.374,303,1.973,304,0.886,316,0.933,332,1.063,364,1.054,383,1.22,421,0.886,430,0.808,440,1.245,441,0.846,447,1.269,448,1.245,480,0.988,500,0.845,501,1.467,502,0.988,503,1.784,504,1.651,510,0.646,511,0.886,518,0.933,549,1.898,557,1.186,558,1.991,559,2.467,560,0.826,579,0.96,589,1.317,590,1.093,602,1.079,608,1.093,615,2.692,616,1.093,625,2.515,626,3.174,627,2.287,633,1.093,669,2.06,671,2.731,673,2.06,676,1.093,710,2.06,783,2.06,791,1.093,810,1.317,825,2.731,826,2.731,828,2.731,829,2.731,830,1.186,831,1.186,836,1.771,893,1.02,894,2.287,895,1.535,896,1.535,897,1.186,898,1.317,899,2.287,900,2.287,901,1.317,902,1.317,903,1.093,904,1.317,905,2.287,906,1.898,907,3.534,908,2.287,909,2.06,910,4.099,911,4.099,912,3.534,913,1.535,914,2.666,915,1.317,916,1.317,917,1.535,918,1.535,919,1.535,920,1.535,921,2.06,922,1.535,923,1.535,924,1.317,925,1.317,926,2.287,927,3.032,928,1.317,929,2.287,930,1.317,931,1.186,932,1.317,933,1.317,934,1.317,935,2.287,936,1.317,937,1.317,938,1.317,939,3.621,940,1.317,941,1.317,942,1.317,943,1.317,944,1.317,945,1.317,946,1.317,947,1.317,948,1.317,949,1.317,950,2.287,951,1.317,952,1.186,953,1.317,954,1.317,955,1.317,956,1.317,957,1.317,958,1.317,959,1.317,960,1.317,961,1.317]],["component/120",[8,0.418]],["title/121-1",[78,15.632,601,32.238,893,30.083]],["name/121-1",[]],["text/121-1",[]],["component/121-1",[]],["title/121-2",[78,15.632,893,30.083,962,38.859]],["name/121-2",[]],["text/121-2",[]],["component/121-2",[]],["title/121",[48,14.66,56,7.929,184,14.424,258,14.66,963,35.41]],["name/121",[78,0.587,164,0.693,581,1.063,964,1.7]],["text/121",[8,0.097,10,1.075,11,1.304,14,1.146,23,0.707,27,2.104,33,0.899,34,1.205,36,0.965,41,1.693,44,0.348,47,0.315,56,0.555,58,0.816,71,1.067,73,1.647,78,1.53,81,0.772,120,1.343,126,0.457,131,0.413,135,0.529,152,1.432,161,2.889,164,0.474,165,0.689,174,1.469,184,1.01,186,0.943,187,1.535,190,1.456,191,0.707,198,0.861,203,0.283,205,0.861,206,0.457,207,0.749,209,0.599,212,1.098,218,0.452,219,1.885,220,1.072,221,0.727,223,0.799,227,1.033,234,0.506,238,0.64,244,0.566,247,0.375,253,1.304,255,0.799,258,0.255,262,0.957,267,1.588,268,0.655,270,1.703,274,0.457,275,1.062,277,0.93,287,0.457,295,0.477,296,0.599,303,1.544,304,0.671,312,0.749,316,0.707,332,0.951,350,0.348,364,0.799,368,1.343,383,0.979,394,0.269,411,2.604,421,0.671,425,0.529,430,1.306,435,0.566,440,0.943,441,0.787,447,0.993,448,0.943,480,1.062,496,1.062,498,1.098,500,0.908,501,1.148,502,1.343,503,1.433,504,1.745,510,0.694,511,0.952,512,0.356,518,1.003,531,0.375,535,0.477,549,2.02,557,0.899,558,1.599,559,1.996,560,0.626,579,0.386,601,0.439,602,4.336,608,0.828,615,2.245,616,0.439,625,1.174,633,0.828,638,0.386,643,0.529,657,0.477,667,0.899,668,0.477,669,1.917,671,2.193,673,1.612,676,0.828,692,0.439,701,1.174,702,0.529,710,1.612,718,0.828,751,0.899,783,1.612,786,1.485,787,0.899,788,0.899,789,0.998,790,0.998,791,0.828,802,4.425,822,1.415,825,0.899,826,0.899,828,5.609,829,2.193,830,0.899,831,0.477,836,1.647,840,1.275,893,1.096,894,0.998,897,0.899,898,0.998,899,1.79,900,1.79,901,0.529,902,0.998,903,0.828,904,0.998,905,1.79,906,1.485,908,2.434,909,1.917,910,1.79,911,1.79,915,0.998,916,0.998,921,1.917,924,0.998,925,0.998,926,1.79,927,2.434,928,0.998,929,1.79,930,0.998,931,0.899,932,0.998,933,0.998,934,0.998,935,1.79,936,0.998,937,0.998,938,0.998,939,2.969,940,0.998,941,0.998,942,0.998,943,0.998,944,0.998,945,0.998,946,0.998,947,0.998,948,0.998,949,0.998,950,1.79,951,0.998,952,0.899,953,1.415,954,0.998,955,0.998,956,0.998,957,0.998,958,0.998,959,1.415,960,0.998,961,0.529,962,0.529,965,0.617,966,0.617,967,0.617,968,0.617,969,2.128,970,0.617,971,0.617,972,1.65,973,1.415,974,0.617,975,0.617,976,1.163,977,0.617,978,0.617,979,1.163,980,1.163,981,1.163,982,1.163,983,1.163,984,1.163,985,0.617,986,0.617,987,0.617,988,1.163,989,0.617,990,2.086,991,0.617,992,0.617,993,0.617,994,0.617,995,0.617,996,0.617,997,2.48,998,0.617,999,1.163,1000,0.617,1001,1.163,1002,1.163,1003,0.617,1004,0.617,1005,0.617,1006,0.617,1007,0.617,1008,0.617,1009,0.617,1010,2.837,1011,1.163,1012,1.163,1013,1.163,1014,3.985,1015,1.163,1016,1.163,1017,0.998,1018,1.163,1019,1.163,1020,0.617,1021,0.617,1022,0.617,1023,0.617,1024,0.617,1025,0.617,1026,0.617,1027,0.617,1028,0.617,1029,0.617,1030,0.617,1031,2.086,1032,0.617,1033,0.617,1034,0.617,1035,1.65,1036,0.617,1037,0.617,1038,0.617,1039,1.163,1040,1.163,1041,0.617,1042,0.617,1043,2.837,1044,1.163,1045,0.617,1046,0.617,1047,0.617,1048,2.837,1049,0.617,1050,1.163,1051,2.837,1052,2.837,1053,0.617,1054,1.65,1055,0.617,1056,0.617,1057,0.617,1058,0.617,1059,0.617,1060,0.617,1061,0.617,1062,1.163,1063,0.617,1064,0.617,1065,0.617,1066,0.617,1067,0.617,1068,0.617]],["component/121",[8,0.418]],["title/122",[]],["name/122",[581,1.745,1069,2.395]],["text/122",[110,4.848,350,4.243,1069,6.461]],["component/122",[8,0.418]],["title/123-1",[0,46.502]],["name/123-1",[]],["text/123-1",[]],["component/123-1",[]],["title/123-2",[78,18.167,533,40.678]],["name/123-2",[]],["text/123-2",[]],["component/123-2",[]],["title/123-3",[47,10.766,56,8.9,332,11.956,441,12.618]],["name/123-3",[]],["text/123-3",[]],["component/123-3",[]],["title/123-4",[332,15.833,496,33.889]],["name/123-4",[]],["text/123-4",[]],["component/123-4",[]],["title/123-5",[8,7.096,372,21.166,497,31.102]],["name/123-5",[]],["text/123-5",[]],["component/123-5",[]],["title/123-6",[296,18.251,365,16.547,375,15.681,498,18.642,499,26.209]],["name/123-6",[]],["text/123-6",[]],["component/123-6",[]],["title/123",[7,36.146,479,32.005]],["name/123",[9,2.075]],["text/123",[8,1.148,13,1.317,14,1.091,36,1.606,47,1.881,51,1.924,56,1.286,57,2.641,66,1.523,97,1.523,129,1.734,131,2.467,152,0.951,156,2.044,161,1.54,187,1.365,196,2.598,209,1.586,210,1.777,220,1.199,221,1.924,226,1.734,227,1.523,234,3.023,237,2.191,238,1.694,262,2.166,267,1.412,268,1.734,277,1.734,294,1.34,332,1.937,365,3.009,369,2.191,372,2.206,373,3.36,374,2.485,375,3.076,383,1.062,394,1.34,418,1.694,439,2.54,441,2.044,446,1.822,447,1.465,463,1.924,479,1.871,480,1.982,500,1.694,501,1.694,502,1.982,503,1.554,504,1.438,505,2.278,506,3.494,507,2.278,508,2.114,509,2.114,510,1.295,511,1.777,512,1.777,513,2.278,514,4.767,515,2.871,516,2.278,517,3.494,518,1.871,519,2.278,520,2.114,521,3.494,522,3.494,523,2.278,524,2.278,525,2.278,526,2.278,527,2.278,528,2.114,529,2.278,530,2.114,531,1.871]],["component/123",[8,0.418]],["title/124",[125,38.96,479,32.005]],["name/124",[9,2.075]],["text/124",[350,4.34]],["component/124",[8,0.418]],["title/125",[479,38.201]],["name/125",[9,2.075]],["text/125",[350,4.34]],["component/125",[8,0.418]],["title/126",[14,6.734,56,8.9,294,17.3,447,18.924]],["name/126",[14,0.288,294,0.74,447,0.81,815,0.876]],["text/126",[14,1.047,25,2.57,36,1.182,56,1.384,58,1.719,63,2.472,72,2.307,77,1.165,78,1.199,123,1.828,152,1.073,158,2.57,161,2.93,187,1.495,190,1.462,191,2.112,192,2.817,200,2.986,202,2.57,203,1.593,207,2.236,209,1.79,223,3.552,234,2.251,247,2.112,275,4.942,294,2.69,332,1.045,364,2.385,415,2.472,427,2.817,480,3.33,498,1.828,540,4.437,550,2.171,586,2.472,665,3.233,692,2.472,713,5.302,815,1.79,821,5.875,897,2.684,1070,3.997,1071,2.684,1072,2.684,1073,5.302,1074,3.473,1075,3.473,1076,3.473,1077,3.473,1078,3.473,1079,3.473,1080,3.473,1081,5.172,1082,3.473,1083,3.473,1084,5.172,1085,3.473,1086,3.473,1087,3.473,1088,3.473,1089,3.473,1090,3.473,1091,2.979,1092,3.473,1093,3.473]],["component/126",[8,0.418]],["title/127",[14,4.925,21,17.212,56,6.509,190,12.233,220,7.385,383,10.032,441,9.228]],["name/127",[14,0.241,220,0.361,439,0.765,441,0.452,815,0.733]],["text/127",[2,0.81,12,0.975,14,0.619,21,0.95,28,1.24,29,2.14,30,2.26,36,2.167,37,1.524,54,1.472,56,0.818,58,0.794,65,1.003,66,1.371,72,1.065,76,1.187,77,0.538,89,2.059,100,1.319,123,2.29,131,1.298,140,1.599,152,1.88,156,1.065,161,3.086,181,2.541,190,1.538,195,1.187,196,0.883,218,1.076,220,1.546,226,0.904,233,1.187,234,0.698,266,1.599,267,1.996,270,1.101,279,1.783,314,1.187,332,1.616,356,1.065,364,1.902,383,1.854,394,0.698,415,1.971,416,1.301,421,0.926,430,1.458,436,3.458,437,1.524,439,1.49,441,2.022,442,1.472,446,2.164,452,2.51,454,1.472,492,1.301,498,1.924,503,1.398,504,0.75,509,1.101,510,1.166,511,1.599,518,0.975,528,2.51,556,2.14,570,1.376,598,1.142,600,1.376,622,1.376,665,1.003,668,1.24,681,1.971,694,2.14,704,1.142,726,1.376,748,2.601,785,2.601,815,0.827,1070,1.24,1071,1.24,1072,1.24,1073,4.94,1091,1.376,1094,1.376,1095,2.77,1096,2.77,1097,2.376,1098,1.604,1099,1.604,1100,1.604,1101,2.77,1102,1.604,1103,3.655,1104,2.77,1105,2.77,1106,1.604,1107,1.604,1108,1.604,1109,2.77,1110,2.376,1111,2.376,1112,2.77,1113,1.604,1114,2.77,1115,1.604,1116,1.604,1117,1.604,1118,1.604,1119,1.604,1120,1.604,1121,1.604,1122,1.604,1123,1.376,1124,1.604,1125,1.604,1126,1.604,1127,1.376,1128,1.604,1129,1.604,1130,1.604,1131,1.604,1132,1.604,1133,1.604,1134,2.824,1135,1.376,1136,1.604,1137,1.376,1138,2.77,1139,1.376,1140,1.376,1141,1.604,1142,3.732,1143,1.376,1144,1.604,1145,1.604,1146,1.604,1147,1.604]],["component/127",[8,0.418]],["title/128",[14,6.734,78,13.718,187,11.49,206,29.418]],["name/128",[14,0.358,187,0.611,815,1.089]],["text/128",[10,2.476,14,1.405,36,1.635,41,3.897,58,2.377,72,3.191,77,1.612,78,1.658,92,2.845,123,2.529,140,2.773,161,2.413,184,2.655,187,1.884,227,3.225,247,2.921,264,4.408,272,3.897,368,3.093,479,4.497,504,3.456,515,2.921,665,3.003,782,3.713,786,5.264,787,5.036,788,3.713,815,2.476,969,4.122,1017,4.122,1070,3.713,1071,3.713,1072,3.713,1148,6.517,1149,4.804,1150,4.804,1151,4.804]],["component/128",[8,0.418]],["title/129",[14,8.891,234,15.413,294,15.413,447,16.859]],["name/129",[14,0.288,47,0.461,294,0.74,447,0.81]],["text/129",[8,0.722,13,1.972,14,1.384,27,3.851,48,1.908,56,1.032,58,2.28,60,3.953,131,1.637,152,1.424,161,2.362,184,2.58,187,1.831,191,2.802,203,2.114,218,1.79,220,1.171,253,3.96,260,4.228,266,2.66,284,3.738,287,3.41,294,3.392,326,4.228,365,2.153,372,2.153,374,2.426,375,2.041,432,3.164,436,2.967,447,3.016,475,3.164,494,3.41,952,3.561,973,3.953,1152,3.06,1153,4.608,1154,4.608,1155,3.953,1156,4.608,1157,4.608,1158,4.608,1159,4.608,1160,4.608,1161,3.953,1162,3.953]],["component/129",[8,0.418]],["title/130-1",[62,38.201]],["name/130-1",[]],["text/130-1",[]],["component/130-1",[]],["title/130",[152,12.28,437,21.877,438,25.589,452,27.293]],["name/130",[47,0.572,437,1.163,438,1.361]],["text/130",[2,0.925,8,0.158,14,0.427,30,0.424,37,0.554,45,2.297,56,0.41,65,3.609,131,0.358,144,0.692,152,0.779,161,3.13,174,0.596,200,1.058,209,2.08,212,0.53,218,0.391,220,0.466,267,0.841,298,0.745,312,2.32,365,0.471,372,0.471,374,0.53,375,0.446,383,0.632,387,0.692,416,0.817,430,4.156,437,1.387,438,2.32,452,1.258,459,0.596,482,0.745,491,0.745,531,3.51,551,0.498,586,0.717,591,2.061,594,2.061,604,1.217,618,0.778,626,1.217,638,0.63,642,0.778,681,0.717,685,2.398,689,0.864,691,0.864,694,1.416,695,0.864,697,0.864,701,4.377,703,4.952,715,4.952,718,2.873,720,0.717,722,0.717,723,0.864,791,0.717,836,0.669,865,0.864,1097,0.864,1152,0.669,1163,1.007,1164,1.007,1165,1.007,1166,1.007,1167,1.007,1168,1.007,1169,1.007,1170,7.838,1171,6.859,1172,7.838,1173,7.838,1174,7.838,1175,1.007,1176,1.007,1177,5.772,1178,1.007,1179,1.007,1180,1.007,1181,2.52,1182,1.007,1183,2.52,1184,1.007,1185,1.832,1186,5.315,1187,1.832,1188,1.007,1189,1.007,1190,1.832,1191,1.007,1192,1.007,1193,1.007,1194,1.007,1195,1.007,1196,1.007,1197,1.007,1198,1.007,1199,1.007,1200,1.007,1201,1.007,1202,1.007,1203,1.007,1204,1.007,1205,1.832,1206,1.007,1207,1.007,1208,1.007,1209,1.007,1210,1.007,1211,1.007,1212,1.007,1213,1.007,1214,1.832,1215,1.007,1216,1.007,1217,1.007,1218,1.007,1219,1.007,1220,1.007,1221,1.007]],["component/130",[8,0.418]],["title/131-1",[62,38.201]],["name/131-1",[]],["text/131-1",[]],["component/131-1",[]],["title/131-2",[227,26.049,498,27.712]],["name/131-2",[]],["text/131-2",[]],["component/131-2",[]],["title/131-3",[227,26.049,705,40.678]],["name/131-3",[]],["text/131-3",[]],["component/131-3",[]],["title/131-4",[227,26.049,1222,45.161]],["name/131-4",[]],["text/131-4",[]],["component/131-4",[]],["title/131-5",[227,26.049,430,27.712]],["name/131-5",[]],["text/131-5",[]],["component/131-5",[]],["title/131-6",[247,32.005,277,29.658]],["name/131-6",[]],["text/131-6",[]],["component/131-6",[]],["title/131-7",[394,27.346]],["name/131-7",[]],["text/131-7",[]],["component/131-7",[]],["title/131",[14,6,190,14.903,220,8.997,383,12.221,441,11.241]],["name/131",[14,0.241,47,0.385,220,0.361,439,0.765,441,0.452]],["text/131",[2,0.749,12,1.574,14,0.793,21,0.879,30,1.736,36,0.881,56,1.238,66,0.735,67,1.057,100,1.233,105,1.147,119,3.346,129,2.324,131,0.527,140,2.967,152,1.9,161,2.659,172,0.903,190,1.09,198,1.099,202,2.549,209,0.765,218,0.577,220,1.683,227,2.544,229,1.147,238,0.817,247,1.574,250,1.362,253,1.619,258,0.615,267,3.129,279,0.956,282,1.204,365,0.694,367,1.362,372,0.694,374,0.782,375,0.657,378,1.204,379,1.362,383,2.518,387,1.019,389,3.16,415,1.843,426,1.204,430,3.086,432,1.019,436,1.667,437,3.753,438,3.56,439,1.393,441,1.093,443,1.362,446,1.533,452,1.778,459,1.533,482,1.099,493,1.204,498,3.766,500,0.817,515,3.564,530,1.019,534,1.274,535,1.147,544,1.147,568,1.72,626,4.084,642,1.147,644,1.843,657,1.147,681,1.843,701,2.451,705,2.001,748,3.935,785,1.057,816,1.147,817,1.274,903,1.057,906,2.936,909,2.661,921,2.661,931,1.147,1111,5.029,1123,2.222,1127,2.222,1134,2.661,1135,2.222,1137,1.274,1139,1.274,1140,2.222,1142,1.274,1143,2.222,1152,0.986,1155,1.274,1222,1.274,1223,2.589,1224,2.589,1225,2.589,1226,1.484,1227,2.589,1228,2.589,1229,2.589,1230,2.589,1231,1.484,1232,1.484,1233,2.589,1234,1.484,1235,2.589,1236,1.484,1237,1.484,1238,1.484,1239,2.589,1240,2.589,1241,2.589,1242,1.484,1243,1.484,1244,1.484,1245,1.484,1246,1.484,1247,2.589,1248,2.589,1249,1.484,1250,1.484,1251,1.484,1252,1.484,1253,1.484,1254,1.484,1255,2.589,1256,1.484,1257,1.484,1258,1.484,1259,1.484,1260,1.484,1261,1.484,1262,1.484,1263,1.484,1264,1.484,1265,1.484,1266,1.484,1267,1.484,1268,1.484,1269,1.484,1270,1.484,1271,1.484,1272,1.484,1273,1.484,1274,1.484,1275,1.484,1276,1.484,1277,1.484,1278,1.484,1279,1.484,1280,1.484,1281,1.484,1282,1.484]],["component/131",[8,0.418]],["title/132",[14,7.674,220,11.508,383,15.632]],["name/132",[14,0.288,47,0.461,220,0.432,439,0.915]],["text/132",[12,2.9,14,1.445,19,2.076,30,2.008,44,2.688,47,1.292,56,1.068,100,2.271,131,1.694,144,3.276,161,2.405,190,2.008,210,2.754,220,2.256,267,2.189,365,2.229,372,2.229,374,2.511,375,2.112,383,2.854,432,3.276,436,4.176,437,2.626,439,3.965,441,2.059,515,2.9,569,2.825,619,3.686,626,3.168,1134,3.686,1152,3.168,1283,4.77,1284,4.77]],["component/132",[8,0.418]],["title/133-1",[168,23.519,212,18.642,281,27.365,288,28.726,353,22.798]],["name/133-1",[]],["text/133-1",[]],["component/133-1",[]],["title/133-2",[14,7.674,152,13.994,187,13.094]],["name/133-2",[]],["text/133-2",[]],["component/133-2",[]],["title/133-3",[10,32.382]],["name/133-3",[]],["text/133-3",[]],["component/133-3",[]],["title/133-4",[220,15.962]],["name/133-4",[]],["text/133-4",[]],["component/133-4",[]],["title/133",[8,5.002,14,8.226,23,19.412,187,9.23,1285,31.927]],["name/133",[14,0.358,47,0.572,187,0.611]],["text/133",[1,1.286,2,1.124,8,0.572,14,1.189,15,1.226,21,2.748,23,1.354,34,2.108,44,1.255,47,0.989,48,0.922,49,1.479,52,1.721,56,0.818,63,1.585,65,1.392,73,1.479,78,0.769,89,3.953,92,2.162,95,1.721,99,1.255,105,2.822,123,1.172,131,1.648,139,1.721,140,1.286,150,1.911,152,1.966,161,1.751,165,1.319,168,1.479,179,1.479,184,1.487,187,1.713,190,0.937,191,2.22,192,1.807,196,1.226,199,3.35,200,2.679,201,2.043,202,2.702,203,2.129,205,1.648,206,2.702,207,1.434,208,1.648,209,1.148,210,2.108,211,3.973,212,2.443,218,0.865,220,0.566,225,1.648,228,1.721,233,1.648,241,2.043,245,1.354,255,3.186,256,1.807,257,2.043,258,0.922,262,1.022,266,1.286,267,2.129,268,2.615,269,3.82,270,1.529,271,4.258,272,3.764,273,2.043,274,1.648,275,1.434,276,4.258,277,1.255,279,1.434,280,2.043,281,4.148,282,1.807,283,2.043,284,1.807,285,2.043,286,2.043,287,1.648,288,1.807,289,3.35,290,2.043,291,2.043,292,2.043,293,2.043,294,1.589,295,1.721,296,1.148,298,1.648,299,3.133,300,2.043,301,2.043,302,2.043,303,2.702,304,1.286,305,4.925,306,2.043,307,3.35,308,2.043,309,2.043,310,4.258,311,2.043,312,1.434,313,2.962,314,1.648,316,1.354,317,2.043,318,2.043,319,2.043,353,1.434,358,2.043,360,2.043,365,1.041,372,1.041,374,1.172,375,0.986,432,1.529,504,1.041,544,1.721,571,1.102,585,3.133,1152,1.479,1161,1.911,1162,1.911,1286,2.227,1287,2.227,1288,2.227,1289,2.227,1290,2.227,1291,2.227]],["component/133",[8,0.418]],["title/134",[110,33.889,479,32.005]],["name/134",[9,2.075]],["text/134",[350,4.34]],["component/134",[8,0.418]],["title/135-1",[0,46.502]],["name/135-1",[]],["text/135-1",[]],["component/135-1",[]],["title/135-2",[78,18.167,533,40.678]],["name/135-2",[]],["text/135-2",[]],["component/135-2",[]],["title/135-3",[47,10.766,56,8.9,332,11.956,441,12.618]],["name/135-3",[]],["text/135-3",[]],["component/135-3",[]],["title/135-4",[332,15.833,496,33.889]],["name/135-4",[]],["text/135-4",[]],["component/135-4",[]],["title/135-5",[8,7.096,372,21.166,497,31.102]],["name/135-5",[]],["text/135-5",[]],["component/135-5",[]],["title/135-6",[296,18.251,365,16.547,375,15.681,498,18.642,499,26.209]],["name/135-6",[]],["text/135-6",[]],["component/135-6",[]],["title/135",[7,36.146,478,38.96]],["name/135",[9,2.075]],["text/135",[8,1.257,13,2.116,36,1.683,47,1.615,51,2.045,56,1.335,66,1.619,89,1.843,97,1.619,129,1.843,131,2.361,161,1.614,187,0.946,196,2.722,209,1.686,210,1.889,218,1.271,221,2.045,226,1.843,227,1.619,234,3.106,237,2.328,238,1.801,262,2.269,267,1.501,268,1.843,277,1.843,332,1.999,356,2.173,365,3.106,369,2.328,372,2.311,373,3.52,374,2.604,375,3.16,382,1.937,383,1.129,394,1.424,441,2.11,463,2.045,478,2.421,500,1.801,501,1.801,502,2.106,503,1.652,504,1.529,505,2.421,506,3.66,507,2.421,508,2.246,509,2.246,510,1.377,511,1.889,512,1.889,513,2.421,514,4.919,515,3.007,516,2.421,517,3.66,518,1.989,519,2.421,520,2.246,521,3.66,522,3.66,523,2.421,524,2.421,525,2.421,526,2.421,527,2.421,528,2.246,529,2.421,530,2.246,531,1.989]],["component/135",[8,0.418]],["title/136",[8,7.096,13,19.383,441,14.379]],["name/136",[9,2.075]],["text/136",[8,1.26,13,3.628,47,1.974,56,1.275,89,4.776,97,3.607,126,4.214,132,5.224,190,2.396,269,4.052,356,4.841,382,3.371,398,5.224,441,1.807,568,3.781,618,4.4,677,4.885,1110,4.885,1292,5.693,1293,5.693,1294,5.693]],["component/136",[8,0.418]],["title/137-1",[383,18.167,815,27.131]],["name/137-1",[]],["text/137-1",[]],["component/137-1",[]],["title/137-2",[89,29.658,742,40.678]],["name/137-2",[]],["text/137-2",[]],["component/137-2",[]],["title/137",[8,5.548,13,15.153,56,7.929,446,20.967,1295,35.41]],["name/137",[13,1.195,815,1.439]],["text/137",[1,1.714,8,1.071,13,3.331,34,1.714,36,1.011,47,1.851,56,1.618,58,1.47,66,1.47,72,1.973,80,2.198,89,4.681,92,1.758,97,1.47,99,1.673,100,2.187,111,2.295,129,3.164,140,1.714,152,2.111,161,2.358,164,1.21,207,1.912,218,1.784,226,3.164,242,2.409,269,3.269,274,3.399,294,1.293,298,2.198,332,1.382,368,1.912,387,3.154,392,2.725,394,1.293,400,1.912,404,1.635,441,1.458,446,4.609,494,2.198,520,3.154,644,3.269,665,1.857,742,3.549,748,3.269,782,2.295,903,3.269,906,2.114,1094,2.548,1296,4.593,1297,2.97,1298,6.32,1299,2.97,1300,2.97,1301,2.97,1302,2.97,1303,2.97,1304,2.97,1305,4.593,1306,5.616,1307,4.593,1308,2.97,1309,2.97,1310,2.97,1311,2.97,1312,2.97,1313,2.97,1314,2.97,1315,2.97,1316,2.97,1317,2.97]],["component/137",[8,0.418]],["title/138",[110,33.889,478,38.96]],["name/138",[9,2.075]],["text/138",[350,4.34]],["component/138",[8,0.418]],["title/139-1",[0,46.502]],["name/139-1",[]],["text/139-1",[]],["component/139-1",[]],["title/139-2",[78,18.167,533,40.678]],["name/139-2",[]],["text/139-2",[]],["component/139-2",[]],["title/139-3",[47,10.766,56,8.9,332,11.956,441,12.618]],["name/139-3",[]],["text/139-3",[]],["component/139-3",[]],["title/139-4",[332,15.833,496,33.889]],["name/139-4",[]],["text/139-4",[]],["component/139-4",[]],["title/139-5",[8,7.096,372,21.166,497,31.102]],["name/139-5",[]],["text/139-5",[]],["component/139-5",[]],["title/139-6",[296,18.251,365,16.547,375,15.681,498,18.642,499,26.209]],["name/139-6",[]],["text/139-6",[]],["component/139-6",[]],["title/139-7",[534,45.161,535,40.678]],["name/139-7",[]],["text/139-7",[]],["component/139-7",[]],["title/139",[7,31.102,8,7.096,77,15.196]],["name/139",[9,2.075]],["text/139",[2,0.949,8,1.186,10,1.635,11,1.176,13,1.357,14,0.697,15,1.746,19,0.818,21,1.113,28,1.453,30,1.731,36,1.991,37,1.035,39,1.725,44,1.06,47,1.114,49,1.249,51,1.176,56,1.621,66,1.57,75,1.725,77,2.089,78,0.649,84,1.613,95,1.453,97,1.57,99,1.06,120,2.648,123,1.67,125,1.392,129,1.06,131,2.212,145,1.392,152,2.021,161,1.035,178,0.969,179,2.732,182,1.983,187,0.544,195,1.392,196,1.746,209,0.969,210,1.086,211,1.392,218,1.598,221,1.983,225,1.392,226,1.06,227,1.57,229,1.453,234,2.547,237,1.338,238,1.035,245,1.143,258,2.234,262,1.455,267,0.863,268,1.06,277,1.06,296,0.969,316,1.143,328,1.392,332,1.623,340,1.453,346,1.525,365,2.258,369,1.338,372,1.482,373,2.258,374,1.67,375,2.389,383,0.649,394,2.71,400,1.211,417,2.861,421,1.086,441,1.306,463,1.176,481,1.725,482,1.392,483,1.725,484,1.725,485,1.725,486,1.725,487,1.725,488,1.725,489,2.348,490,2.91,491,1.392,492,1.525,493,1.525,494,1.392,495,1.725,500,1.035,501,1.035,502,1.211,503,2.439,504,0.879,505,1.392,506,2.348,507,1.392,508,1.291,509,1.291,510,0.791,511,1.086,512,1.086,513,1.392,514,3.576,515,1.929,516,1.392,517,2.348,518,1.143,519,1.392,520,1.291,521,2.348,522,2.348,523,1.392,524,1.392,525,1.392,526,1.392,527,1.392,528,1.291,529,1.392,530,1.291,531,1.143,536,1.453,537,1.88,538,1.88,539,1.88,540,1.613,541,3.172,542,1.88,543,1.88,544,1.453,545,1.613,546,1.613,547,1.88,548,1.613,549,1.338,550,1.983,551,0.931,552,1.613,553,1.88,554,1.88,555,1.88,556,1.453,557,1.453,558,1.06,559,0.778,560,1.012,561,1.88,562,1.453,563,1.88,564,1.88]],["component/139",[77,0.896]],["title/140",[14,6,19,15.413,30,14.903,152,10.941,551,17.524]],["name/140",[19,1.215,551,1.381]],["text/140",[]],["component/140",[77,0.896]],["title/141",[2,22.869,77,15.196,131,16.088]],["name/141",[2,2.075]],["text/141",[1,1.753,2,1.533,8,0.476,14,1.416,19,1.322,23,1.846,24,2.605,30,2.397,36,1.033,47,1.266,48,2.358,56,1.275,77,1.019,94,1.846,100,2.711,116,2.347,131,1.079,145,2.247,152,2.346,161,2.624,184,1.903,187,1.996,190,1.966,191,1.846,200,2.697,219,3.681,220,1.625,248,2.247,304,3.692,314,2.247,332,0.913,382,1.798,383,1.965,394,2.479,400,1.955,404,2.572,417,1.798,421,1.753,436,1.955,437,1.671,441,0.964,447,1.446,459,1.798,489,2.247,503,2.359,510,1.278,512,2.697,550,1.898,556,2.347,558,1.711,559,1.934,560,2.514,562,2.347,565,3.036,566,3.036,567,3.036,568,2.017,569,1.798,570,2.605,571,3.608,572,3.036,573,2.605,574,4.401,575,2.347,576,3.036,577,2.017,578,2.605,579,1.898,580,2.017]],["component/141",[77,0.896]],["title/142",[56,8.9,164,16.191,258,16.455,559,16.455]],["name/142",[164,1.137,581,1.745]],["text/142",[14,1.135,19,1.238,44,1.603,47,0.771,48,1.178,56,1.661,58,1.408,67,3.162,81,1.89,88,3.288,92,1.685,94,1.73,120,1.832,129,1.603,134,2.61,152,1.688,182,4.438,184,1.159,196,3.008,203,1.305,208,2.106,212,1.498,226,1.603,234,1.238,242,3.604,254,3.604,258,2.939,262,1.305,294,1.933,304,3.565,328,2.106,333,3.288,378,2.308,382,1.685,404,1.566,417,1.685,423,2.106,424,4.076,426,2.308,500,1.566,510,1.869,548,4.688,550,1.779,558,1.603,559,2.557,560,1.531,569,1.685,580,1.89,582,2.845,583,4.223,584,5.465,585,2.441,586,2.025,587,2.025,588,2.199,589,5.298,590,2.025,591,3.63,592,7.673,593,2.845,594,2.95,595,4.442,596,5.465,597,4.442,598,3.162,599,4.442,600,2.441,601,2.025,602,3.842,603,5.465,604,2.95,605,2.845,606,2.845,607,2.845,608,3.162,609,2.845,610,2.845,611,2.845,612,2.845,613,2.845,614,2.845,615,1.603]],["component/142",[77,0.896]],["title/143",[56,7.149,172,19.412,258,13.218,604,21.206,616,22.725,617,27.392]],["name/143",[172,1.697,581,1.745]],["text/143",[]],["component/143",[77,0.896]],["title/144-1",[62,38.201]],["name/144-1",[]],["text/144-1",[]],["component/144-1",[]],["title/144-2",[56,8.9,178,20.486,258,16.455,618,30.716]],["name/144-2",[]],["text/144-2",[]],["component/144-2",[]],["title/144",[36,13.524,56,8.9,77,13.335,258,16.455]],["name/144",[581,2.57]],["text/144",[14,1.399,19,1.704,36,1.332,37,2.155,47,1.06,56,1.849,77,1.313,80,2.897,92,2.318,123,2.061,152,1.21,161,2.613,164,2.3,168,2.6,172,3.433,178,2.018,187,1.915,212,2.061,218,1.521,219,3.344,220,1.683,234,1.704,258,3.418,294,2.458,353,2.52,447,2.689,459,2.318,475,2.688,551,1.937,552,3.359,559,2.338,579,3.53,583,3.025,588,3.025,590,2.786,601,2.786,604,2.6,616,2.786,617,3.359,619,3.025,620,3.915,621,3.359,622,3.359,623,3.915,624,3.915,625,4.019,626,3.751,627,4.845]],["component/144",[77,0.896]],["title/145-1",[88,33.523,165,26.819,178,23.345]],["name/145-1",[]],["text/145-1",[]],["component/145-1",[]],["title/145-2",[30,22.153,152,16.264]],["name/145-2",[]],["text/145-2",[]],["component/145-2",[]],["title/145-3",[14,6,19,15.413,220,13.332,383,12.221]],["name/145-3",[]],["text/145-3",[]],["component/145-3",[]],["title/145-4",[19,19.714,100,21.564,571,22.414]],["name/145-4",[]],["text/145-4",[]],["component/145-4",[]],["title/145-5",[48,21.792,571,26.049]],["name/145-5",[]],["text/145-5",[]],["component/145-5",[]],["title/145-6",[94,21.53,404,19.49,558,19.951,559,14.66,615,19.951]],["name/145-6",[]],["text/145-6",[]],["component/145-6",[]],["title/145-7",[15,19.49,168,23.519,212,18.642,353,22.798,615,19.951]],["name/145-7",[]],["text/145-7",[]],["component/145-7",[]],["title/145-8",[161,12.969,213,32.243,214,36.47,370,32.243]],["name/145-8",[]],["text/145-8",[]],["component/145-8",[]],["title/145",[47,10.766,131,14.118,165,23.535,178,20.486]],["name/145",[178,2.119]],["text/145",[1,2.361,8,0.493,10,0.961,12,1.915,13,0.798,14,1.377,15,1.026,19,2.092,27,1.134,30,2.022,36,1.072,37,2.251,45,1.38,47,2.004,48,2.568,51,1.166,56,1.52,58,2.883,62,1.134,66,0.923,73,4.662,76,1.38,77,1.372,80,2.331,88,1.38,92,1.865,97,0.923,99,1.775,100,1.947,117,1.38,131,0.662,152,1.8,156,1.239,158,1.38,161,2.127,164,0.76,167,1.513,174,3.672,178,0.961,182,1.969,184,2.187,187,1.552,190,0.785,191,1.915,196,1.026,200,1.077,203,0.856,208,1.38,218,2.532,220,1.656,228,1.441,234,2.337,245,1.915,248,1.38,255,1.281,256,1.513,258,1.989,262,0.856,294,0.812,304,1.077,316,1.134,330,1.38,382,1.104,383,1.411,394,0.812,417,1.865,437,1.026,446,1.104,463,1.166,475,1.281,480,1.201,489,1.38,491,1.38,510,2.022,511,1.077,512,2.361,536,1.441,545,1.6,550,1.969,551,0.923,559,1.989,562,2.434,571,2.883,574,1.441,575,1.441,577,2.092,578,1.6,587,1.327,588,2.434,619,1.441,625,3.822,628,1.865,629,3.15,630,1.865,631,1.865,632,1.865,633,2.91,634,1.865,635,1.865,636,1.6,637,1.865,638,2.556,639,1.865,640,1.865,641,1.865,642,1.441,643,3.508,644,1.327,645,1.865,646,1.865,647,2.702,648,1.865,649,1.865,650,1.865,651,1.327,652,3.15,653,1.865]],["component/145",[77,0.896]],["title/146-1",[161,14.779,184,18.45,332,13.624]],["name/146-1",[]],["text/146-1",[]],["component/146-1",[]],["title/146-2",[164,14.424,332,10.651,558,19.951,559,14.66,560,19.054]],["name/146-2",[]],["text/146-2",[]],["component/146-2",[]],["title/146-3",[48,16.455,78,13.718,172,24.167,571,19.67]],["name/146-3",[]],["text/146-3",[]],["component/146-3",[]],["title/146-4",[184,16.191,560,21.388,580,26.399,654,39.746]],["name/146-4",[]],["text/146-4",[]],["component/146-4",[]],["title/146",[94,19.412,245,19.412,404,17.573,559,13.218,560,17.18,615,17.989]],["name/146",[559,1.702]],["text/146",[1,1.7,8,0.461,14,1.272,23,1.79,27,1.79,36,1.552,43,2.701,47,1.236,48,2.818,49,1.955,56,1.251,67,2.095,77,0.988,78,2.171,94,3.396,97,1.457,99,1.659,100,1.402,122,2.388,123,1.55,144,2.022,152,1.944,164,1.199,172,1.79,174,1.743,182,1.841,184,2.275,187,1.319,203,1.351,218,1.772,219,2.82,220,1.729,233,2.179,234,1.281,247,1.79,258,1.219,262,2.093,266,2.634,268,1.659,304,3.224,328,2.179,332,0.886,387,2.022,400,1.895,404,3.462,417,2.701,423,2.179,441,0.935,463,1.841,503,1.486,504,2.132,510,2.35,512,1.7,550,1.841,551,1.457,558,3.147,559,2.981,569,1.743,571,2.764,579,1.841,580,3.03,583,2.275,586,2.095,587,2.095,594,1.955,615,3.147,621,2.526,651,2.095,655,4.562,656,2.944,657,2.275,658,2.526,659,2.944,660,2.944,661,2.275,662,2.275,663,2.944,664,2.275,665,1.841,666,2.944,667,2.275,668,2.275,669,2.275,670,2.944,671,2.275,672,2.944,673,2.275]],["component/146",[77,0.896]],["title/147-1",[30,26.441]],["name/147-1",[]],["text/147-1",[]],["component/147-1",[]],["title/147-2",[220,13.374,383,18.167]],["name/147-2",[]],["text/147-2",[]],["component/147-2",[]],["title/147-3",[330,46.502]],["name/147-3",[]],["text/147-3",[]],["component/147-3",[]],["title/147",[14,7.654,19,12.652,37,15.999,100,13.84,220,7.385,383,10.032]],["name/147",[14,0.493,37,0.936,220,0.432]],["text/147",[2,0.627,8,0.195,12,0.755,14,0.21,25,1.638,30,1.944,34,1.727,36,0.423,42,2.745,48,1.725,49,0.825,52,1.71,56,0.813,65,3.131,70,1.14,77,0.417,99,0.7,100,0.591,116,0.96,117,0.919,129,1.247,130,1.066,131,0.786,152,0.924,158,0.919,161,3.033,164,0.901,179,1.987,195,2.688,203,1.373,210,0.717,211,0.919,212,1.165,220,0.562,223,0.853,225,0.919,248,0.919,275,1.425,277,2.603,279,0.8,313,1.008,316,0.755,320,1.14,330,1.638,332,1.092,375,0.55,382,0.735,383,1.947,394,0.963,400,0.8,401,1.14,404,0.684,427,1.008,430,1.575,438,0.8,439,0.668,459,1.31,475,0.853,497,4.709,508,0.853,531,3.431,536,0.96,551,1.481,568,1.47,591,4.214,594,3.551,602,0.873,604,1.987,665,1.383,674,1.242,675,1.242,676,0.884,677,1.066,678,1.242,679,2.213,680,1.242,681,2.585,682,2.992,683,1.242,684,1.242,685,3.22,686,1.242,687,1.242,688,1.242,689,1.066,690,1.242,691,1.898,692,1.575,693,1.242,694,4.562,695,1.066,696,2.213,697,1.066,698,4.166,699,1.242,700,1.242,701,0.884,702,1.066,703,4.297,704,1.575,705,0.96,706,1.242,707,1.242,708,1.242,709,1.242,710,0.96,711,1.242,712,1.242,713,1.066,714,1.242,715,3.574,716,2.213,717,2.213,718,0.884,719,1.242,720,0.884,721,2.992,722,0.884,723,3.116,724,1.242,725,1.242,726,3.963,727,1.242,728,1.242,729,1.242,730,1.242,731,1.242,732,1.242,733,1.242,734,1.242,735,1.242,736,1.242,737,1.242,738,1.242,739,2.992,740,1.242,741,2.992,742,2.312,743,2.992,744,6.345,745,2.992,746,3.632,747,1.242,748,1.575,749,3.632,750,1.242,751,4.132,752,2.213,753,1.242,754,1.242,755,2.213,756,1.242,757,1.242,758,1.242,759,1.242,760,1.242,761,2.213,762,1.242,763,1.242,764,1.242,765,1.242,766,1.242,767,2.992,768,1.242,769,1.242,770,2.213,771,2.213,772,2.213,773,1.242,774,1.242,775,1.242,776,1.242,777,2.213,778,1.242,779,1.242,780,1.242,781,1.242,782,0.96,783,0.96,784,1.242]],["component/147",[77,0.896]],["title/148",[14,6.734,78,13.718,187,11.49,785,28.291]],["name/148",[14,0.473,187,0.807]],["text/148",[14,1.408,47,1.774,56,1.662,66,3.241,78,2.562,131,1.719,184,2.667,187,2.146,190,2.036,203,2.22,213,5.312,266,2.793,353,3.115,441,1.536,500,2.663,501,2.663,504,2.261,568,3.214,615,2.726,692,3.444,785,3.444,786,3.444,787,3.739,788,5.061,789,4.151,790,4.151,791,3.444,792,4.838,793,4.838,794,4.838,795,4.838,796,4.838,797,4.838,798,4.838,799,4.838,800,4.838,801,4.838,802,4.151]],["component/148",[77,0.896]],["title/149",[19,17.3,551,19.67,571,19.67,658,34.101]],["name/149",[571,2.034]],["text/149",[8,0.55,10,2.686,14,1.054,15,3.422,19,2.269,30,2.193,35,2.846,36,1.194,44,1.977,47,0.95,48,2.158,51,2.194,56,0.786,66,1.736,76,2.597,81,2.33,96,3.01,99,1.977,100,2.96,106,3.01,140,2.026,164,1.429,167,4.228,187,1.507,209,1.808,218,2.994,219,1.772,220,2.082,238,1.931,245,2.133,253,2.194,262,1.61,267,1.61,279,4.003,333,3.858,346,2.846,383,1.211,394,2.269,404,1.931,412,2.846,510,2.193,546,3.01,551,2.579,559,2.158,560,1.888,569,2.078,571,3.077,577,2.33,580,3.462,587,2.497,633,3.71,636,3.01,638,4.817,676,2.497,803,3.509,804,3.509,805,3.509,806,3.509,807,3.509,808,3.509,809,3.509,810,3.01,811,3.509,812,3.509,813,3.509,814,3.509]],["component/149",[77,0.896]],["title/150-1",[332,18.898]],["name/150-1",[]],["text/150-1",[]],["component/150-1",[]],["title/150-2",[815,32.382]],["name/150-2",[]],["text/150-2",[]],["component/150-2",[]],["title/150",[220,11.508,510,19.062,577,30.083]],["name/150",[14,0.288,219,0.859,220,0.432,579,1.063]],["text/150",[7,0.985,11,1.571,14,0.854,30,0.604,34,0.828,36,1.141,48,1.04,78,0.495,97,0.71,111,2.591,152,2.341,161,2.87,174,0.849,184,1.366,187,0.726,190,1.057,200,0.828,203,0.658,218,1.564,219,2.033,220,1.538,223,2.302,234,0.624,262,0.658,266,0.828,267,0.658,296,0.739,312,1.618,332,0.756,333,1.061,368,0.923,394,1.094,417,0.849,421,1.45,430,3.033,441,0.798,447,1.196,459,2.384,496,0.923,498,1.323,501,0.789,503,1.269,504,1.174,510,1.057,549,1.021,559,0.594,569,0.849,571,1.243,573,1.23,574,1.108,577,0.953,591,3.346,594,1.669,598,1.021,608,1.021,638,0.897,644,1.021,651,1.021,661,1.108,662,1.108,664,1.108,667,1.108,685,1.108,704,1.021,718,1.788,720,2.866,722,2.866,751,1.942,816,1.108,817,1.23,818,1.23,819,1.434,820,1.23,821,1.23,822,1.23,823,1.434,824,1.434,825,1.108,826,1.108,827,1.434,828,1.108,829,1.108,830,1.108,831,1.108,832,1.434,833,1.434,834,1.434,835,5.192,836,0.953,837,4.943,838,4.943,839,1.23,840,4.453,841,4.943,842,4.943,843,4.943,844,3.454,845,7.068,846,6.188,847,6.188,848,6.188,849,4.578,850,2.512,851,2.512,852,4.026,853,2.156,854,2.156,855,2.512,856,1.434,857,1.434,858,1.434,859,2.512,860,4.026,861,3.353,862,3.353,863,2.512,864,3.353,865,3.454,866,2.877,867,1.434,868,1.434,869,1.434,870,1.434,871,1.434,872,1.434,873,1.434,874,1.434]],["component/150",[77,0.896]],["title/151-1",[332,18.898]],["name/151-1",[]],["text/151-1",[]],["component/151-1",[]],["title/151-2",[815,32.382]],["name/151-2",[]],["text/151-2",[]],["component/151-2",[]],["title/151-3",[412,36.743,647,38.859,875,45.293]],["name/151-3",[]],["text/151-3",[]],["component/151-3",[]],["title/151",[14,6.734,187,11.49,220,10.098,510,16.728]],["name/151",[14,0.288,187,0.492,219,0.859,220,0.432]],["text/151",[14,1.153,15,1.62,36,1.002,48,1.219,56,0.659,78,1.574,97,1.457,131,1.046,152,0.91,161,2.705,184,1.199,187,1.615,200,2.634,203,2.563,218,2.444,219,3.792,220,2.106,226,1.659,254,3.701,262,1.351,266,1.7,312,2.937,332,0.886,368,1.895,370,2.388,383,1.016,394,2.738,421,1.7,430,2.402,441,0.935,501,1.62,503,2.303,504,2.132,510,1.239,551,1.457,559,1.889,569,1.743,575,2.275,591,1.955,598,2.095,638,1.841,651,2.095,661,2.275,662,2.275,664,2.275,704,2.095,720,3.247,722,3.247,786,2.095,816,2.275,818,2.526,820,2.526,835,3.914,836,1.955,837,2.526,838,2.526,839,2.526,840,2.275,841,2.526,842,2.526,843,2.526,844,3.914,846,3.914,847,3.914,848,3.914,853,2.526,854,2.526,866,2.526,876,2.944,877,2.944,878,2.944,879,2.944,880,2.944,881,2.944,882,4.562,883,2.944,884,2.944,885,2.944,886,2.944,887,4.562,888,2.944,889,4.562,890,2.944,891,2.944,892,2.944]],["component/151",[77,0.896]],["title/152-1",[78,15.632,590,32.238,893,30.083]],["name/152-1",[]],["text/152-1",[]],["component/152-1",[]],["title/152",[48,14.66,56,7.929,164,14.424,184,14.424,258,14.66]],["name/152",[78,0.729,164,0.861,581,1.321]],["text/152",[10,1.374,11,1.667,14,1.17,27,2.566,33,1.186,34,1.539,36,1.202,47,0.416,48,0.635,56,1.07,58,0.76,73,1.771,77,0.894,78,1.649,81,1.02,110,0.988,120,1.716,126,1.136,131,0.545,152,1.929,161,2.86,164,1.086,165,1.579,174,1.579,178,0.791,182,0.96,184,1.439,186,1.245,187,1.515,190,1.487,198,1.136,203,0.704,205,1.136,207,0.988,212,1.403,218,1.036,219,2.841,220,1.514,221,0.96,234,0.668,238,0.845,253,0.96,255,1.054,258,1.104,262,1.223,267,0.704,268,0.865,270,1.831,275,0.988,294,0.668,296,1.374,303,1.973,304,0.886,316,0.933,332,1.063,364,1.054,383,1.22,421,0.886,430,0.808,440,1.245,441,0.846,447,1.269,448,1.245,480,0.988,500,0.845,501,1.467,502,0.988,503,1.784,504,1.651,510,0.646,511,0.886,518,0.933,549,1.898,557,1.186,558,1.991,559,2.467,560,0.826,579,0.96,589,1.317,590,1.093,602,1.079,608,1.093,615,2.692,616,1.093,625,2.515,626,3.174,627,2.287,633,1.093,669,2.06,671,2.731,673,2.06,676,1.093,710,2.06,783,2.06,791,1.093,810,1.317,825,2.731,826,2.731,828,2.731,829,2.731,830,1.186,831,1.186,836,1.771,893,1.02,894,2.287,895,1.535,896,1.535,897,1.186,898,1.317,899,2.287,900,2.287,901,1.317,902,1.317,903,1.093,904,1.317,905,2.287,906,1.898,907,3.534,908,2.287,909,2.06,910,4.099,911,4.099,912,3.534,913,1.535,914,2.666,915,1.317,916,1.317,917,1.535,918,1.535,919,1.535,920,1.535,921,2.06,922,1.535,923,1.535,924,1.317,925,1.317,926,2.287,927,3.032,928,1.317,929,2.287,930,1.317,931,1.186,932,1.317,933,1.317,934,1.317,935,2.287,936,1.317,937,1.317,938,1.317,939,3.621,940,1.317,941,1.317,942,1.317,943,1.317,944,1.317,945,1.317,946,1.317,947,1.317,948,1.317,949,1.317,950,2.287,951,1.317,952,1.186,953,1.317,954,1.317,955,1.317,956,1.317,957,1.317,958,1.317,959,1.317,960,1.317,961,1.317]],["component/152",[77,0.896]],["title/153-1",[78,15.632,601,32.238,893,30.083]],["name/153-1",[]],["text/153-1",[]],["component/153-1",[]],["title/153-2",[78,15.632,893,30.083,962,38.859]],["name/153-2",[]],["text/153-2",[]],["component/153-2",[]],["title/153",[48,14.66,56,7.929,184,14.424,258,14.66,963,35.41]],["name/153",[78,0.587,164,0.693,581,1.063,964,1.7]],["text/153",[8,0.097,10,1.075,11,1.304,14,1.146,23,0.707,27,2.104,33,0.899,34,1.205,36,0.965,41,1.693,44,0.348,47,0.315,56,0.555,58,0.816,71,1.067,73,1.647,78,1.53,81,0.772,120,1.343,126,0.457,131,0.413,135,0.529,152,1.432,161,2.889,164,0.474,165,0.689,174,1.469,184,1.01,186,0.943,187,1.535,190,1.456,191,0.707,198,0.861,203,0.283,205,0.861,206,0.457,207,0.749,209,0.599,212,1.098,218,0.452,219,1.885,220,1.072,221,0.727,223,0.799,227,1.033,234,0.506,238,0.64,244,0.566,247,0.375,253,1.304,255,0.799,258,0.255,262,0.957,267,1.588,268,0.655,270,1.703,274,0.457,275,1.062,277,0.93,287,0.457,295,0.477,296,0.599,303,1.544,304,0.671,312,0.749,316,0.707,332,0.951,350,0.348,364,0.799,368,1.343,383,0.979,394,0.269,411,2.604,421,0.671,425,0.529,430,1.306,435,0.566,440,0.943,441,0.787,447,0.993,448,0.943,480,1.062,496,1.062,498,1.098,500,0.908,501,1.148,502,1.343,503,1.433,504,1.745,510,0.694,511,0.952,512,0.356,518,1.003,531,0.375,535,0.477,549,2.02,557,0.899,558,1.599,559,1.996,560,0.626,579,0.386,601,0.439,602,4.336,608,0.828,615,2.245,616,0.439,625,1.174,633,0.828,638,0.386,643,0.529,657,0.477,667,0.899,668,0.477,669,1.917,671,2.193,673,1.612,676,0.828,692,0.439,701,1.174,702,0.529,710,1.612,718,0.828,751,0.899,783,1.612,786,1.485,787,0.899,788,0.899,789,0.998,790,0.998,791,0.828,802,4.425,822,1.415,825,0.899,826,0.899,828,5.609,829,2.193,830,0.899,831,0.477,836,1.647,840,1.275,893,1.096,894,0.998,897,0.899,898,0.998,899,1.79,900,1.79,901,0.529,902,0.998,903,0.828,904,0.998,905,1.79,906,1.485,908,2.434,909,1.917,910,1.79,911,1.79,915,0.998,916,0.998,921,1.917,924,0.998,925,0.998,926,1.79,927,2.434,928,0.998,929,1.79,930,0.998,931,0.899,932,0.998,933,0.998,934,0.998,935,1.79,936,0.998,937,0.998,938,0.998,939,2.969,940,0.998,941,0.998,942,0.998,943,0.998,944,0.998,945,0.998,946,0.998,947,0.998,948,0.998,949,0.998,950,1.79,951,0.998,952,0.899,953,1.415,954,0.998,955,0.998,956,0.998,957,0.998,958,0.998,959,1.415,960,0.998,961,0.529,962,0.529,965,0.617,966,0.617,967,0.617,968,0.617,969,2.128,970,0.617,971,0.617,972,1.65,973,1.415,974,0.617,975,0.617,976,1.163,977,0.617,978,0.617,979,1.163,980,1.163,981,1.163,982,1.163,983,1.163,984,1.163,985,0.617,986,0.617,987,0.617,988,1.163,989,0.617,990,2.086,991,0.617,992,0.617,993,0.617,994,0.617,995,0.617,996,0.617,997,2.48,998,0.617,999,1.163,1000,0.617,1001,1.163,1002,1.163,1003,0.617,1004,0.617,1005,0.617,1006,0.617,1007,0.617,1008,0.617,1009,0.617,1010,2.837,1011,1.163,1012,1.163,1013,1.163,1014,3.985,1015,1.163,1016,1.163,1017,0.998,1018,1.163,1019,1.163,1020,0.617,1021,0.617,1022,0.617,1023,0.617,1024,0.617,1025,0.617,1026,0.617,1027,0.617,1028,0.617,1029,0.617,1030,0.617,1031,2.086,1032,0.617,1033,0.617,1034,0.617,1035,1.65,1036,0.617,1037,0.617,1038,0.617,1039,1.163,1040,1.163,1041,0.617,1042,0.617,1043,2.837,1044,1.163,1045,0.617,1046,0.617,1047,0.617,1048,2.837,1049,0.617,1050,1.163,1051,2.837,1052,2.837,1053,0.617,1054,1.65,1055,0.617,1056,0.617,1057,0.617,1058,0.617,1059,0.617,1060,0.617,1061,0.617,1062,1.163,1063,0.617,1064,0.617,1065,0.617,1066,0.617,1067,0.617,1068,0.617]],["component/153",[77,0.896]],["title/154",[]],["name/154",[581,1.745,1069,2.395]],["text/154",[110,4.848,350,4.243,1069,6.461]],["component/154",[77,0.896]],["title/155-1",[0,46.502]],["name/155-1",[]],["text/155-1",[]],["component/155-1",[]],["title/155-2",[78,18.167,533,40.678]],["name/155-2",[]],["text/155-2",[]],["component/155-2",[]],["title/155-3",[47,10.766,56,8.9,332,11.956,441,12.618]],["name/155-3",[]],["text/155-3",[]],["component/155-3",[]],["title/155-4",[332,15.833,496,33.889]],["name/155-4",[]],["text/155-4",[]],["component/155-4",[]],["title/155-5",[8,7.096,372,21.166,497,31.102]],["name/155-5",[]],["text/155-5",[]],["component/155-5",[]],["title/155-6",[296,18.251,365,16.547,375,15.681,498,18.642,499,26.209]],["name/155-6",[]],["text/155-6",[]],["component/155-6",[]],["title/155-7",[534,45.161,535,40.678]],["name/155-7",[]],["text/155-7",[]],["component/155-7",[]],["title/155",[7,31.102,8,7.096,77,15.196]],["name/155",[9,2.075]],["text/155",[2,0.949,8,1.186,10,1.635,11,1.176,13,1.357,14,0.697,15,1.746,19,0.818,21,1.113,28,1.453,30,1.731,36,1.991,37,1.035,39,1.725,44,1.06,47,1.114,49,1.249,51,1.176,56,1.621,66,1.57,75,1.725,77,2.089,78,0.649,84,1.613,95,1.453,97,1.57,99,1.06,120,2.648,123,1.67,125,1.392,129,1.06,131,2.212,145,1.392,152,2.021,161,1.035,178,0.969,179,2.732,182,1.983,187,0.544,195,1.392,196,1.746,209,0.969,210,1.086,211,1.392,218,1.598,221,1.983,225,1.392,226,1.06,227,1.57,229,1.453,234,2.547,237,1.338,238,1.035,245,1.143,258,2.234,262,1.455,267,0.863,268,1.06,277,1.06,296,0.969,316,1.143,328,1.392,332,1.623,340,1.453,346,1.525,365,2.258,369,1.338,372,1.482,373,2.258,374,1.67,375,2.389,383,0.649,394,2.71,400,1.211,417,2.861,421,1.086,441,1.306,463,1.176,481,1.725,482,1.392,483,1.725,484,1.725,485,1.725,486,1.725,487,1.725,488,1.725,489,2.348,490,2.91,491,1.392,492,1.525,493,1.525,494,1.392,495,1.725,500,1.035,501,1.035,502,1.211,503,2.439,504,0.879,505,1.392,506,2.348,507,1.392,508,1.291,509,1.291,510,0.791,511,1.086,512,1.086,513,1.392,514,3.576,515,1.929,516,1.392,517,2.348,518,1.143,519,1.392,520,1.291,521,2.348,522,2.348,523,1.392,524,1.392,525,1.392,526,1.392,527,1.392,528,1.291,529,1.392,530,1.291,531,1.143,536,1.453,537,1.88,538,1.88,539,1.88,540,1.613,541,3.172,542,1.88,543,1.88,544,1.453,545,1.613,546,1.613,547,1.88,548,1.613,549,1.338,550,1.983,551,0.931,552,1.613,553,1.88,554,1.88,555,1.88,556,1.453,557,1.453,558,1.06,559,0.778,560,1.012,561,1.88,562,1.453,563,1.88,564,1.88]],["component/155",[77,0.896]],["title/156",[14,6,19,15.413,30,14.903,152,10.941,551,17.524]],["name/156",[19,1.215,551,1.381]],["text/156",[]],["component/156",[77,0.896]],["title/157",[2,22.869,77,15.196,131,16.088]],["name/157",[2,2.075]],["text/157",[1,1.753,2,1.533,8,0.476,14,1.416,19,1.322,23,1.846,24,2.605,30,2.397,36,1.033,47,1.266,48,2.358,56,1.275,77,1.019,94,1.846,100,2.711,116,2.347,131,1.079,145,2.247,152,2.346,161,2.624,184,1.903,187,1.996,190,1.966,191,1.846,200,2.697,219,3.681,220,1.625,248,2.247,304,3.692,314,2.247,332,0.913,382,1.798,383,1.965,394,2.479,400,1.955,404,2.572,417,1.798,421,1.753,436,1.955,437,1.671,441,0.964,447,1.446,459,1.798,489,2.247,503,2.359,510,1.278,512,2.697,550,1.898,556,2.347,558,1.711,559,1.934,560,2.514,562,2.347,565,3.036,566,3.036,567,3.036,568,2.017,569,1.798,570,2.605,571,3.608,572,3.036,573,2.605,574,4.401,575,2.347,576,3.036,577,2.017,578,2.605,579,1.898,580,2.017]],["component/157",[77,0.896]],["title/158",[56,8.9,164,16.191,258,16.455,559,16.455]],["name/158",[164,1.137,581,1.745]],["text/158",[14,1.135,19,1.238,44,1.603,47,0.771,48,1.178,56,1.661,58,1.408,67,3.162,81,1.89,88,3.288,92,1.685,94,1.73,120,1.832,129,1.603,134,2.61,152,1.688,182,4.438,184,1.159,196,3.008,203,1.305,208,2.106,212,1.498,226,1.603,234,1.238,242,3.604,254,3.604,258,2.939,262,1.305,294,1.933,304,3.565,328,2.106,333,3.288,378,2.308,382,1.685,404,1.566,417,1.685,423,2.106,424,4.076,426,2.308,500,1.566,510,1.869,548,4.688,550,1.779,558,1.603,559,2.557,560,1.531,569,1.685,580,1.89,582,2.845,583,4.223,584,5.465,585,2.441,586,2.025,587,2.025,588,2.199,589,5.298,590,2.025,591,3.63,592,7.673,593,2.845,594,2.95,595,4.442,596,5.465,597,4.442,598,3.162,599,4.442,600,2.441,601,2.025,602,3.842,603,5.465,604,2.95,605,2.845,606,2.845,607,2.845,608,3.162,609,2.845,610,2.845,611,2.845,612,2.845,613,2.845,614,2.845,615,1.603]],["component/158",[77,0.896]],["title/159",[56,7.149,172,19.412,258,13.218,604,21.206,616,22.725,617,27.392]],["name/159",[172,1.697,581,1.745]],["text/159",[]],["component/159",[77,0.896]],["title/160-1",[62,38.201]],["name/160-1",[]],["text/160-1",[]],["component/160-1",[]],["title/160-2",[56,8.9,178,20.486,258,16.455,618,30.716]],["name/160-2",[]],["text/160-2",[]],["component/160-2",[]],["title/160",[36,13.524,56,8.9,77,13.335,258,16.455]],["name/160",[581,2.57]],["text/160",[14,1.399,19,1.704,36,1.332,37,2.155,47,1.06,56,1.849,77,1.313,80,2.897,92,2.318,123,2.061,152,1.21,161,2.613,164,2.3,168,2.6,172,3.433,178,2.018,187,1.915,212,2.061,218,1.521,219,3.344,220,1.683,234,1.704,258,3.418,294,2.458,353,2.52,447,2.689,459,2.318,475,2.688,551,1.937,552,3.359,559,2.338,579,3.53,583,3.025,588,3.025,590,2.786,601,2.786,604,2.6,616,2.786,617,3.359,619,3.025,620,3.915,621,3.359,622,3.359,623,3.915,624,3.915,625,4.019,626,3.751,627,4.845]],["component/160",[77,0.896]],["title/161-1",[88,33.523,165,26.819,178,23.345]],["name/161-1",[]],["text/161-1",[]],["component/161-1",[]],["title/161-2",[30,22.153,152,16.264]],["name/161-2",[]],["text/161-2",[]],["component/161-2",[]],["title/161-3",[14,6,19,15.413,220,13.332,383,12.221]],["name/161-3",[]],["text/161-3",[]],["component/161-3",[]],["title/161-4",[19,19.714,100,21.564,571,22.414]],["name/161-4",[]],["text/161-4",[]],["component/161-4",[]],["title/161-5",[48,21.792,571,26.049]],["name/161-5",[]],["text/161-5",[]],["component/161-5",[]],["title/161-6",[94,21.53,404,19.49,558,19.951,559,14.66,615,19.951]],["name/161-6",[]],["text/161-6",[]],["component/161-6",[]],["title/161-7",[15,19.49,168,23.519,212,18.642,353,22.798,615,19.951]],["name/161-7",[]],["text/161-7",[]],["component/161-7",[]],["title/161-8",[161,12.969,213,32.243,214,36.47,370,32.243]],["name/161-8",[]],["text/161-8",[]],["component/161-8",[]],["title/161",[47,10.766,131,14.118,165,23.535,178,20.486]],["name/161",[178,2.119]],["text/161",[1,2.361,8,0.493,10,0.961,12,1.915,13,0.798,14,1.377,15,1.026,19,2.092,27,1.134,30,2.022,36,1.072,37,2.251,45,1.38,47,2.004,48,2.568,51,1.166,56,1.52,58,2.883,62,1.134,66,0.923,73,4.662,76,1.38,77,1.372,80,2.331,88,1.38,92,1.865,97,0.923,99,1.775,100,1.947,117,1.38,131,0.662,152,1.8,156,1.239,158,1.38,161,2.127,164,0.76,167,1.513,174,3.672,178,0.961,182,1.969,184,2.187,187,1.552,190,0.785,191,1.915,196,1.026,200,1.077,203,0.856,208,1.38,218,2.532,220,1.656,228,1.441,234,2.337,245,1.915,248,1.38,255,1.281,256,1.513,258,1.989,262,0.856,294,0.812,304,1.077,316,1.134,330,1.38,382,1.104,383,1.411,394,0.812,417,1.865,437,1.026,446,1.104,463,1.166,475,1.281,480,1.201,489,1.38,491,1.38,510,2.022,511,1.077,512,2.361,536,1.441,545,1.6,550,1.969,551,0.923,559,1.989,562,2.434,571,2.883,574,1.441,575,1.441,577,2.092,578,1.6,587,1.327,588,2.434,619,1.441,625,3.822,628,1.865,629,3.15,630,1.865,631,1.865,632,1.865,633,2.91,634,1.865,635,1.865,636,1.6,637,1.865,638,2.556,639,1.865,640,1.865,641,1.865,642,1.441,643,3.508,644,1.327,645,1.865,646,1.865,647,2.702,648,1.865,649,1.865,650,1.865,651,1.327,652,3.15,653,1.865]],["component/161",[77,0.896]],["title/162-1",[161,14.779,184,18.45,332,13.624]],["name/162-1",[]],["text/162-1",[]],["component/162-1",[]],["title/162-2",[164,14.424,332,10.651,558,19.951,559,14.66,560,19.054]],["name/162-2",[]],["text/162-2",[]],["component/162-2",[]],["title/162-3",[48,16.455,78,13.718,172,24.167,571,19.67]],["name/162-3",[]],["text/162-3",[]],["component/162-3",[]],["title/162-4",[184,16.191,560,21.388,580,26.399,654,39.746]],["name/162-4",[]],["text/162-4",[]],["component/162-4",[]],["title/162",[94,19.412,245,19.412,404,17.573,559,13.218,560,17.18,615,17.989]],["name/162",[559,1.702]],["text/162",[1,1.7,8,0.461,14,1.272,23,1.79,27,1.79,36,1.552,43,2.701,47,1.236,48,2.818,49,1.955,56,1.251,67,2.095,77,0.988,78,2.171,94,3.396,97,1.457,99,1.659,100,1.402,122,2.388,123,1.55,144,2.022,152,1.944,164,1.199,172,1.79,174,1.743,182,1.841,184,2.275,187,1.319,203,1.351,218,1.772,219,2.82,220,1.729,233,2.179,234,1.281,247,1.79,258,1.219,262,2.093,266,2.634,268,1.659,304,3.224,328,2.179,332,0.886,387,2.022,400,1.895,404,3.462,417,2.701,423,2.179,441,0.935,463,1.841,503,1.486,504,2.132,510,2.35,512,1.7,550,1.841,551,1.457,558,3.147,559,2.981,569,1.743,571,2.764,579,1.841,580,3.03,583,2.275,586,2.095,587,2.095,594,1.955,615,3.147,621,2.526,651,2.095,655,4.562,656,2.944,657,2.275,658,2.526,659,2.944,660,2.944,661,2.275,662,2.275,663,2.944,664,2.275,665,1.841,666,2.944,667,2.275,668,2.275,669,2.275,670,2.944,671,2.275,672,2.944,673,2.275]],["component/162",[77,0.896]],["title/163-1",[30,26.441]],["name/163-1",[]],["text/163-1",[]],["component/163-1",[]],["title/163-2",[220,13.374,383,18.167]],["name/163-2",[]],["text/163-2",[]],["component/163-2",[]],["title/163-3",[330,46.502]],["name/163-3",[]],["text/163-3",[]],["component/163-3",[]],["title/163",[14,7.654,19,12.652,37,15.999,100,13.84,220,7.385,383,10.032]],["name/163",[14,0.493,37,0.936,220,0.432]],["text/163",[2,0.627,8,0.195,12,0.755,14,0.21,25,1.638,30,1.944,34,1.727,36,0.423,42,2.745,48,1.725,49,0.825,52,1.71,56,0.813,65,3.131,70,1.14,77,0.417,99,0.7,100,0.591,116,0.96,117,0.919,129,1.247,130,1.066,131,0.786,152,0.924,158,0.919,161,3.033,164,0.901,179,1.987,195,2.688,203,1.373,210,0.717,211,0.919,212,1.165,220,0.562,223,0.853,225,0.919,248,0.919,275,1.425,277,2.603,279,0.8,313,1.008,316,0.755,320,1.14,330,1.638,332,1.092,375,0.55,382,0.735,383,1.947,394,0.963,400,0.8,401,1.14,404,0.684,427,1.008,430,1.575,438,0.8,439,0.668,459,1.31,475,0.853,497,4.709,508,0.853,531,3.431,536,0.96,551,1.481,568,1.47,591,4.214,594,3.551,602,0.873,604,1.987,665,1.383,674,1.242,675,1.242,676,0.884,677,1.066,678,1.242,679,2.213,680,1.242,681,2.585,682,2.992,683,1.242,684,1.242,685,3.22,686,1.242,687,1.242,688,1.242,689,1.066,690,1.242,691,1.898,692,1.575,693,1.242,694,4.562,695,1.066,696,2.213,697,1.066,698,4.166,699,1.242,700,1.242,701,0.884,702,1.066,703,4.297,704,1.575,705,0.96,706,1.242,707,1.242,708,1.242,709,1.242,710,0.96,711,1.242,712,1.242,713,1.066,714,1.242,715,3.574,716,2.213,717,2.213,718,0.884,719,1.242,720,0.884,721,2.992,722,0.884,723,3.116,724,1.242,725,1.242,726,3.963,727,1.242,728,1.242,729,1.242,730,1.242,731,1.242,732,1.242,733,1.242,734,1.242,735,1.242,736,1.242,737,1.242,738,1.242,739,2.992,740,1.242,741,2.992,742,2.312,743,2.992,744,6.345,745,2.992,746,3.632,747,1.242,748,1.575,749,3.632,750,1.242,751,4.132,752,2.213,753,1.242,754,1.242,755,2.213,756,1.242,757,1.242,758,1.242,759,1.242,760,1.242,761,2.213,762,1.242,763,1.242,764,1.242,765,1.242,766,1.242,767,2.992,768,1.242,769,1.242,770,2.213,771,2.213,772,2.213,773,1.242,774,1.242,775,1.242,776,1.242,777,2.213,778,1.242,779,1.242,780,1.242,781,1.242,782,0.96,783,0.96,784,1.242]],["component/163",[77,0.896]],["title/164",[14,6.734,78,13.718,187,11.49,785,28.291]],["name/164",[14,0.473,187,0.807]],["text/164",[14,1.408,47,1.774,56,1.662,66,3.241,78,2.562,131,1.719,184,2.667,187,2.146,190,2.036,203,2.22,213,5.312,266,2.793,353,3.115,441,1.536,500,2.663,501,2.663,504,2.261,568,3.214,615,2.726,692,3.444,785,3.444,786,3.444,787,3.739,788,5.061,789,4.151,790,4.151,791,3.444,792,4.838,793,4.838,794,4.838,795,4.838,796,4.838,797,4.838,798,4.838,799,4.838,800,4.838,801,4.838,802,4.151]],["component/164",[77,0.896]],["title/165",[19,17.3,551,19.67,571,19.67,658,34.101]],["name/165",[571,2.034]],["text/165",[8,0.55,10,2.686,14,1.054,15,3.422,19,2.269,30,2.193,35,2.846,36,1.194,44,1.977,47,0.95,48,2.158,51,2.194,56,0.786,66,1.736,76,2.597,81,2.33,96,3.01,99,1.977,100,2.96,106,3.01,140,2.026,164,1.429,167,4.228,187,1.507,209,1.808,218,2.994,219,1.772,220,2.082,238,1.931,245,2.133,253,2.194,262,1.61,267,1.61,279,4.003,333,3.858,346,2.846,383,1.211,394,2.269,404,1.931,412,2.846,510,2.193,546,3.01,551,2.579,559,2.158,560,1.888,569,2.078,571,3.077,577,2.33,580,3.462,587,2.497,633,3.71,636,3.01,638,4.817,676,2.497,803,3.509,804,3.509,805,3.509,806,3.509,807,3.509,808,3.509,809,3.509,810,3.01,811,3.509,812,3.509,813,3.509,814,3.509]],["component/165",[77,0.896]],["title/166-1",[332,18.898]],["name/166-1",[]],["text/166-1",[]],["component/166-1",[]],["title/166-2",[815,32.382]],["name/166-2",[]],["text/166-2",[]],["component/166-2",[]],["title/166",[220,11.508,510,19.062,577,30.083]],["name/166",[14,0.288,219,0.859,220,0.432,579,1.063]],["text/166",[7,0.985,11,1.571,14,0.854,30,0.604,34,0.828,36,1.141,48,1.04,78,0.495,97,0.71,111,2.591,152,2.341,161,2.87,174,0.849,184,1.366,187,0.726,190,1.057,200,0.828,203,0.658,218,1.564,219,2.033,220,1.538,223,2.302,234,0.624,262,0.658,266,0.828,267,0.658,296,0.739,312,1.618,332,0.756,333,1.061,368,0.923,394,1.094,417,0.849,421,1.45,430,3.033,441,0.798,447,1.196,459,2.384,496,0.923,498,1.323,501,0.789,503,1.269,504,1.174,510,1.057,549,1.021,559,0.594,569,0.849,571,1.243,573,1.23,574,1.108,577,0.953,591,3.346,594,1.669,598,1.021,608,1.021,638,0.897,644,1.021,651,1.021,661,1.108,662,1.108,664,1.108,667,1.108,685,1.108,704,1.021,718,1.788,720,2.866,722,2.866,751,1.942,816,1.108,817,1.23,818,1.23,819,1.434,820,1.23,821,1.23,822,1.23,823,1.434,824,1.434,825,1.108,826,1.108,827,1.434,828,1.108,829,1.108,830,1.108,831,1.108,832,1.434,833,1.434,834,1.434,835,5.192,836,0.953,837,4.943,838,4.943,839,1.23,840,4.453,841,4.943,842,4.943,843,4.943,844,3.454,845,7.068,846,6.188,847,6.188,848,6.188,849,4.578,850,2.512,851,2.512,852,4.026,853,2.156,854,2.156,855,2.512,856,1.434,857,1.434,858,1.434,859,2.512,860,4.026,861,3.353,862,3.353,863,2.512,864,3.353,865,3.454,866,2.877,867,1.434,868,1.434,869,1.434,870,1.434,871,1.434,872,1.434,873,1.434,874,1.434]],["component/166",[77,0.896]],["title/167-1",[332,18.898]],["name/167-1",[]],["text/167-1",[]],["component/167-1",[]],["title/167-2",[815,32.382]],["name/167-2",[]],["text/167-2",[]],["component/167-2",[]],["title/167-3",[412,36.743,647,38.859,875,45.293]],["name/167-3",[]],["text/167-3",[]],["component/167-3",[]],["title/167",[14,6.734,187,11.49,220,10.098,510,16.728]],["name/167",[14,0.288,187,0.492,219,0.859,220,0.432]],["text/167",[14,1.153,15,1.62,36,1.002,48,1.219,56,0.659,78,1.574,97,1.457,131,1.046,152,0.91,161,2.705,184,1.199,187,1.615,200,2.634,203,2.563,218,2.444,219,3.792,220,2.106,226,1.659,254,3.701,262,1.351,266,1.7,312,2.937,332,0.886,368,1.895,370,2.388,383,1.016,394,2.738,421,1.7,430,2.402,441,0.935,501,1.62,503,2.303,504,2.132,510,1.239,551,1.457,559,1.889,569,1.743,575,2.275,591,1.955,598,2.095,638,1.841,651,2.095,661,2.275,662,2.275,664,2.275,704,2.095,720,3.247,722,3.247,786,2.095,816,2.275,818,2.526,820,2.526,835,3.914,836,1.955,837,2.526,838,2.526,839,2.526,840,2.275,841,2.526,842,2.526,843,2.526,844,3.914,846,3.914,847,3.914,848,3.914,853,2.526,854,2.526,866,2.526,876,2.944,877,2.944,878,2.944,879,2.944,880,2.944,881,2.944,882,4.562,883,2.944,884,2.944,885,2.944,886,2.944,887,4.562,888,2.944,889,4.562,890,2.944,891,2.944,892,2.944]],["component/167",[77,0.896]],["title/168-1",[78,15.632,590,32.238,893,30.083]],["name/168-1",[]],["text/168-1",[]],["component/168-1",[]],["title/168",[48,14.66,56,7.929,164,14.424,184,14.424,258,14.66]],["name/168",[78,0.729,164,0.861,581,1.321]],["text/168",[10,1.374,11,1.667,14,1.17,27,2.566,33,1.186,34,1.539,36,1.202,47,0.416,48,0.635,56,1.07,58,0.76,73,1.771,77,0.894,78,1.649,81,1.02,110,0.988,120,1.716,126,1.136,131,0.545,152,1.929,161,2.86,164,1.086,165,1.579,174,1.579,178,0.791,182,0.96,184,1.439,186,1.245,187,1.515,190,1.487,198,1.136,203,0.704,205,1.136,207,0.988,212,1.403,218,1.036,219,2.841,220,1.514,221,0.96,234,0.668,238,0.845,253,0.96,255,1.054,258,1.104,262,1.223,267,0.704,268,0.865,270,1.831,275,0.988,294,0.668,296,1.374,303,1.973,304,0.886,316,0.933,332,1.063,364,1.054,383,1.22,421,0.886,430,0.808,440,1.245,441,0.846,447,1.269,448,1.245,480,0.988,500,0.845,501,1.467,502,0.988,503,1.784,504,1.651,510,0.646,511,0.886,518,0.933,549,1.898,557,1.186,558,1.991,559,2.467,560,0.826,579,0.96,589,1.317,590,1.093,602,1.079,608,1.093,615,2.692,616,1.093,625,2.515,626,3.174,627,2.287,633,1.093,669,2.06,671,2.731,673,2.06,676,1.093,710,2.06,783,2.06,791,1.093,810,1.317,825,2.731,826,2.731,828,2.731,829,2.731,830,1.186,831,1.186,836,1.771,893,1.02,894,2.287,895,1.535,896,1.535,897,1.186,898,1.317,899,2.287,900,2.287,901,1.317,902,1.317,903,1.093,904,1.317,905,2.287,906,1.898,907,3.534,908,2.287,909,2.06,910,4.099,911,4.099,912,3.534,913,1.535,914,2.666,915,1.317,916,1.317,917,1.535,918,1.535,919,1.535,920,1.535,921,2.06,922,1.535,923,1.535,924,1.317,925,1.317,926,2.287,927,3.032,928,1.317,929,2.287,930,1.317,931,1.186,932,1.317,933,1.317,934,1.317,935,2.287,936,1.317,937,1.317,938,1.317,939,3.621,940,1.317,941,1.317,942,1.317,943,1.317,944,1.317,945,1.317,946,1.317,947,1.317,948,1.317,949,1.317,950,2.287,951,1.317,952,1.186,953,1.317,954,1.317,955,1.317,956,1.317,957,1.317,958,1.317,959,1.317,960,1.317,961,1.317]],["component/168",[77,0.896]],["title/169-1",[78,15.632,601,32.238,893,30.083]],["name/169-1",[]],["text/169-1",[]],["component/169-1",[]],["title/169-2",[78,15.632,893,30.083,962,38.859]],["name/169-2",[]],["text/169-2",[]],["component/169-2",[]],["title/169",[48,14.66,56,7.929,184,14.424,258,14.66,963,35.41]],["name/169",[78,0.587,164,0.693,581,1.063,964,1.7]],["text/169",[8,0.097,10,1.075,11,1.304,14,1.146,23,0.707,27,2.104,33,0.899,34,1.205,36,0.965,41,1.693,44,0.348,47,0.315,56,0.555,58,0.816,71,1.067,73,1.647,78,1.53,81,0.772,120,1.343,126,0.457,131,0.413,135,0.529,152,1.432,161,2.889,164,0.474,165,0.689,174,1.469,184,1.01,186,0.943,187,1.535,190,1.456,191,0.707,198,0.861,203,0.283,205,0.861,206,0.457,207,0.749,209,0.599,212,1.098,218,0.452,219,1.885,220,1.072,221,0.727,223,0.799,227,1.033,234,0.506,238,0.64,244,0.566,247,0.375,253,1.304,255,0.799,258,0.255,262,0.957,267,1.588,268,0.655,270,1.703,274,0.457,275,1.062,277,0.93,287,0.457,295,0.477,296,0.599,303,1.544,304,0.671,312,0.749,316,0.707,332,0.951,350,0.348,364,0.799,368,1.343,383,0.979,394,0.269,411,2.604,421,0.671,425,0.529,430,1.306,435,0.566,440,0.943,441,0.787,447,0.993,448,0.943,480,1.062,496,1.062,498,1.098,500,0.908,501,1.148,502,1.343,503,1.433,504,1.745,510,0.694,511,0.952,512,0.356,518,1.003,531,0.375,535,0.477,549,2.02,557,0.899,558,1.599,559,1.996,560,0.626,579,0.386,601,0.439,602,4.336,608,0.828,615,2.245,616,0.439,625,1.174,633,0.828,638,0.386,643,0.529,657,0.477,667,0.899,668,0.477,669,1.917,671,2.193,673,1.612,676,0.828,692,0.439,701,1.174,702,0.529,710,1.612,718,0.828,751,0.899,783,1.612,786,1.485,787,0.899,788,0.899,789,0.998,790,0.998,791,0.828,802,4.425,822,1.415,825,0.899,826,0.899,828,5.609,829,2.193,830,0.899,831,0.477,836,1.647,840,1.275,893,1.096,894,0.998,897,0.899,898,0.998,899,1.79,900,1.79,901,0.529,902,0.998,903,0.828,904,0.998,905,1.79,906,1.485,908,2.434,909,1.917,910,1.79,911,1.79,915,0.998,916,0.998,921,1.917,924,0.998,925,0.998,926,1.79,927,2.434,928,0.998,929,1.79,930,0.998,931,0.899,932,0.998,933,0.998,934,0.998,935,1.79,936,0.998,937,0.998,938,0.998,939,2.969,940,0.998,941,0.998,942,0.998,943,0.998,944,0.998,945,0.998,946,0.998,947,0.998,948,0.998,949,0.998,950,1.79,951,0.998,952,0.899,953,1.415,954,0.998,955,0.998,956,0.998,957,0.998,958,0.998,959,1.415,960,0.998,961,0.529,962,0.529,965,0.617,966,0.617,967,0.617,968,0.617,969,2.128,970,0.617,971,0.617,972,1.65,973,1.415,974,0.617,975,0.617,976,1.163,977,0.617,978,0.617,979,1.163,980,1.163,981,1.163,982,1.163,983,1.163,984,1.163,985,0.617,986,0.617,987,0.617,988,1.163,989,0.617,990,2.086,991,0.617,992,0.617,993,0.617,994,0.617,995,0.617,996,0.617,997,2.48,998,0.617,999,1.163,1000,0.617,1001,1.163,1002,1.163,1003,0.617,1004,0.617,1005,0.617,1006,0.617,1007,0.617,1008,0.617,1009,0.617,1010,2.837,1011,1.163,1012,1.163,1013,1.163,1014,3.985,1015,1.163,1016,1.163,1017,0.998,1018,1.163,1019,1.163,1020,0.617,1021,0.617,1022,0.617,1023,0.617,1024,0.617,1025,0.617,1026,0.617,1027,0.617,1028,0.617,1029,0.617,1030,0.617,1031,2.086,1032,0.617,1033,0.617,1034,0.617,1035,1.65,1036,0.617,1037,0.617,1038,0.617,1039,1.163,1040,1.163,1041,0.617,1042,0.617,1043,2.837,1044,1.163,1045,0.617,1046,0.617,1047,0.617,1048,2.837,1049,0.617,1050,1.163,1051,2.837,1052,2.837,1053,0.617,1054,1.65,1055,0.617,1056,0.617,1057,0.617,1058,0.617,1059,0.617,1060,0.617,1061,0.617,1062,1.163,1063,0.617,1064,0.617,1065,0.617,1066,0.617,1067,0.617,1068,0.617]],["component/169",[77,0.896]],["title/170",[]],["name/170",[581,1.745,1069,2.395]],["text/170",[110,4.848,350,4.243,1069,6.461]],["component/170",[77,0.896]],["title/171-1",[0,46.502]],["name/171-1",[]],["text/171-1",[]],["component/171-1",[]],["title/171-2",[78,18.167,533,40.678]],["name/171-2",[]],["text/171-2",[]],["component/171-2",[]],["title/171-3",[47,10.766,56,8.9,332,11.956,441,12.618]],["name/171-3",[]],["text/171-3",[]],["component/171-3",[]],["title/171-4",[332,15.833,496,33.889]],["name/171-4",[]],["text/171-4",[]],["component/171-4",[]],["title/171-5",[8,7.096,372,21.166,497,31.102]],["name/171-5",[]],["text/171-5",[]],["component/171-5",[]],["title/171-6",[296,18.251,365,16.547,375,15.681,498,18.642,499,26.209]],["name/171-6",[]],["text/171-6",[]],["component/171-6",[]],["title/171-7",[534,45.161,535,40.678]],["name/171-7",[]],["text/171-7",[]],["component/171-7",[]],["title/171",[7,31.102,8,7.096,77,15.196]],["name/171",[9,2.075]],["text/171",[2,0.949,8,1.186,10,1.635,11,1.176,13,1.357,14,0.697,15,1.746,19,0.818,21,1.113,28,1.453,30,1.731,36,1.991,37,1.035,39,1.725,44,1.06,47,1.114,49,1.249,51,1.176,56,1.621,66,1.57,75,1.725,77,2.089,78,0.649,84,1.613,95,1.453,97,1.57,99,1.06,120,2.648,123,1.67,125,1.392,129,1.06,131,2.212,145,1.392,152,2.021,161,1.035,178,0.969,179,2.732,182,1.983,187,0.544,195,1.392,196,1.746,209,0.969,210,1.086,211,1.392,218,1.598,221,1.983,225,1.392,226,1.06,227,1.57,229,1.453,234,2.547,237,1.338,238,1.035,245,1.143,258,2.234,262,1.455,267,0.863,268,1.06,277,1.06,296,0.969,316,1.143,328,1.392,332,1.623,340,1.453,346,1.525,365,2.258,369,1.338,372,1.482,373,2.258,374,1.67,375,2.389,383,0.649,394,2.71,400,1.211,417,2.861,421,1.086,441,1.306,463,1.176,481,1.725,482,1.392,483,1.725,484,1.725,485,1.725,486,1.725,487,1.725,488,1.725,489,2.348,490,2.91,491,1.392,492,1.525,493,1.525,494,1.392,495,1.725,500,1.035,501,1.035,502,1.211,503,2.439,504,0.879,505,1.392,506,2.348,507,1.392,508,1.291,509,1.291,510,0.791,511,1.086,512,1.086,513,1.392,514,3.576,515,1.929,516,1.392,517,2.348,518,1.143,519,1.392,520,1.291,521,2.348,522,2.348,523,1.392,524,1.392,525,1.392,526,1.392,527,1.392,528,1.291,529,1.392,530,1.291,531,1.143,536,1.453,537,1.88,538,1.88,539,1.88,540,1.613,541,3.172,542,1.88,543,1.88,544,1.453,545,1.613,546,1.613,547,1.88,548,1.613,549,1.338,550,1.983,551,0.931,552,1.613,553,1.88,554,1.88,555,1.88,556,1.453,557,1.453,558,1.06,559,0.778,560,1.012,561,1.88,562,1.453,563,1.88,564,1.88]],["component/171",[77,0.896]],["title/172",[14,6,19,15.413,30,14.903,152,10.941,551,17.524]],["name/172",[19,1.215,551,1.381]],["text/172",[]],["component/172",[77,0.896]],["title/173",[2,22.869,77,15.196,131,16.088]],["name/173",[2,2.075]],["text/173",[1,1.753,2,1.533,8,0.476,14,1.416,19,1.322,23,1.846,24,2.605,30,2.397,36,1.033,47,1.266,48,2.358,56,1.275,77,1.019,94,1.846,100,2.711,116,2.347,131,1.079,145,2.247,152,2.346,161,2.624,184,1.903,187,1.996,190,1.966,191,1.846,200,2.697,219,3.681,220,1.625,248,2.247,304,3.692,314,2.247,332,0.913,382,1.798,383,1.965,394,2.479,400,1.955,404,2.572,417,1.798,421,1.753,436,1.955,437,1.671,441,0.964,447,1.446,459,1.798,489,2.247,503,2.359,510,1.278,512,2.697,550,1.898,556,2.347,558,1.711,559,1.934,560,2.514,562,2.347,565,3.036,566,3.036,567,3.036,568,2.017,569,1.798,570,2.605,571,3.608,572,3.036,573,2.605,574,4.401,575,2.347,576,3.036,577,2.017,578,2.605,579,1.898,580,2.017]],["component/173",[77,0.896]],["title/174",[56,8.9,164,16.191,258,16.455,559,16.455]],["name/174",[164,1.137,581,1.745]],["text/174",[14,1.135,19,1.238,44,1.603,47,0.771,48,1.178,56,1.661,58,1.408,67,3.162,81,1.89,88,3.288,92,1.685,94,1.73,120,1.832,129,1.603,134,2.61,152,1.688,182,4.438,184,1.159,196,3.008,203,1.305,208,2.106,212,1.498,226,1.603,234,1.238,242,3.604,254,3.604,258,2.939,262,1.305,294,1.933,304,3.565,328,2.106,333,3.288,378,2.308,382,1.685,404,1.566,417,1.685,423,2.106,424,4.076,426,2.308,500,1.566,510,1.869,548,4.688,550,1.779,558,1.603,559,2.557,560,1.531,569,1.685,580,1.89,582,2.845,583,4.223,584,5.465,585,2.441,586,2.025,587,2.025,588,2.199,589,5.298,590,2.025,591,3.63,592,7.673,593,2.845,594,2.95,595,4.442,596,5.465,597,4.442,598,3.162,599,4.442,600,2.441,601,2.025,602,3.842,603,5.465,604,2.95,605,2.845,606,2.845,607,2.845,608,3.162,609,2.845,610,2.845,611,2.845,612,2.845,613,2.845,614,2.845,615,1.603]],["component/174",[77,0.896]],["title/175",[56,7.149,172,19.412,258,13.218,604,21.206,616,22.725,617,27.392]],["name/175",[172,1.697,581,1.745]],["text/175",[]],["component/175",[77,0.896]],["title/176-1",[62,38.201]],["name/176-1",[]],["text/176-1",[]],["component/176-1",[]],["title/176-2",[56,8.9,178,20.486,258,16.455,618,30.716]],["name/176-2",[]],["text/176-2",[]],["component/176-2",[]],["title/176",[36,13.524,56,8.9,77,13.335,258,16.455]],["name/176",[581,2.57]],["text/176",[14,1.399,19,1.704,36,1.332,37,2.155,47,1.06,56,1.849,77,1.313,80,2.897,92,2.318,123,2.061,152,1.21,161,2.613,164,2.3,168,2.6,172,3.433,178,2.018,187,1.915,212,2.061,218,1.521,219,3.344,220,1.683,234,1.704,258,3.418,294,2.458,353,2.52,447,2.689,459,2.318,475,2.688,551,1.937,552,3.359,559,2.338,579,3.53,583,3.025,588,3.025,590,2.786,601,2.786,604,2.6,616,2.786,617,3.359,619,3.025,620,3.915,621,3.359,622,3.359,623,3.915,624,3.915,625,4.019,626,3.751,627,4.845]],["component/176",[77,0.896]],["title/177-1",[88,33.523,165,26.819,178,23.345]],["name/177-1",[]],["text/177-1",[]],["component/177-1",[]],["title/177-2",[30,22.153,152,16.264]],["name/177-2",[]],["text/177-2",[]],["component/177-2",[]],["title/177-3",[14,6,19,15.413,220,13.332,383,12.221]],["name/177-3",[]],["text/177-3",[]],["component/177-3",[]],["title/177-4",[19,19.714,100,21.564,571,22.414]],["name/177-4",[]],["text/177-4",[]],["component/177-4",[]],["title/177-5",[48,21.792,571,26.049]],["name/177-5",[]],["text/177-5",[]],["component/177-5",[]],["title/177-6",[94,21.53,404,19.49,558,19.951,559,14.66,615,19.951]],["name/177-6",[]],["text/177-6",[]],["component/177-6",[]],["title/177-7",[15,19.49,168,23.519,212,18.642,353,22.798,615,19.951]],["name/177-7",[]],["text/177-7",[]],["component/177-7",[]],["title/177-8",[161,12.969,213,32.243,214,36.47,370,32.243]],["name/177-8",[]],["text/177-8",[]],["component/177-8",[]],["title/177",[47,10.766,131,14.118,165,23.535,178,20.486]],["name/177",[178,2.119]],["text/177",[1,2.361,8,0.493,10,0.961,12,1.915,13,0.798,14,1.377,15,1.026,19,2.092,27,1.134,30,2.022,36,1.072,37,2.251,45,1.38,47,2.004,48,2.568,51,1.166,56,1.52,58,2.883,62,1.134,66,0.923,73,4.662,76,1.38,77,1.372,80,2.331,88,1.38,92,1.865,97,0.923,99,1.775,100,1.947,117,1.38,131,0.662,152,1.8,156,1.239,158,1.38,161,2.127,164,0.76,167,1.513,174,3.672,178,0.961,182,1.969,184,2.187,187,1.552,190,0.785,191,1.915,196,1.026,200,1.077,203,0.856,208,1.38,218,2.532,220,1.656,228,1.441,234,2.337,245,1.915,248,1.38,255,1.281,256,1.513,258,1.989,262,0.856,294,0.812,304,1.077,316,1.134,330,1.38,382,1.104,383,1.411,394,0.812,417,1.865,437,1.026,446,1.104,463,1.166,475,1.281,480,1.201,489,1.38,491,1.38,510,2.022,511,1.077,512,2.361,536,1.441,545,1.6,550,1.969,551,0.923,559,1.989,562,2.434,571,2.883,574,1.441,575,1.441,577,2.092,578,1.6,587,1.327,588,2.434,619,1.441,625,3.822,628,1.865,629,3.15,630,1.865,631,1.865,632,1.865,633,2.91,634,1.865,635,1.865,636,1.6,637,1.865,638,2.556,639,1.865,640,1.865,641,1.865,642,1.441,643,3.508,644,1.327,645,1.865,646,1.865,647,2.702,648,1.865,649,1.865,650,1.865,651,1.327,652,3.15,653,1.865]],["component/177",[77,0.896]],["title/178-1",[161,14.779,184,18.45,332,13.624]],["name/178-1",[]],["text/178-1",[]],["component/178-1",[]],["title/178-2",[164,14.424,332,10.651,558,19.951,559,14.66,560,19.054]],["name/178-2",[]],["text/178-2",[]],["component/178-2",[]],["title/178-3",[48,16.455,78,13.718,172,24.167,571,19.67]],["name/178-3",[]],["text/178-3",[]],["component/178-3",[]],["title/178-4",[184,16.191,560,21.388,580,26.399,654,39.746]],["name/178-4",[]],["text/178-4",[]],["component/178-4",[]],["title/178",[94,19.412,245,19.412,404,17.573,559,13.218,560,17.18,615,17.989]],["name/178",[559,1.702]],["text/178",[1,1.7,8,0.461,14,1.272,23,1.79,27,1.79,36,1.552,43,2.701,47,1.236,48,2.818,49,1.955,56,1.251,67,2.095,77,0.988,78,2.171,94,3.396,97,1.457,99,1.659,100,1.402,122,2.388,123,1.55,144,2.022,152,1.944,164,1.199,172,1.79,174,1.743,182,1.841,184,2.275,187,1.319,203,1.351,218,1.772,219,2.82,220,1.729,233,2.179,234,1.281,247,1.79,258,1.219,262,2.093,266,2.634,268,1.659,304,3.224,328,2.179,332,0.886,387,2.022,400,1.895,404,3.462,417,2.701,423,2.179,441,0.935,463,1.841,503,1.486,504,2.132,510,2.35,512,1.7,550,1.841,551,1.457,558,3.147,559,2.981,569,1.743,571,2.764,579,1.841,580,3.03,583,2.275,586,2.095,587,2.095,594,1.955,615,3.147,621,2.526,651,2.095,655,4.562,656,2.944,657,2.275,658,2.526,659,2.944,660,2.944,661,2.275,662,2.275,663,2.944,664,2.275,665,1.841,666,2.944,667,2.275,668,2.275,669,2.275,670,2.944,671,2.275,672,2.944,673,2.275]],["component/178",[77,0.896]],["title/179-1",[30,26.441]],["name/179-1",[]],["text/179-1",[]],["component/179-1",[]],["title/179-2",[220,13.374,383,18.167]],["name/179-2",[]],["text/179-2",[]],["component/179-2",[]],["title/179-3",[330,46.502]],["name/179-3",[]],["text/179-3",[]],["component/179-3",[]],["title/179",[14,7.654,19,12.652,37,15.999,100,13.84,220,7.385,383,10.032]],["name/179",[14,0.493,37,0.936,220,0.432]],["text/179",[2,0.627,8,0.195,12,0.755,14,0.21,25,1.638,30,1.944,34,1.727,36,0.423,42,2.745,48,1.725,49,0.825,52,1.71,56,0.813,65,3.131,70,1.14,77,0.417,99,0.7,100,0.591,116,0.96,117,0.919,129,1.247,130,1.066,131,0.786,152,0.924,158,0.919,161,3.033,164,0.901,179,1.987,195,2.688,203,1.373,210,0.717,211,0.919,212,1.165,220,0.562,223,0.853,225,0.919,248,0.919,275,1.425,277,2.603,279,0.8,313,1.008,316,0.755,320,1.14,330,1.638,332,1.092,375,0.55,382,0.735,383,1.947,394,0.963,400,0.8,401,1.14,404,0.684,427,1.008,430,1.575,438,0.8,439,0.668,459,1.31,475,0.853,497,4.709,508,0.853,531,3.431,536,0.96,551,1.481,568,1.47,591,4.214,594,3.551,602,0.873,604,1.987,665,1.383,674,1.242,675,1.242,676,0.884,677,1.066,678,1.242,679,2.213,680,1.242,681,2.585,682,2.992,683,1.242,684,1.242,685,3.22,686,1.242,687,1.242,688,1.242,689,1.066,690,1.242,691,1.898,692,1.575,693,1.242,694,4.562,695,1.066,696,2.213,697,1.066,698,4.166,699,1.242,700,1.242,701,0.884,702,1.066,703,4.297,704,1.575,705,0.96,706,1.242,707,1.242,708,1.242,709,1.242,710,0.96,711,1.242,712,1.242,713,1.066,714,1.242,715,3.574,716,2.213,717,2.213,718,0.884,719,1.242,720,0.884,721,2.992,722,0.884,723,3.116,724,1.242,725,1.242,726,3.963,727,1.242,728,1.242,729,1.242,730,1.242,731,1.242,732,1.242,733,1.242,734,1.242,735,1.242,736,1.242,737,1.242,738,1.242,739,2.992,740,1.242,741,2.992,742,2.312,743,2.992,744,6.345,745,2.992,746,3.632,747,1.242,748,1.575,749,3.632,750,1.242,751,4.132,752,2.213,753,1.242,754,1.242,755,2.213,756,1.242,757,1.242,758,1.242,759,1.242,760,1.242,761,2.213,762,1.242,763,1.242,764,1.242,765,1.242,766,1.242,767,2.992,768,1.242,769,1.242,770,2.213,771,2.213,772,2.213,773,1.242,774,1.242,775,1.242,776,1.242,777,2.213,778,1.242,779,1.242,780,1.242,781,1.242,782,0.96,783,0.96,784,1.242]],["component/179",[77,0.896]],["title/180",[14,6.734,78,13.718,187,11.49,785,28.291]],["name/180",[14,0.473,187,0.807]],["text/180",[14,1.408,47,1.774,56,1.662,66,3.241,78,2.562,131,1.719,184,2.667,187,2.146,190,2.036,203,2.22,213,5.312,266,2.793,353,3.115,441,1.536,500,2.663,501,2.663,504,2.261,568,3.214,615,2.726,692,3.444,785,3.444,786,3.444,787,3.739,788,5.061,789,4.151,790,4.151,791,3.444,792,4.838,793,4.838,794,4.838,795,4.838,796,4.838,797,4.838,798,4.838,799,4.838,800,4.838,801,4.838,802,4.151]],["component/180",[77,0.896]],["title/181",[19,17.3,551,19.67,571,19.67,658,34.101]],["name/181",[571,2.034]],["text/181",[8,0.55,10,2.686,14,1.054,15,3.422,19,2.269,30,2.193,35,2.846,36,1.194,44,1.977,47,0.95,48,2.158,51,2.194,56,0.786,66,1.736,76,2.597,81,2.33,96,3.01,99,1.977,100,2.96,106,3.01,140,2.026,164,1.429,167,4.228,187,1.507,209,1.808,218,2.994,219,1.772,220,2.082,238,1.931,245,2.133,253,2.194,262,1.61,267,1.61,279,4.003,333,3.858,346,2.846,383,1.211,394,2.269,404,1.931,412,2.846,510,2.193,546,3.01,551,2.579,559,2.158,560,1.888,569,2.078,571,3.077,577,2.33,580,3.462,587,2.497,633,3.71,636,3.01,638,4.817,676,2.497,803,3.509,804,3.509,805,3.509,806,3.509,807,3.509,808,3.509,809,3.509,810,3.01,811,3.509,812,3.509,813,3.509,814,3.509]],["component/181",[77,0.896]],["title/182-1",[332,18.898]],["name/182-1",[]],["text/182-1",[]],["component/182-1",[]],["title/182-2",[815,32.382]],["name/182-2",[]],["text/182-2",[]],["component/182-2",[]],["title/182",[220,11.508,510,19.062,577,30.083]],["name/182",[14,0.288,219,0.859,220,0.432,579,1.063]],["text/182",[7,0.985,11,1.571,14,0.854,30,0.604,34,0.828,36,1.141,48,1.04,78,0.495,97,0.71,111,2.591,152,2.341,161,2.87,174,0.849,184,1.366,187,0.726,190,1.057,200,0.828,203,0.658,218,1.564,219,2.033,220,1.538,223,2.302,234,0.624,262,0.658,266,0.828,267,0.658,296,0.739,312,1.618,332,0.756,333,1.061,368,0.923,394,1.094,417,0.849,421,1.45,430,3.033,441,0.798,447,1.196,459,2.384,496,0.923,498,1.323,501,0.789,503,1.269,504,1.174,510,1.057,549,1.021,559,0.594,569,0.849,571,1.243,573,1.23,574,1.108,577,0.953,591,3.346,594,1.669,598,1.021,608,1.021,638,0.897,644,1.021,651,1.021,661,1.108,662,1.108,664,1.108,667,1.108,685,1.108,704,1.021,718,1.788,720,2.866,722,2.866,751,1.942,816,1.108,817,1.23,818,1.23,819,1.434,820,1.23,821,1.23,822,1.23,823,1.434,824,1.434,825,1.108,826,1.108,827,1.434,828,1.108,829,1.108,830,1.108,831,1.108,832,1.434,833,1.434,834,1.434,835,5.192,836,0.953,837,4.943,838,4.943,839,1.23,840,4.453,841,4.943,842,4.943,843,4.943,844,3.454,845,7.068,846,6.188,847,6.188,848,6.188,849,4.578,850,2.512,851,2.512,852,4.026,853,2.156,854,2.156,855,2.512,856,1.434,857,1.434,858,1.434,859,2.512,860,4.026,861,3.353,862,3.353,863,2.512,864,3.353,865,3.454,866,2.877,867,1.434,868,1.434,869,1.434,870,1.434,871,1.434,872,1.434,873,1.434,874,1.434]],["component/182",[77,0.896]],["title/183-1",[332,18.898]],["name/183-1",[]],["text/183-1",[]],["component/183-1",[]],["title/183-2",[815,32.382]],["name/183-2",[]],["text/183-2",[]],["component/183-2",[]],["title/183-3",[412,36.743,647,38.859,875,45.293]],["name/183-3",[]],["text/183-3",[]],["component/183-3",[]],["title/183",[14,6.734,187,11.49,220,10.098,510,16.728]],["name/183",[14,0.288,187,0.492,219,0.859,220,0.432]],["text/183",[14,1.153,15,1.62,36,1.002,48,1.219,56,0.659,78,1.574,97,1.457,131,1.046,152,0.91,161,2.705,184,1.199,187,1.615,200,2.634,203,2.563,218,2.444,219,3.792,220,2.106,226,1.659,254,3.701,262,1.351,266,1.7,312,2.937,332,0.886,368,1.895,370,2.388,383,1.016,394,2.738,421,1.7,430,2.402,441,0.935,501,1.62,503,2.303,504,2.132,510,1.239,551,1.457,559,1.889,569,1.743,575,2.275,591,1.955,598,2.095,638,1.841,651,2.095,661,2.275,662,2.275,664,2.275,704,2.095,720,3.247,722,3.247,786,2.095,816,2.275,818,2.526,820,2.526,835,3.914,836,1.955,837,2.526,838,2.526,839,2.526,840,2.275,841,2.526,842,2.526,843,2.526,844,3.914,846,3.914,847,3.914,848,3.914,853,2.526,854,2.526,866,2.526,876,2.944,877,2.944,878,2.944,879,2.944,880,2.944,881,2.944,882,4.562,883,2.944,884,2.944,885,2.944,886,2.944,887,4.562,888,2.944,889,4.562,890,2.944,891,2.944,892,2.944]],["component/183",[77,0.896]],["title/184-1",[78,15.632,590,32.238,893,30.083]],["name/184-1",[]],["text/184-1",[]],["component/184-1",[]],["title/184",[48,14.66,56,7.929,164,14.424,184,14.424,258,14.66]],["name/184",[78,0.729,164,0.861,581,1.321]],["text/184",[10,1.374,11,1.667,14,1.17,27,2.566,33,1.186,34,1.539,36,1.202,47,0.416,48,0.635,56,1.07,58,0.76,73,1.771,77,0.894,78,1.649,81,1.02,110,0.988,120,1.716,126,1.136,131,0.545,152,1.929,161,2.86,164,1.086,165,1.579,174,1.579,178,0.791,182,0.96,184,1.439,186,1.245,187,1.515,190,1.487,198,1.136,203,0.704,205,1.136,207,0.988,212,1.403,218,1.036,219,2.841,220,1.514,221,0.96,234,0.668,238,0.845,253,0.96,255,1.054,258,1.104,262,1.223,267,0.704,268,0.865,270,1.831,275,0.988,294,0.668,296,1.374,303,1.973,304,0.886,316,0.933,332,1.063,364,1.054,383,1.22,421,0.886,430,0.808,440,1.245,441,0.846,447,1.269,448,1.245,480,0.988,500,0.845,501,1.467,502,0.988,503,1.784,504,1.651,510,0.646,511,0.886,518,0.933,549,1.898,557,1.186,558,1.991,559,2.467,560,0.826,579,0.96,589,1.317,590,1.093,602,1.079,608,1.093,615,2.692,616,1.093,625,2.515,626,3.174,627,2.287,633,1.093,669,2.06,671,2.731,673,2.06,676,1.093,710,2.06,783,2.06,791,1.093,810,1.317,825,2.731,826,2.731,828,2.731,829,2.731,830,1.186,831,1.186,836,1.771,893,1.02,894,2.287,895,1.535,896,1.535,897,1.186,898,1.317,899,2.287,900,2.287,901,1.317,902,1.317,903,1.093,904,1.317,905,2.287,906,1.898,907,3.534,908,2.287,909,2.06,910,4.099,911,4.099,912,3.534,913,1.535,914,2.666,915,1.317,916,1.317,917,1.535,918,1.535,919,1.535,920,1.535,921,2.06,922,1.535,923,1.535,924,1.317,925,1.317,926,2.287,927,3.032,928,1.317,929,2.287,930,1.317,931,1.186,932,1.317,933,1.317,934,1.317,935,2.287,936,1.317,937,1.317,938,1.317,939,3.621,940,1.317,941,1.317,942,1.317,943,1.317,944,1.317,945,1.317,946,1.317,947,1.317,948,1.317,949,1.317,950,2.287,951,1.317,952,1.186,953,1.317,954,1.317,955,1.317,956,1.317,957,1.317,958,1.317,959,1.317,960,1.317,961,1.317]],["component/184",[77,0.896]],["title/185-1",[78,15.632,601,32.238,893,30.083]],["name/185-1",[]],["text/185-1",[]],["component/185-1",[]],["title/185-2",[78,15.632,893,30.083,962,38.859]],["name/185-2",[]],["text/185-2",[]],["component/185-2",[]],["title/185",[48,14.66,56,7.929,184,14.424,258,14.66,963,35.41]],["name/185",[78,0.587,164,0.693,581,1.063,964,1.7]],["text/185",[8,0.097,10,1.075,11,1.304,14,1.146,23,0.707,27,2.104,33,0.899,34,1.205,36,0.965,41,1.693,44,0.348,47,0.315,56,0.555,58,0.816,71,1.067,73,1.647,78,1.53,81,0.772,120,1.343,126,0.457,131,0.413,135,0.529,152,1.432,161,2.889,164,0.474,165,0.689,174,1.469,184,1.01,186,0.943,187,1.535,190,1.456,191,0.707,198,0.861,203,0.283,205,0.861,206,0.457,207,0.749,209,0.599,212,1.098,218,0.452,219,1.885,220,1.072,221,0.727,223,0.799,227,1.033,234,0.506,238,0.64,244,0.566,247,0.375,253,1.304,255,0.799,258,0.255,262,0.957,267,1.588,268,0.655,270,1.703,274,0.457,275,1.062,277,0.93,287,0.457,295,0.477,296,0.599,303,1.544,304,0.671,312,0.749,316,0.707,332,0.951,350,0.348,364,0.799,368,1.343,383,0.979,394,0.269,411,2.604,421,0.671,425,0.529,430,1.306,435,0.566,440,0.943,441,0.787,447,0.993,448,0.943,480,1.062,496,1.062,498,1.098,500,0.908,501,1.148,502,1.343,503,1.433,504,1.745,510,0.694,511,0.952,512,0.356,518,1.003,531,0.375,535,0.477,549,2.02,557,0.899,558,1.599,559,1.996,560,0.626,579,0.386,601,0.439,602,4.336,608,0.828,615,2.245,616,0.439,625,1.174,633,0.828,638,0.386,643,0.529,657,0.477,667,0.899,668,0.477,669,1.917,671,2.193,673,1.612,676,0.828,692,0.439,701,1.174,702,0.529,710,1.612,718,0.828,751,0.899,783,1.612,786,1.485,787,0.899,788,0.899,789,0.998,790,0.998,791,0.828,802,4.425,822,1.415,825,0.899,826,0.899,828,5.609,829,2.193,830,0.899,831,0.477,836,1.647,840,1.275,893,1.096,894,0.998,897,0.899,898,0.998,899,1.79,900,1.79,901,0.529,902,0.998,903,0.828,904,0.998,905,1.79,906,1.485,908,2.434,909,1.917,910,1.79,911,1.79,915,0.998,916,0.998,921,1.917,924,0.998,925,0.998,926,1.79,927,2.434,928,0.998,929,1.79,930,0.998,931,0.899,932,0.998,933,0.998,934,0.998,935,1.79,936,0.998,937,0.998,938,0.998,939,2.969,940,0.998,941,0.998,942,0.998,943,0.998,944,0.998,945,0.998,946,0.998,947,0.998,948,0.998,949,0.998,950,1.79,951,0.998,952,0.899,953,1.415,954,0.998,955,0.998,956,0.998,957,0.998,958,0.998,959,1.415,960,0.998,961,0.529,962,0.529,965,0.617,966,0.617,967,0.617,968,0.617,969,2.128,970,0.617,971,0.617,972,1.65,973,1.415,974,0.617,975,0.617,976,1.163,977,0.617,978,0.617,979,1.163,980,1.163,981,1.163,982,1.163,983,1.163,984,1.163,985,0.617,986,0.617,987,0.617,988,1.163,989,0.617,990,2.086,991,0.617,992,0.617,993,0.617,994,0.617,995,0.617,996,0.617,997,2.48,998,0.617,999,1.163,1000,0.617,1001,1.163,1002,1.163,1003,0.617,1004,0.617,1005,0.617,1006,0.617,1007,0.617,1008,0.617,1009,0.617,1010,2.837,1011,1.163,1012,1.163,1013,1.163,1014,3.985,1015,1.163,1016,1.163,1017,0.998,1018,1.163,1019,1.163,1020,0.617,1021,0.617,1022,0.617,1023,0.617,1024,0.617,1025,0.617,1026,0.617,1027,0.617,1028,0.617,1029,0.617,1030,0.617,1031,2.086,1032,0.617,1033,0.617,1034,0.617,1035,1.65,1036,0.617,1037,0.617,1038,0.617,1039,1.163,1040,1.163,1041,0.617,1042,0.617,1043,2.837,1044,1.163,1045,0.617,1046,0.617,1047,0.617,1048,2.837,1049,0.617,1050,1.163,1051,2.837,1052,2.837,1053,0.617,1054,1.65,1055,0.617,1056,0.617,1057,0.617,1058,0.617,1059,0.617,1060,0.617,1061,0.617,1062,1.163,1063,0.617,1064,0.617,1065,0.617,1066,0.617,1067,0.617,1068,0.617]],["component/185",[77,0.896]],["title/186",[]],["name/186",[581,1.745,1069,2.395]],["text/186",[110,4.848,350,4.243,1069,6.461]],["component/186",[77,0.896]],["title/187-1",[0,46.502]],["name/187-1",[]],["text/187-1",[]],["component/187-1",[]],["title/187-2",[78,18.167,533,40.678]],["name/187-2",[]],["text/187-2",[]],["component/187-2",[]],["title/187-3",[47,10.766,56,8.9,332,11.956,441,12.618]],["name/187-3",[]],["text/187-3",[]],["component/187-3",[]],["title/187-4",[332,15.833,496,33.889]],["name/187-4",[]],["text/187-4",[]],["component/187-4",[]],["title/187-5",[8,7.096,372,21.166,497,31.102]],["name/187-5",[]],["text/187-5",[]],["component/187-5",[]],["title/187-6",[296,18.251,365,16.547,375,15.681,498,18.642,499,26.209]],["name/187-6",[]],["text/187-6",[]],["component/187-6",[]],["title/187",[7,36.146,479,32.005]],["name/187",[9,2.075]],["text/187",[8,1.148,13,1.317,14,1.091,36,1.606,47,1.881,51,1.924,56,1.286,57,2.641,66,1.523,97,1.523,129,1.734,131,2.467,152,0.951,156,2.044,161,1.54,187,1.365,196,2.598,209,1.586,210,1.777,220,1.199,221,1.924,226,1.734,227,1.523,234,3.023,237,2.191,238,1.694,262,2.166,267,1.412,268,1.734,277,1.734,294,1.34,332,1.937,365,3.009,369,2.191,372,2.206,373,3.36,374,2.485,375,3.076,383,1.062,394,1.34,418,1.694,439,2.54,441,2.044,446,1.822,447,1.465,463,1.924,479,1.871,480,1.982,500,1.694,501,1.694,502,1.982,503,1.554,504,1.438,505,2.278,506,3.494,507,2.278,508,2.114,509,2.114,510,1.295,511,1.777,512,1.777,513,2.278,514,4.767,515,2.871,516,2.278,517,3.494,518,1.871,519,2.278,520,2.114,521,3.494,522,3.494,523,2.278,524,2.278,525,2.278,526,2.278,527,2.278,528,2.114,529,2.278,530,2.114,531,1.871]],["component/187",[418,1.47]],["title/188",[125,38.96,479,32.005]],["name/188",[9,2.075]],["text/188",[350,4.34]],["component/188",[418,1.47]],["title/189",[479,38.201]],["name/189",[9,2.075]],["text/189",[350,4.34]],["component/189",[418,1.47]],["title/190",[14,6.734,56,8.9,294,17.3,447,18.924]],["name/190",[14,0.288,294,0.74,447,0.81,815,0.876]],["text/190",[14,1.047,25,2.57,36,1.182,56,1.384,58,1.719,63,2.472,72,2.307,77,1.165,78,1.199,123,1.828,152,1.073,158,2.57,161,2.93,187,1.495,190,1.462,191,2.112,192,2.817,200,2.986,202,2.57,203,1.593,207,2.236,209,1.79,223,3.552,234,2.251,247,2.112,275,4.942,294,2.69,332,1.045,364,2.385,415,2.472,427,2.817,480,3.33,498,1.828,540,4.437,550,2.171,586,2.472,665,3.233,692,2.472,713,5.302,815,1.79,821,5.875,897,2.684,1070,3.997,1071,2.684,1072,2.684,1073,5.302,1074,3.473,1075,3.473,1076,3.473,1077,3.473,1078,3.473,1079,3.473,1080,3.473,1081,5.172,1082,3.473,1083,3.473,1084,5.172,1085,3.473,1086,3.473,1087,3.473,1088,3.473,1089,3.473,1090,3.473,1091,2.979,1092,3.473,1093,3.473]],["component/190",[418,1.47]],["title/191",[14,4.925,21,17.212,56,6.509,190,12.233,220,7.385,383,10.032,441,9.228]],["name/191",[14,0.241,220,0.361,439,0.765,441,0.452,815,0.733]],["text/191",[2,0.81,12,0.975,14,0.619,21,0.95,28,1.24,29,2.14,30,2.26,36,2.167,37,1.524,54,1.472,56,0.818,58,0.794,65,1.003,66,1.371,72,1.065,76,1.187,77,0.538,89,2.059,100,1.319,123,2.29,131,1.298,140,1.599,152,1.88,156,1.065,161,3.086,181,2.541,190,1.538,195,1.187,196,0.883,218,1.076,220,1.546,226,0.904,233,1.187,234,0.698,266,1.599,267,1.996,270,1.101,279,1.783,314,1.187,332,1.616,356,1.065,364,1.902,383,1.854,394,0.698,415,1.971,416,1.301,421,0.926,430,1.458,436,3.458,437,1.524,439,1.49,441,2.022,442,1.472,446,2.164,452,2.51,454,1.472,492,1.301,498,1.924,503,1.398,504,0.75,509,1.101,510,1.166,511,1.599,518,0.975,528,2.51,556,2.14,570,1.376,598,1.142,600,1.376,622,1.376,665,1.003,668,1.24,681,1.971,694,2.14,704,1.142,726,1.376,748,2.601,785,2.601,815,0.827,1070,1.24,1071,1.24,1072,1.24,1073,4.94,1091,1.376,1094,1.376,1095,2.77,1096,2.77,1097,2.376,1098,1.604,1099,1.604,1100,1.604,1101,2.77,1102,1.604,1103,3.655,1104,2.77,1105,2.77,1106,1.604,1107,1.604,1108,1.604,1109,2.77,1110,2.376,1111,2.376,1112,2.77,1113,1.604,1114,2.77,1115,1.604,1116,1.604,1117,1.604,1118,1.604,1119,1.604,1120,1.604,1121,1.604,1122,1.604,1123,1.376,1124,1.604,1125,1.604,1126,1.604,1127,1.376,1128,1.604,1129,1.604,1130,1.604,1131,1.604,1132,1.604,1133,1.604,1134,2.824,1135,1.376,1136,1.604,1137,1.376,1138,2.77,1139,1.376,1140,1.376,1141,1.604,1142,3.732,1143,1.376,1144,1.604,1145,1.604,1146,1.604,1147,1.604]],["component/191",[418,1.47]],["title/192",[14,6.734,78,13.718,187,11.49,206,29.418]],["name/192",[14,0.358,187,0.611,815,1.089]],["text/192",[10,2.476,14,1.405,36,1.635,41,3.897,58,2.377,72,3.191,77,1.612,78,1.658,92,2.845,123,2.529,140,2.773,161,2.413,184,2.655,187,1.884,227,3.225,247,2.921,264,4.408,272,3.897,368,3.093,479,4.497,504,3.456,515,2.921,665,3.003,782,3.713,786,5.264,787,5.036,788,3.713,815,2.476,969,4.122,1017,4.122,1070,3.713,1071,3.713,1072,3.713,1148,6.517,1149,4.804,1150,4.804,1151,4.804]],["component/192",[418,1.47]],["title/193",[14,8.891,234,15.413,294,15.413,447,16.859]],["name/193",[14,0.288,47,0.461,294,0.74,447,0.81]],["text/193",[8,0.722,13,1.972,14,1.384,27,3.851,48,1.908,56,1.032,58,2.28,60,3.953,131,1.637,152,1.424,161,2.362,184,2.58,187,1.831,191,2.802,203,2.114,218,1.79,220,1.171,253,3.96,260,4.228,266,2.66,284,3.738,287,3.41,294,3.392,326,4.228,365,2.153,372,2.153,374,2.426,375,2.041,432,3.164,436,2.967,447,3.016,475,3.164,494,3.41,952,3.561,973,3.953,1152,3.06,1153,4.608,1154,4.608,1155,3.953,1156,4.608,1157,4.608,1158,4.608,1159,4.608,1160,4.608,1161,3.953,1162,3.953]],["component/193",[418,1.47]],["title/194-1",[62,38.201]],["name/194-1",[]],["text/194-1",[]],["component/194-1",[]],["title/194",[152,12.28,437,21.877,438,25.589,452,27.293]],["name/194",[47,0.572,437,1.163,438,1.361]],["text/194",[2,0.925,8,0.158,14,0.427,30,0.424,37,0.554,45,2.297,56,0.41,65,3.609,131,0.358,144,0.692,152,0.779,161,3.13,174,0.596,200,1.058,209,2.08,212,0.53,218,0.391,220,0.466,267,0.841,298,0.745,312,2.32,365,0.471,372,0.471,374,0.53,375,0.446,383,0.632,387,0.692,416,0.817,430,4.156,437,1.387,438,2.32,452,1.258,459,0.596,482,0.745,491,0.745,531,3.51,551,0.498,586,0.717,591,2.061,594,2.061,604,1.217,618,0.778,626,1.217,638,0.63,642,0.778,681,0.717,685,2.398,689,0.864,691,0.864,694,1.416,695,0.864,697,0.864,701,4.377,703,4.952,715,4.952,718,2.873,720,0.717,722,0.717,723,0.864,791,0.717,836,0.669,865,0.864,1097,0.864,1152,0.669,1163,1.007,1164,1.007,1165,1.007,1166,1.007,1167,1.007,1168,1.007,1169,1.007,1170,7.838,1171,6.859,1172,7.838,1173,7.838,1174,7.838,1175,1.007,1176,1.007,1177,5.772,1178,1.007,1179,1.007,1180,1.007,1181,2.52,1182,1.007,1183,2.52,1184,1.007,1185,1.832,1186,5.315,1187,1.832,1188,1.007,1189,1.007,1190,1.832,1191,1.007,1192,1.007,1193,1.007,1194,1.007,1195,1.007,1196,1.007,1197,1.007,1198,1.007,1199,1.007,1200,1.007,1201,1.007,1202,1.007,1203,1.007,1204,1.007,1205,1.832,1206,1.007,1207,1.007,1208,1.007,1209,1.007,1210,1.007,1211,1.007,1212,1.007,1213,1.007,1214,1.832,1215,1.007,1216,1.007,1217,1.007,1218,1.007,1219,1.007,1220,1.007,1221,1.007]],["component/194",[418,1.47]],["title/195-1",[62,38.201]],["name/195-1",[]],["text/195-1",[]],["component/195-1",[]],["title/195-2",[227,26.049,498,27.712]],["name/195-2",[]],["text/195-2",[]],["component/195-2",[]],["title/195-3",[227,26.049,705,40.678]],["name/195-3",[]],["text/195-3",[]],["component/195-3",[]],["title/195-4",[227,26.049,1222,45.161]],["name/195-4",[]],["text/195-4",[]],["component/195-4",[]],["title/195-5",[227,26.049,430,27.712]],["name/195-5",[]],["text/195-5",[]],["component/195-5",[]],["title/195-6",[247,32.005,277,29.658]],["name/195-6",[]],["text/195-6",[]],["component/195-6",[]],["title/195-7",[394,27.346]],["name/195-7",[]],["text/195-7",[]],["component/195-7",[]],["title/195",[14,6,190,14.903,220,8.997,383,12.221,441,11.241]],["name/195",[14,0.241,47,0.385,220,0.361,439,0.765,441,0.452]],["text/195",[2,0.749,12,1.574,14,0.793,21,0.879,30,1.736,36,0.881,56,1.238,66,0.735,67,1.057,100,1.233,105,1.147,119,3.346,129,2.324,131,0.527,140,2.967,152,1.9,161,2.659,172,0.903,190,1.09,198,1.099,202,2.549,209,0.765,218,0.577,220,1.683,227,2.544,229,1.147,238,0.817,247,1.574,250,1.362,253,1.619,258,0.615,267,3.129,279,0.956,282,1.204,365,0.694,367,1.362,372,0.694,374,0.782,375,0.657,378,1.204,379,1.362,383,2.518,387,1.019,389,3.16,415,1.843,426,1.204,430,3.086,432,1.019,436,1.667,437,3.753,438,3.56,439,1.393,441,1.093,443,1.362,446,1.533,452,1.778,459,1.533,482,1.099,493,1.204,498,3.766,500,0.817,515,3.564,530,1.019,534,1.274,535,1.147,544,1.147,568,1.72,626,4.084,642,1.147,644,1.843,657,1.147,681,1.843,701,2.451,705,2.001,748,3.935,785,1.057,816,1.147,817,1.274,903,1.057,906,2.936,909,2.661,921,2.661,931,1.147,1111,5.029,1123,2.222,1127,2.222,1134,2.661,1135,2.222,1137,1.274,1139,1.274,1140,2.222,1142,1.274,1143,2.222,1152,0.986,1155,1.274,1222,1.274,1223,2.589,1224,2.589,1225,2.589,1226,1.484,1227,2.589,1228,2.589,1229,2.589,1230,2.589,1231,1.484,1232,1.484,1233,2.589,1234,1.484,1235,2.589,1236,1.484,1237,1.484,1238,1.484,1239,2.589,1240,2.589,1241,2.589,1242,1.484,1243,1.484,1244,1.484,1245,1.484,1246,1.484,1247,2.589,1248,2.589,1249,1.484,1250,1.484,1251,1.484,1252,1.484,1253,1.484,1254,1.484,1255,2.589,1256,1.484,1257,1.484,1258,1.484,1259,1.484,1260,1.484,1261,1.484,1262,1.484,1263,1.484,1264,1.484,1265,1.484,1266,1.484,1267,1.484,1268,1.484,1269,1.484,1270,1.484,1271,1.484,1272,1.484,1273,1.484,1274,1.484,1275,1.484,1276,1.484,1277,1.484,1278,1.484,1279,1.484,1280,1.484,1281,1.484,1282,1.484]],["component/195",[418,1.47]],["title/196",[14,7.674,220,11.508,383,15.632]],["name/196",[14,0.288,47,0.461,220,0.432,439,0.915]],["text/196",[12,2.9,14,1.445,19,2.076,30,2.008,44,2.688,47,1.292,56,1.068,100,2.271,131,1.694,144,3.276,161,2.405,190,2.008,210,2.754,220,2.256,267,2.189,365,2.229,372,2.229,374,2.511,375,2.112,383,2.854,432,3.276,436,4.176,437,2.626,439,3.965,441,2.059,515,2.9,569,2.825,619,3.686,626,3.168,1134,3.686,1152,3.168,1283,4.77,1284,4.77]],["component/196",[418,1.47]],["title/197-1",[168,23.519,212,18.642,281,27.365,288,28.726,353,22.798]],["name/197-1",[]],["text/197-1",[]],["component/197-1",[]],["title/197-2",[14,7.674,152,13.994,187,13.094]],["name/197-2",[]],["text/197-2",[]],["component/197-2",[]],["title/197-3",[10,32.382]],["name/197-3",[]],["text/197-3",[]],["component/197-3",[]],["title/197-4",[220,15.962]],["name/197-4",[]],["text/197-4",[]],["component/197-4",[]],["title/197",[8,5.002,14,8.226,23,19.412,187,9.23,1285,31.927]],["name/197",[14,0.358,47,0.572,187,0.611]],["text/197",[1,1.286,2,1.124,8,0.572,14,1.189,15,1.226,21,2.748,23,1.354,34,2.108,44,1.255,47,0.989,48,0.922,49,1.479,52,1.721,56,0.818,63,1.585,65,1.392,73,1.479,78,0.769,89,3.953,92,2.162,95,1.721,99,1.255,105,2.822,123,1.172,131,1.648,139,1.721,140,1.286,150,1.911,152,1.966,161,1.751,165,1.319,168,1.479,179,1.479,184,1.487,187,1.713,190,0.937,191,2.22,192,1.807,196,1.226,199,3.35,200,2.679,201,2.043,202,2.702,203,2.129,205,1.648,206,2.702,207,1.434,208,1.648,209,1.148,210,2.108,211,3.973,212,2.443,218,0.865,220,0.566,225,1.648,228,1.721,233,1.648,241,2.043,245,1.354,255,3.186,256,1.807,257,2.043,258,0.922,262,1.022,266,1.286,267,2.129,268,2.615,269,3.82,270,1.529,271,4.258,272,3.764,273,2.043,274,1.648,275,1.434,276,4.258,277,1.255,279,1.434,280,2.043,281,4.148,282,1.807,283,2.043,284,1.807,285,2.043,286,2.043,287,1.648,288,1.807,289,3.35,290,2.043,291,2.043,292,2.043,293,2.043,294,1.589,295,1.721,296,1.148,298,1.648,299,3.133,300,2.043,301,2.043,302,2.043,303,2.702,304,1.286,305,4.925,306,2.043,307,3.35,308,2.043,309,2.043,310,4.258,311,2.043,312,1.434,313,2.962,314,1.648,316,1.354,317,2.043,318,2.043,319,2.043,353,1.434,358,2.043,360,2.043,365,1.041,372,1.041,374,1.172,375,0.986,432,1.529,504,1.041,544,1.721,571,1.102,585,3.133,1152,1.479,1161,1.911,1162,1.911,1286,2.227,1287,2.227,1288,2.227,1289,2.227,1290,2.227,1291,2.227]],["component/197",[418,1.47]],["title/198",[110,33.889,479,32.005]],["name/198",[9,2.075]],["text/198",[350,4.34]],["component/198",[418,1.47]],["title/199-1",[0,46.502]],["name/199-1",[]],["text/199-1",[]],["component/199-1",[]],["title/199-2",[78,18.167,533,40.678]],["name/199-2",[]],["text/199-2",[]],["component/199-2",[]],["title/199-3",[47,10.766,56,8.9,332,11.956,441,12.618]],["name/199-3",[]],["text/199-3",[]],["component/199-3",[]],["title/199-4",[332,15.833,496,33.889]],["name/199-4",[]],["text/199-4",[]],["component/199-4",[]],["title/199-5",[8,7.096,372,21.166,497,31.102]],["name/199-5",[]],["text/199-5",[]],["component/199-5",[]],["title/199-6",[296,18.251,365,16.547,375,15.681,498,18.642,499,26.209]],["name/199-6",[]],["text/199-6",[]],["component/199-6",[]],["title/199",[7,36.146,479,32.005]],["name/199",[9,2.075]],["text/199",[8,1.148,13,1.317,14,1.091,36,1.606,47,1.881,51,1.924,56,1.286,57,2.641,66,1.523,97,1.523,129,1.734,131,2.467,152,0.951,156,2.044,161,1.54,187,1.365,196,2.598,209,1.586,210,1.777,220,1.199,221,1.924,226,1.734,227,1.523,234,3.023,237,2.191,238,1.694,262,2.166,267,1.412,268,1.734,277,1.734,294,1.34,332,1.937,365,3.009,369,2.191,372,2.206,373,3.36,374,2.485,375,3.076,383,1.062,394,1.34,418,1.694,439,2.54,441,2.044,446,1.822,447,1.465,463,1.924,479,1.871,480,1.982,500,1.694,501,1.694,502,1.982,503,1.554,504,1.438,505,2.278,506,3.494,507,2.278,508,2.114,509,2.114,510,1.295,511,1.777,512,1.777,513,2.278,514,4.767,515,2.871,516,2.278,517,3.494,518,1.871,519,2.278,520,2.114,521,3.494,522,3.494,523,2.278,524,2.278,525,2.278,526,2.278,527,2.278,528,2.114,529,2.278,530,2.114,531,1.871]],["component/199",[418,1.47]],["title/200",[125,38.96,479,32.005]],["name/200",[9,2.075]],["text/200",[350,4.34]],["component/200",[418,1.47]],["title/201",[479,38.201]],["name/201",[9,2.075]],["text/201",[350,4.34]],["component/201",[418,1.47]],["title/202",[14,6.734,56,8.9,294,17.3,447,18.924]],["name/202",[14,0.288,294,0.74,447,0.81,815,0.876]],["text/202",[14,1.047,25,2.57,36,1.182,56,1.384,58,1.719,63,2.472,72,2.307,77,1.165,78,1.199,123,1.828,152,1.073,158,2.57,161,2.93,187,1.495,190,1.462,191,2.112,192,2.817,200,2.986,202,2.57,203,1.593,207,2.236,209,1.79,223,3.552,234,2.251,247,2.112,275,4.942,294,2.69,332,1.045,364,2.385,415,2.472,427,2.817,480,3.33,498,1.828,540,4.437,550,2.171,586,2.472,665,3.233,692,2.472,713,5.302,815,1.79,821,5.875,897,2.684,1070,3.997,1071,2.684,1072,2.684,1073,5.302,1074,3.473,1075,3.473,1076,3.473,1077,3.473,1078,3.473,1079,3.473,1080,3.473,1081,5.172,1082,3.473,1083,3.473,1084,5.172,1085,3.473,1086,3.473,1087,3.473,1088,3.473,1089,3.473,1090,3.473,1091,2.979,1092,3.473,1093,3.473]],["component/202",[418,1.47]],["title/203",[14,4.925,21,17.212,56,6.509,190,12.233,220,7.385,383,10.032,441,9.228]],["name/203",[14,0.241,220,0.361,439,0.765,441,0.452,815,0.733]],["text/203",[2,0.81,12,0.975,14,0.619,21,0.95,28,1.24,29,2.14,30,2.26,36,2.167,37,1.524,54,1.472,56,0.818,58,0.794,65,1.003,66,1.371,72,1.065,76,1.187,77,0.538,89,2.059,100,1.319,123,2.29,131,1.298,140,1.599,152,1.88,156,1.065,161,3.086,181,2.541,190,1.538,195,1.187,196,0.883,218,1.076,220,1.546,226,0.904,233,1.187,234,0.698,266,1.599,267,1.996,270,1.101,279,1.783,314,1.187,332,1.616,356,1.065,364,1.902,383,1.854,394,0.698,415,1.971,416,1.301,421,0.926,430,1.458,436,3.458,437,1.524,439,1.49,441,2.022,442,1.472,446,2.164,452,2.51,454,1.472,492,1.301,498,1.924,503,1.398,504,0.75,509,1.101,510,1.166,511,1.599,518,0.975,528,2.51,556,2.14,570,1.376,598,1.142,600,1.376,622,1.376,665,1.003,668,1.24,681,1.971,694,2.14,704,1.142,726,1.376,748,2.601,785,2.601,815,0.827,1070,1.24,1071,1.24,1072,1.24,1073,4.94,1091,1.376,1094,1.376,1095,2.77,1096,2.77,1097,2.376,1098,1.604,1099,1.604,1100,1.604,1101,2.77,1102,1.604,1103,3.655,1104,2.77,1105,2.77,1106,1.604,1107,1.604,1108,1.604,1109,2.77,1110,2.376,1111,2.376,1112,2.77,1113,1.604,1114,2.77,1115,1.604,1116,1.604,1117,1.604,1118,1.604,1119,1.604,1120,1.604,1121,1.604,1122,1.604,1123,1.376,1124,1.604,1125,1.604,1126,1.604,1127,1.376,1128,1.604,1129,1.604,1130,1.604,1131,1.604,1132,1.604,1133,1.604,1134,2.824,1135,1.376,1136,1.604,1137,1.376,1138,2.77,1139,1.376,1140,1.376,1141,1.604,1142,3.732,1143,1.376,1144,1.604,1145,1.604,1146,1.604,1147,1.604]],["component/203",[418,1.47]],["title/204",[14,6.734,78,13.718,187,11.49,206,29.418]],["name/204",[14,0.358,187,0.611,815,1.089]],["text/204",[10,2.476,14,1.405,36,1.635,41,3.897,58,2.377,72,3.191,77,1.612,78,1.658,92,2.845,123,2.529,140,2.773,161,2.413,184,2.655,187,1.884,227,3.225,247,2.921,264,4.408,272,3.897,368,3.093,479,4.497,504,3.456,515,2.921,665,3.003,782,3.713,786,5.264,787,5.036,788,3.713,815,2.476,969,4.122,1017,4.122,1070,3.713,1071,3.713,1072,3.713,1148,6.517,1149,4.804,1150,4.804,1151,4.804]],["component/204",[418,1.47]],["title/205",[14,8.891,234,15.413,294,15.413,447,16.859]],["name/205",[14,0.288,47,0.461,294,0.74,447,0.81]],["text/205",[8,0.722,13,1.972,14,1.384,27,3.851,48,1.908,56,1.032,58,2.28,60,3.953,131,1.637,152,1.424,161,2.362,184,2.58,187,1.831,191,2.802,203,2.114,218,1.79,220,1.171,253,3.96,260,4.228,266,2.66,284,3.738,287,3.41,294,3.392,326,4.228,365,2.153,372,2.153,374,2.426,375,2.041,432,3.164,436,2.967,447,3.016,475,3.164,494,3.41,952,3.561,973,3.953,1152,3.06,1153,4.608,1154,4.608,1155,3.953,1156,4.608,1157,4.608,1158,4.608,1159,4.608,1160,4.608,1161,3.953,1162,3.953]],["component/205",[418,1.47]],["title/206-1",[62,38.201]],["name/206-1",[]],["text/206-1",[]],["component/206-1",[]],["title/206",[152,12.28,437,21.877,438,25.589,452,27.293]],["name/206",[47,0.572,437,1.163,438,1.361]],["text/206",[2,0.925,8,0.158,14,0.427,30,0.424,37,0.554,45,2.297,56,0.41,65,3.609,131,0.358,144,0.692,152,0.779,161,3.13,174,0.596,200,1.058,209,2.08,212,0.53,218,0.391,220,0.466,267,0.841,298,0.745,312,2.32,365,0.471,372,0.471,374,0.53,375,0.446,383,0.632,387,0.692,416,0.817,430,4.156,437,1.387,438,2.32,452,1.258,459,0.596,482,0.745,491,0.745,531,3.51,551,0.498,586,0.717,591,2.061,594,2.061,604,1.217,618,0.778,626,1.217,638,0.63,642,0.778,681,0.717,685,2.398,689,0.864,691,0.864,694,1.416,695,0.864,697,0.864,701,4.377,703,4.952,715,4.952,718,2.873,720,0.717,722,0.717,723,0.864,791,0.717,836,0.669,865,0.864,1097,0.864,1152,0.669,1163,1.007,1164,1.007,1165,1.007,1166,1.007,1167,1.007,1168,1.007,1169,1.007,1170,7.838,1171,6.859,1172,7.838,1173,7.838,1174,7.838,1175,1.007,1176,1.007,1177,5.772,1178,1.007,1179,1.007,1180,1.007,1181,2.52,1182,1.007,1183,2.52,1184,1.007,1185,1.832,1186,5.315,1187,1.832,1188,1.007,1189,1.007,1190,1.832,1191,1.007,1192,1.007,1193,1.007,1194,1.007,1195,1.007,1196,1.007,1197,1.007,1198,1.007,1199,1.007,1200,1.007,1201,1.007,1202,1.007,1203,1.007,1204,1.007,1205,1.832,1206,1.007,1207,1.007,1208,1.007,1209,1.007,1210,1.007,1211,1.007,1212,1.007,1213,1.007,1214,1.832,1215,1.007,1216,1.007,1217,1.007,1218,1.007,1219,1.007,1220,1.007,1221,1.007]],["component/206",[418,1.47]],["title/207-1",[62,38.201]],["name/207-1",[]],["text/207-1",[]],["component/207-1",[]],["title/207-2",[227,26.049,498,27.712]],["name/207-2",[]],["text/207-2",[]],["component/207-2",[]],["title/207-3",[227,26.049,705,40.678]],["name/207-3",[]],["text/207-3",[]],["component/207-3",[]],["title/207-4",[227,26.049,1222,45.161]],["name/207-4",[]],["text/207-4",[]],["component/207-4",[]],["title/207-5",[227,26.049,430,27.712]],["name/207-5",[]],["text/207-5",[]],["component/207-5",[]],["title/207-6",[247,32.005,277,29.658]],["name/207-6",[]],["text/207-6",[]],["component/207-6",[]],["title/207-7",[394,27.346]],["name/207-7",[]],["text/207-7",[]],["component/207-7",[]],["title/207",[14,6,190,14.903,220,8.997,383,12.221,441,11.241]],["name/207",[14,0.241,47,0.385,220,0.361,439,0.765,441,0.452]],["text/207",[2,0.749,12,1.574,14,0.793,21,0.879,30,1.736,36,0.881,56,1.238,66,0.735,67,1.057,100,1.233,105,1.147,119,3.346,129,2.324,131,0.527,140,2.967,152,1.9,161,2.659,172,0.903,190,1.09,198,1.099,202,2.549,209,0.765,218,0.577,220,1.683,227,2.544,229,1.147,238,0.817,247,1.574,250,1.362,253,1.619,258,0.615,267,3.129,279,0.956,282,1.204,365,0.694,367,1.362,372,0.694,374,0.782,375,0.657,378,1.204,379,1.362,383,2.518,387,1.019,389,3.16,415,1.843,426,1.204,430,3.086,432,1.019,436,1.667,437,3.753,438,3.56,439,1.393,441,1.093,443,1.362,446,1.533,452,1.778,459,1.533,482,1.099,493,1.204,498,3.766,500,0.817,515,3.564,530,1.019,534,1.274,535,1.147,544,1.147,568,1.72,626,4.084,642,1.147,644,1.843,657,1.147,681,1.843,701,2.451,705,2.001,748,3.935,785,1.057,816,1.147,817,1.274,903,1.057,906,2.936,909,2.661,921,2.661,931,1.147,1111,5.029,1123,2.222,1127,2.222,1134,2.661,1135,2.222,1137,1.274,1139,1.274,1140,2.222,1142,1.274,1143,2.222,1152,0.986,1155,1.274,1222,1.274,1223,2.589,1224,2.589,1225,2.589,1226,1.484,1227,2.589,1228,2.589,1229,2.589,1230,2.589,1231,1.484,1232,1.484,1233,2.589,1234,1.484,1235,2.589,1236,1.484,1237,1.484,1238,1.484,1239,2.589,1240,2.589,1241,2.589,1242,1.484,1243,1.484,1244,1.484,1245,1.484,1246,1.484,1247,2.589,1248,2.589,1249,1.484,1250,1.484,1251,1.484,1252,1.484,1253,1.484,1254,1.484,1255,2.589,1256,1.484,1257,1.484,1258,1.484,1259,1.484,1260,1.484,1261,1.484,1262,1.484,1263,1.484,1264,1.484,1265,1.484,1266,1.484,1267,1.484,1268,1.484,1269,1.484,1270,1.484,1271,1.484,1272,1.484,1273,1.484,1274,1.484,1275,1.484,1276,1.484,1277,1.484,1278,1.484,1279,1.484,1280,1.484,1281,1.484,1282,1.484]],["component/207",[418,1.47]],["title/208",[14,7.674,220,11.508,383,15.632]],["name/208",[14,0.288,47,0.461,220,0.432,439,0.915]],["text/208",[12,2.9,14,1.445,19,2.076,30,2.008,44,2.688,47,1.292,56,1.068,100,2.271,131,1.694,144,3.276,161,2.405,190,2.008,210,2.754,220,2.256,267,2.189,365,2.229,372,2.229,374,2.511,375,2.112,383,2.854,432,3.276,436,4.176,437,2.626,439,3.965,441,2.059,515,2.9,569,2.825,619,3.686,626,3.168,1134,3.686,1152,3.168,1283,4.77,1284,4.77]],["component/208",[418,1.47]],["title/209-1",[168,23.519,212,18.642,281,27.365,288,28.726,353,22.798]],["name/209-1",[]],["text/209-1",[]],["component/209-1",[]],["title/209-2",[14,7.674,152,13.994,187,13.094]],["name/209-2",[]],["text/209-2",[]],["component/209-2",[]],["title/209-3",[10,32.382]],["name/209-3",[]],["text/209-3",[]],["component/209-3",[]],["title/209-4",[220,15.962]],["name/209-4",[]],["text/209-4",[]],["component/209-4",[]],["title/209",[8,5.002,14,8.226,23,19.412,187,9.23,1285,31.927]],["name/209",[14,0.358,47,0.572,187,0.611]],["text/209",[1,1.286,2,1.124,8,0.572,14,1.189,15,1.226,21,2.748,23,1.354,34,2.108,44,1.255,47,0.989,48,0.922,49,1.479,52,1.721,56,0.818,63,1.585,65,1.392,73,1.479,78,0.769,89,3.953,92,2.162,95,1.721,99,1.255,105,2.822,123,1.172,131,1.648,139,1.721,140,1.286,150,1.911,152,1.966,161,1.751,165,1.319,168,1.479,179,1.479,184,1.487,187,1.713,190,0.937,191,2.22,192,1.807,196,1.226,199,3.35,200,2.679,201,2.043,202,2.702,203,2.129,205,1.648,206,2.702,207,1.434,208,1.648,209,1.148,210,2.108,211,3.973,212,2.443,218,0.865,220,0.566,225,1.648,228,1.721,233,1.648,241,2.043,245,1.354,255,3.186,256,1.807,257,2.043,258,0.922,262,1.022,266,1.286,267,2.129,268,2.615,269,3.82,270,1.529,271,4.258,272,3.764,273,2.043,274,1.648,275,1.434,276,4.258,277,1.255,279,1.434,280,2.043,281,4.148,282,1.807,283,2.043,284,1.807,285,2.043,286,2.043,287,1.648,288,1.807,289,3.35,290,2.043,291,2.043,292,2.043,293,2.043,294,1.589,295,1.721,296,1.148,298,1.648,299,3.133,300,2.043,301,2.043,302,2.043,303,2.702,304,1.286,305,4.925,306,2.043,307,3.35,308,2.043,309,2.043,310,4.258,311,2.043,312,1.434,313,2.962,314,1.648,316,1.354,317,2.043,318,2.043,319,2.043,353,1.434,358,2.043,360,2.043,365,1.041,372,1.041,374,1.172,375,0.986,432,1.529,504,1.041,544,1.721,571,1.102,585,3.133,1152,1.479,1161,1.911,1162,1.911,1286,2.227,1287,2.227,1288,2.227,1289,2.227,1290,2.227,1291,2.227]],["component/209",[418,1.47]],["title/210",[110,33.889,479,32.005]],["name/210",[9,2.075]],["text/210",[350,4.34]],["component/210",[418,1.47]],["title/211-1",[0,46.502]],["name/211-1",[]],["text/211-1",[]],["component/211-1",[]],["title/211-2",[78,18.167,533,40.678]],["name/211-2",[]],["text/211-2",[]],["component/211-2",[]],["title/211-3",[47,10.766,56,8.9,332,11.956,441,12.618]],["name/211-3",[]],["text/211-3",[]],["component/211-3",[]],["title/211-4",[332,15.833,496,33.889]],["name/211-4",[]],["text/211-4",[]],["component/211-4",[]],["title/211-5",[8,7.096,372,21.166,497,31.102]],["name/211-5",[]],["text/211-5",[]],["component/211-5",[]],["title/211-6",[296,18.251,365,16.547,375,15.681,498,18.642,499,26.209]],["name/211-6",[]],["text/211-6",[]],["component/211-6",[]],["title/211",[7,36.146,479,32.005]],["name/211",[9,2.075]],["text/211",[8,1.148,13,1.317,14,1.091,36,1.606,47,1.881,51,1.924,56,1.286,57,2.641,66,1.523,97,1.523,129,1.734,131,2.467,152,0.951,156,2.044,161,1.54,187,1.365,196,2.598,209,1.586,210,1.777,220,1.199,221,1.924,226,1.734,227,1.523,234,3.023,237,2.191,238,1.694,262,2.166,267,1.412,268,1.734,277,1.734,294,1.34,332,1.937,365,3.009,369,2.191,372,2.206,373,3.36,374,2.485,375,3.076,383,1.062,394,1.34,418,1.694,439,2.54,441,2.044,446,1.822,447,1.465,463,1.924,479,1.871,480,1.982,500,1.694,501,1.694,502,1.982,503,1.554,504,1.438,505,2.278,506,3.494,507,2.278,508,2.114,509,2.114,510,1.295,511,1.777,512,1.777,513,2.278,514,4.767,515,2.871,516,2.278,517,3.494,518,1.871,519,2.278,520,2.114,521,3.494,522,3.494,523,2.278,524,2.278,525,2.278,526,2.278,527,2.278,528,2.114,529,2.278,530,2.114,531,1.871]],["component/211",[418,1.47]],["title/212",[125,38.96,479,32.005]],["name/212",[9,2.075]],["text/212",[350,4.34]],["component/212",[418,1.47]],["title/213",[479,38.201]],["name/213",[9,2.075]],["text/213",[350,4.34]],["component/213",[418,1.47]],["title/214",[14,6.734,56,8.9,294,17.3,447,18.924]],["name/214",[14,0.288,294,0.74,447,0.81,815,0.876]],["text/214",[14,1.047,25,2.57,36,1.182,56,1.384,58,1.719,63,2.472,72,2.307,77,1.165,78,1.199,123,1.828,152,1.073,158,2.57,161,2.93,187,1.495,190,1.462,191,2.112,192,2.817,200,2.986,202,2.57,203,1.593,207,2.236,209,1.79,223,3.552,234,2.251,247,2.112,275,4.942,294,2.69,332,1.045,364,2.385,415,2.472,427,2.817,480,3.33,498,1.828,540,4.437,550,2.171,586,2.472,665,3.233,692,2.472,713,5.302,815,1.79,821,5.875,897,2.684,1070,3.997,1071,2.684,1072,2.684,1073,5.302,1074,3.473,1075,3.473,1076,3.473,1077,3.473,1078,3.473,1079,3.473,1080,3.473,1081,5.172,1082,3.473,1083,3.473,1084,5.172,1085,3.473,1086,3.473,1087,3.473,1088,3.473,1089,3.473,1090,3.473,1091,2.979,1092,3.473,1093,3.473]],["component/214",[418,1.47]],["title/215",[14,4.925,21,17.212,56,6.509,190,12.233,220,7.385,383,10.032,441,9.228]],["name/215",[14,0.241,220,0.361,439,0.765,441,0.452,815,0.733]],["text/215",[2,0.81,12,0.975,14,0.619,21,0.95,28,1.24,29,2.14,30,2.26,36,2.167,37,1.524,54,1.472,56,0.818,58,0.794,65,1.003,66,1.371,72,1.065,76,1.187,77,0.538,89,2.059,100,1.319,123,2.29,131,1.298,140,1.599,152,1.88,156,1.065,161,3.086,181,2.541,190,1.538,195,1.187,196,0.883,218,1.076,220,1.546,226,0.904,233,1.187,234,0.698,266,1.599,267,1.996,270,1.101,279,1.783,314,1.187,332,1.616,356,1.065,364,1.902,383,1.854,394,0.698,415,1.971,416,1.301,421,0.926,430,1.458,436,3.458,437,1.524,439,1.49,441,2.022,442,1.472,446,2.164,452,2.51,454,1.472,492,1.301,498,1.924,503,1.398,504,0.75,509,1.101,510,1.166,511,1.599,518,0.975,528,2.51,556,2.14,570,1.376,598,1.142,600,1.376,622,1.376,665,1.003,668,1.24,681,1.971,694,2.14,704,1.142,726,1.376,748,2.601,785,2.601,815,0.827,1070,1.24,1071,1.24,1072,1.24,1073,4.94,1091,1.376,1094,1.376,1095,2.77,1096,2.77,1097,2.376,1098,1.604,1099,1.604,1100,1.604,1101,2.77,1102,1.604,1103,3.655,1104,2.77,1105,2.77,1106,1.604,1107,1.604,1108,1.604,1109,2.77,1110,2.376,1111,2.376,1112,2.77,1113,1.604,1114,2.77,1115,1.604,1116,1.604,1117,1.604,1118,1.604,1119,1.604,1120,1.604,1121,1.604,1122,1.604,1123,1.376,1124,1.604,1125,1.604,1126,1.604,1127,1.376,1128,1.604,1129,1.604,1130,1.604,1131,1.604,1132,1.604,1133,1.604,1134,2.824,1135,1.376,1136,1.604,1137,1.376,1138,2.77,1139,1.376,1140,1.376,1141,1.604,1142,3.732,1143,1.376,1144,1.604,1145,1.604,1146,1.604,1147,1.604]],["component/215",[418,1.47]],["title/216",[14,6.734,78,13.718,187,11.49,206,29.418]],["name/216",[14,0.358,187,0.611,815,1.089]],["text/216",[10,2.476,14,1.405,36,1.635,41,3.897,58,2.377,72,3.191,77,1.612,78,1.658,92,2.845,123,2.529,140,2.773,161,2.413,184,2.655,187,1.884,227,3.225,247,2.921,264,4.408,272,3.897,368,3.093,479,4.497,504,3.456,515,2.921,665,3.003,782,3.713,786,5.264,787,5.036,788,3.713,815,2.476,969,4.122,1017,4.122,1070,3.713,1071,3.713,1072,3.713,1148,6.517,1149,4.804,1150,4.804,1151,4.804]],["component/216",[418,1.47]],["title/217",[14,8.891,234,15.413,294,15.413,447,16.859]],["name/217",[14,0.288,47,0.461,294,0.74,447,0.81]],["text/217",[8,0.722,13,1.972,14,1.384,27,3.851,48,1.908,56,1.032,58,2.28,60,3.953,131,1.637,152,1.424,161,2.362,184,2.58,187,1.831,191,2.802,203,2.114,218,1.79,220,1.171,253,3.96,260,4.228,266,2.66,284,3.738,287,3.41,294,3.392,326,4.228,365,2.153,372,2.153,374,2.426,375,2.041,432,3.164,436,2.967,447,3.016,475,3.164,494,3.41,952,3.561,973,3.953,1152,3.06,1153,4.608,1154,4.608,1155,3.953,1156,4.608,1157,4.608,1158,4.608,1159,4.608,1160,4.608,1161,3.953,1162,3.953]],["component/217",[418,1.47]],["title/218-1",[62,38.201]],["name/218-1",[]],["text/218-1",[]],["component/218-1",[]],["title/218",[152,12.28,437,21.877,438,25.589,452,27.293]],["name/218",[47,0.572,437,1.163,438,1.361]],["text/218",[2,0.925,8,0.158,14,0.427,30,0.424,37,0.554,45,2.297,56,0.41,65,3.609,131,0.358,144,0.692,152,0.779,161,3.13,174,0.596,200,1.058,209,2.08,212,0.53,218,0.391,220,0.466,267,0.841,298,0.745,312,2.32,365,0.471,372,0.471,374,0.53,375,0.446,383,0.632,387,0.692,416,0.817,430,4.156,437,1.387,438,2.32,452,1.258,459,0.596,482,0.745,491,0.745,531,3.51,551,0.498,586,0.717,591,2.061,594,2.061,604,1.217,618,0.778,626,1.217,638,0.63,642,0.778,681,0.717,685,2.398,689,0.864,691,0.864,694,1.416,695,0.864,697,0.864,701,4.377,703,4.952,715,4.952,718,2.873,720,0.717,722,0.717,723,0.864,791,0.717,836,0.669,865,0.864,1097,0.864,1152,0.669,1163,1.007,1164,1.007,1165,1.007,1166,1.007,1167,1.007,1168,1.007,1169,1.007,1170,7.838,1171,6.859,1172,7.838,1173,7.838,1174,7.838,1175,1.007,1176,1.007,1177,5.772,1178,1.007,1179,1.007,1180,1.007,1181,2.52,1182,1.007,1183,2.52,1184,1.007,1185,1.832,1186,5.315,1187,1.832,1188,1.007,1189,1.007,1190,1.832,1191,1.007,1192,1.007,1193,1.007,1194,1.007,1195,1.007,1196,1.007,1197,1.007,1198,1.007,1199,1.007,1200,1.007,1201,1.007,1202,1.007,1203,1.007,1204,1.007,1205,1.832,1206,1.007,1207,1.007,1208,1.007,1209,1.007,1210,1.007,1211,1.007,1212,1.007,1213,1.007,1214,1.832,1215,1.007,1216,1.007,1217,1.007,1218,1.007,1219,1.007,1220,1.007,1221,1.007]],["component/218",[418,1.47]],["title/219-1",[62,38.201]],["name/219-1",[]],["text/219-1",[]],["component/219-1",[]],["title/219-2",[227,26.049,498,27.712]],["name/219-2",[]],["text/219-2",[]],["component/219-2",[]],["title/219-3",[227,26.049,705,40.678]],["name/219-3",[]],["text/219-3",[]],["component/219-3",[]],["title/219-4",[227,26.049,1222,45.161]],["name/219-4",[]],["text/219-4",[]],["component/219-4",[]],["title/219-5",[227,26.049,430,27.712]],["name/219-5",[]],["text/219-5",[]],["component/219-5",[]],["title/219-6",[247,32.005,277,29.658]],["name/219-6",[]],["text/219-6",[]],["component/219-6",[]],["title/219-7",[394,27.346]],["name/219-7",[]],["text/219-7",[]],["component/219-7",[]],["title/219",[14,6,190,14.903,220,8.997,383,12.221,441,11.241]],["name/219",[14,0.241,47,0.385,220,0.361,439,0.765,441,0.452]],["text/219",[2,0.749,12,1.574,14,0.793,21,0.879,30,1.736,36,0.881,56,1.238,66,0.735,67,1.057,100,1.233,105,1.147,119,3.346,129,2.324,131,0.527,140,2.967,152,1.9,161,2.659,172,0.903,190,1.09,198,1.099,202,2.549,209,0.765,218,0.577,220,1.683,227,2.544,229,1.147,238,0.817,247,1.574,250,1.362,253,1.619,258,0.615,267,3.129,279,0.956,282,1.204,365,0.694,367,1.362,372,0.694,374,0.782,375,0.657,378,1.204,379,1.362,383,2.518,387,1.019,389,3.16,415,1.843,426,1.204,430,3.086,432,1.019,436,1.667,437,3.753,438,3.56,439,1.393,441,1.093,443,1.362,446,1.533,452,1.778,459,1.533,482,1.099,493,1.204,498,3.766,500,0.817,515,3.564,530,1.019,534,1.274,535,1.147,544,1.147,568,1.72,626,4.084,642,1.147,644,1.843,657,1.147,681,1.843,701,2.451,705,2.001,748,3.935,785,1.057,816,1.147,817,1.274,903,1.057,906,2.936,909,2.661,921,2.661,931,1.147,1111,5.029,1123,2.222,1127,2.222,1134,2.661,1135,2.222,1137,1.274,1139,1.274,1140,2.222,1142,1.274,1143,2.222,1152,0.986,1155,1.274,1222,1.274,1223,2.589,1224,2.589,1225,2.589,1226,1.484,1227,2.589,1228,2.589,1229,2.589,1230,2.589,1231,1.484,1232,1.484,1233,2.589,1234,1.484,1235,2.589,1236,1.484,1237,1.484,1238,1.484,1239,2.589,1240,2.589,1241,2.589,1242,1.484,1243,1.484,1244,1.484,1245,1.484,1246,1.484,1247,2.589,1248,2.589,1249,1.484,1250,1.484,1251,1.484,1252,1.484,1253,1.484,1254,1.484,1255,2.589,1256,1.484,1257,1.484,1258,1.484,1259,1.484,1260,1.484,1261,1.484,1262,1.484,1263,1.484,1264,1.484,1265,1.484,1266,1.484,1267,1.484,1268,1.484,1269,1.484,1270,1.484,1271,1.484,1272,1.484,1273,1.484,1274,1.484,1275,1.484,1276,1.484,1277,1.484,1278,1.484,1279,1.484,1280,1.484,1281,1.484,1282,1.484]],["component/219",[418,1.47]],["title/220",[14,7.674,220,11.508,383,15.632]],["name/220",[14,0.288,47,0.461,220,0.432,439,0.915]],["text/220",[12,2.9,14,1.445,19,2.076,30,2.008,44,2.688,47,1.292,56,1.068,100,2.271,131,1.694,144,3.276,161,2.405,190,2.008,210,2.754,220,2.256,267,2.189,365,2.229,372,2.229,374,2.511,375,2.112,383,2.854,432,3.276,436,4.176,437,2.626,439,3.965,441,2.059,515,2.9,569,2.825,619,3.686,626,3.168,1134,3.686,1152,3.168,1283,4.77,1284,4.77]],["component/220",[418,1.47]],["title/221-1",[168,23.519,212,18.642,281,27.365,288,28.726,353,22.798]],["name/221-1",[]],["text/221-1",[]],["component/221-1",[]],["title/221-2",[14,7.674,152,13.994,187,13.094]],["name/221-2",[]],["text/221-2",[]],["component/221-2",[]],["title/221-3",[10,32.382]],["name/221-3",[]],["text/221-3",[]],["component/221-3",[]],["title/221-4",[220,15.962]],["name/221-4",[]],["text/221-4",[]],["component/221-4",[]],["title/221",[8,5.002,14,8.226,23,19.412,187,9.23,1285,31.927]],["name/221",[14,0.358,47,0.572,187,0.611]],["text/221",[1,1.286,2,1.124,8,0.572,14,1.189,15,1.226,21,2.748,23,1.354,34,2.108,44,1.255,47,0.989,48,0.922,49,1.479,52,1.721,56,0.818,63,1.585,65,1.392,73,1.479,78,0.769,89,3.953,92,2.162,95,1.721,99,1.255,105,2.822,123,1.172,131,1.648,139,1.721,140,1.286,150,1.911,152,1.966,161,1.751,165,1.319,168,1.479,179,1.479,184,1.487,187,1.713,190,0.937,191,2.22,192,1.807,196,1.226,199,3.35,200,2.679,201,2.043,202,2.702,203,2.129,205,1.648,206,2.702,207,1.434,208,1.648,209,1.148,210,2.108,211,3.973,212,2.443,218,0.865,220,0.566,225,1.648,228,1.721,233,1.648,241,2.043,245,1.354,255,3.186,256,1.807,257,2.043,258,0.922,262,1.022,266,1.286,267,2.129,268,2.615,269,3.82,270,1.529,271,4.258,272,3.764,273,2.043,274,1.648,275,1.434,276,4.258,277,1.255,279,1.434,280,2.043,281,4.148,282,1.807,283,2.043,284,1.807,285,2.043,286,2.043,287,1.648,288,1.807,289,3.35,290,2.043,291,2.043,292,2.043,293,2.043,294,1.589,295,1.721,296,1.148,298,1.648,299,3.133,300,2.043,301,2.043,302,2.043,303,2.702,304,1.286,305,4.925,306,2.043,307,3.35,308,2.043,309,2.043,310,4.258,311,2.043,312,1.434,313,2.962,314,1.648,316,1.354,317,2.043,318,2.043,319,2.043,353,1.434,358,2.043,360,2.043,365,1.041,372,1.041,374,1.172,375,0.986,432,1.529,504,1.041,544,1.721,571,1.102,585,3.133,1152,1.479,1161,1.911,1162,1.911,1286,2.227,1287,2.227,1288,2.227,1289,2.227,1290,2.227,1291,2.227]],["component/221",[418,1.47]],["title/222",[110,33.889,479,32.005]],["name/222",[9,2.075]],["text/222",[350,4.34]],["component/222",[418,1.47]],["title/223-1",[0,46.502]],["name/223-1",[]],["text/223-1",[]],["component/223-1",[]],["title/223-2",[78,18.167,533,40.678]],["name/223-2",[]],["text/223-2",[]],["component/223-2",[]],["title/223-3",[47,10.766,56,8.9,332,11.956,441,12.618]],["name/223-3",[]],["text/223-3",[]],["component/223-3",[]],["title/223-4",[332,15.833,496,33.889]],["name/223-4",[]],["text/223-4",[]],["component/223-4",[]],["title/223-5",[8,7.096,372,21.166,497,31.102]],["name/223-5",[]],["text/223-5",[]],["component/223-5",[]],["title/223-6",[296,18.251,365,16.547,375,15.681,498,18.642,499,26.209]],["name/223-6",[]],["text/223-6",[]],["component/223-6",[]],["title/223",[7,36.146,478,38.96]],["name/223",[9,2.075]],["text/223",[8,1.257,13,2.116,36,1.683,47,1.615,51,2.045,56,1.335,66,1.619,89,1.843,97,1.619,129,1.843,131,2.361,161,1.614,187,0.946,196,2.722,209,1.686,210,1.889,218,1.271,221,2.045,226,1.843,227,1.619,234,3.106,237,2.328,238,1.801,262,2.269,267,1.501,268,1.843,277,1.843,332,1.999,356,2.173,365,3.106,369,2.328,372,2.311,373,3.52,374,2.604,375,3.16,382,1.937,383,1.129,394,1.424,441,2.11,463,2.045,478,2.421,500,1.801,501,1.801,502,2.106,503,1.652,504,1.529,505,2.421,506,3.66,507,2.421,508,2.246,509,2.246,510,1.377,511,1.889,512,1.889,513,2.421,514,4.919,515,3.007,516,2.421,517,3.66,518,1.989,519,2.421,520,2.246,521,3.66,522,3.66,523,2.421,524,2.421,525,2.421,526,2.421,527,2.421,528,2.246,529,2.421,530,2.246,531,1.989]],["component/223",[13,1.143]],["title/224",[8,7.096,13,19.383,441,14.379]],["name/224",[9,2.075]],["text/224",[8,1.26,13,3.628,47,1.974,56,1.275,89,4.776,97,3.607,126,4.214,132,5.224,190,2.396,269,4.052,356,4.841,382,3.371,398,5.224,441,1.807,568,3.781,618,4.4,677,4.885,1110,4.885,1292,5.693,1293,5.693,1294,5.693]],["component/224",[13,1.143]],["title/225-1",[383,18.167,815,27.131]],["name/225-1",[]],["text/225-1",[]],["component/225-1",[]],["title/225-2",[89,29.658,742,40.678]],["name/225-2",[]],["text/225-2",[]],["component/225-2",[]],["title/225",[8,5.548,13,15.153,56,7.929,446,20.967,1295,35.41]],["name/225",[13,1.195,815,1.439]],["text/225",[1,1.714,8,1.071,13,3.331,34,1.714,36,1.011,47,1.851,56,1.618,58,1.47,66,1.47,72,1.973,80,2.198,89,4.681,92,1.758,97,1.47,99,1.673,100,2.187,111,2.295,129,3.164,140,1.714,152,2.111,161,2.358,164,1.21,207,1.912,218,1.784,226,3.164,242,2.409,269,3.269,274,3.399,294,1.293,298,2.198,332,1.382,368,1.912,387,3.154,392,2.725,394,1.293,400,1.912,404,1.635,441,1.458,446,4.609,494,2.198,520,3.154,644,3.269,665,1.857,742,3.549,748,3.269,782,2.295,903,3.269,906,2.114,1094,2.548,1296,4.593,1297,2.97,1298,6.32,1299,2.97,1300,2.97,1301,2.97,1302,2.97,1303,2.97,1304,2.97,1305,4.593,1306,5.616,1307,4.593,1308,2.97,1309,2.97,1310,2.97,1311,2.97,1312,2.97,1313,2.97,1314,2.97,1315,2.97,1316,2.97,1317,2.97]],["component/225",[13,1.143]],["title/226",[110,33.889,478,38.96]],["name/226",[9,2.075]],["text/226",[350,4.34]],["component/226",[13,1.143]],["title/227-1",[0,46.502]],["name/227-1",[]],["text/227-1",[]],["component/227-1",[]],["title/227-2",[78,18.167,533,40.678]],["name/227-2",[]],["text/227-2",[]],["component/227-2",[]],["title/227-3",[47,10.766,56,8.9,332,11.956,441,12.618]],["name/227-3",[]],["text/227-3",[]],["component/227-3",[]],["title/227-4",[332,15.833,496,33.889]],["name/227-4",[]],["text/227-4",[]],["component/227-4",[]],["title/227-5",[8,7.096,372,21.166,497,31.102]],["name/227-5",[]],["text/227-5",[]],["component/227-5",[]],["title/227-6",[296,18.251,365,16.547,375,15.681,498,18.642,499,26.209]],["name/227-6",[]],["text/227-6",[]],["component/227-6",[]],["title/227",[7,36.146,478,38.96]],["name/227",[9,2.075]],["text/227",[8,1.257,13,2.116,36,1.683,47,1.615,51,2.045,56,1.335,66,1.619,89,1.843,97,1.619,129,1.843,131,2.361,161,1.614,187,0.946,196,2.722,209,1.686,210,1.889,218,1.271,221,2.045,226,1.843,227,1.619,234,3.106,237,2.328,238,1.801,262,2.269,267,1.501,268,1.843,277,1.843,332,1.999,356,2.173,365,3.106,369,2.328,372,2.311,373,3.52,374,2.604,375,3.16,382,1.937,383,1.129,394,1.424,441,2.11,463,2.045,478,2.421,500,1.801,501,1.801,502,2.106,503,1.652,504,1.529,505,2.421,506,3.66,507,2.421,508,2.246,509,2.246,510,1.377,511,1.889,512,1.889,513,2.421,514,4.919,515,3.007,516,2.421,517,3.66,518,1.989,519,2.421,520,2.246,521,3.66,522,3.66,523,2.421,524,2.421,525,2.421,526,2.421,527,2.421,528,2.246,529,2.421,530,2.246,531,1.989]],["component/227",[13,1.143]],["title/228",[8,7.096,13,19.383,441,14.379]],["name/228",[9,2.075]],["text/228",[8,1.26,13,3.628,47,1.974,56,1.275,89,4.776,97,3.607,126,4.214,132,5.224,190,2.396,269,4.052,356,4.841,382,3.371,398,5.224,441,1.807,568,3.781,618,4.4,677,4.885,1110,4.885,1292,5.693,1293,5.693,1294,5.693]],["component/228",[13,1.143]],["title/229-1",[383,18.167,815,27.131]],["name/229-1",[]],["text/229-1",[]],["component/229-1",[]],["title/229-2",[89,29.658,742,40.678]],["name/229-2",[]],["text/229-2",[]],["component/229-2",[]],["title/229",[8,5.548,13,15.153,56,7.929,446,20.967,1295,35.41]],["name/229",[13,1.195,815,1.439]],["text/229",[1,1.714,8,1.071,13,3.331,34,1.714,36,1.011,47,1.851,56,1.618,58,1.47,66,1.47,72,1.973,80,2.198,89,4.681,92,1.758,97,1.47,99,1.673,100,2.187,111,2.295,129,3.164,140,1.714,152,2.111,161,2.358,164,1.21,207,1.912,218,1.784,226,3.164,242,2.409,269,3.269,274,3.399,294,1.293,298,2.198,332,1.382,368,1.912,387,3.154,392,2.725,394,1.293,400,1.912,404,1.635,441,1.458,446,4.609,494,2.198,520,3.154,644,3.269,665,1.857,742,3.549,748,3.269,782,2.295,903,3.269,906,2.114,1094,2.548,1296,4.593,1297,2.97,1298,6.32,1299,2.97,1300,2.97,1301,2.97,1302,2.97,1303,2.97,1304,2.97,1305,4.593,1306,5.616,1307,4.593,1308,2.97,1309,2.97,1310,2.97,1311,2.97,1312,2.97,1313,2.97,1314,2.97,1315,2.97,1316,2.97,1317,2.97]],["component/229",[13,1.143]],["title/230",[110,33.889,478,38.96]],["name/230",[9,2.075]],["text/230",[350,4.34]],["component/230",[13,1.143]],["title/231-1",[0,46.502]],["name/231-1",[]],["text/231-1",[]],["component/231-1",[]],["title/231-2",[78,18.167,533,40.678]],["name/231-2",[]],["text/231-2",[]],["component/231-2",[]],["title/231-3",[47,10.766,56,8.9,332,11.956,441,12.618]],["name/231-3",[]],["text/231-3",[]],["component/231-3",[]],["title/231-4",[332,15.833,496,33.889]],["name/231-4",[]],["text/231-4",[]],["component/231-4",[]],["title/231-5",[8,7.096,372,21.166,497,31.102]],["name/231-5",[]],["text/231-5",[]],["component/231-5",[]],["title/231-6",[296,18.251,365,16.547,375,15.681,498,18.642,499,26.209]],["name/231-6",[]],["text/231-6",[]],["component/231-6",[]],["title/231",[7,36.146,478,38.96]],["name/231",[9,2.075]],["text/231",[8,1.257,13,2.116,36,1.683,47,1.615,51,2.045,56,1.335,66,1.619,89,1.843,97,1.619,129,1.843,131,2.361,161,1.614,187,0.946,196,2.722,209,1.686,210,1.889,218,1.271,221,2.045,226,1.843,227,1.619,234,3.106,237,2.328,238,1.801,262,2.269,267,1.501,268,1.843,277,1.843,332,1.999,356,2.173,365,3.106,369,2.328,372,2.311,373,3.52,374,2.604,375,3.16,382,1.937,383,1.129,394,1.424,441,2.11,463,2.045,478,2.421,500,1.801,501,1.801,502,2.106,503,1.652,504,1.529,505,2.421,506,3.66,507,2.421,508,2.246,509,2.246,510,1.377,511,1.889,512,1.889,513,2.421,514,4.919,515,3.007,516,2.421,517,3.66,518,1.989,519,2.421,520,2.246,521,3.66,522,3.66,523,2.421,524,2.421,525,2.421,526,2.421,527,2.421,528,2.246,529,2.421,530,2.246,531,1.989]],["component/231",[13,1.143]],["title/232",[8,7.096,13,19.383,441,14.379]],["name/232",[9,2.075]],["text/232",[8,1.26,13,3.628,47,1.974,56,1.275,89,4.776,97,3.607,126,4.214,132,5.224,190,2.396,269,4.052,356,4.841,382,3.371,398,5.224,441,1.807,568,3.781,618,4.4,677,4.885,1110,4.885,1292,5.693,1293,5.693,1294,5.693]],["component/232",[13,1.143]],["title/233-1",[383,18.167,815,27.131]],["name/233-1",[]],["text/233-1",[]],["component/233-1",[]],["title/233-2",[89,29.658,742,40.678]],["name/233-2",[]],["text/233-2",[]],["component/233-2",[]],["title/233",[8,5.548,13,15.153,56,7.929,446,20.967,1295,35.41]],["name/233",[13,1.195,815,1.439]],["text/233",[1,1.714,8,1.071,13,3.331,34,1.714,36,1.011,47,1.851,56,1.618,58,1.47,66,1.47,72,1.973,80,2.198,89,4.681,92,1.758,97,1.47,99,1.673,100,2.187,111,2.295,129,3.164,140,1.714,152,2.111,161,2.358,164,1.21,207,1.912,218,1.784,226,3.164,242,2.409,269,3.269,274,3.399,294,1.293,298,2.198,332,1.382,368,1.912,387,3.154,392,2.725,394,1.293,400,1.912,404,1.635,441,1.458,446,4.609,494,2.198,520,3.154,644,3.269,665,1.857,742,3.549,748,3.269,782,2.295,903,3.269,906,2.114,1094,2.548,1296,4.593,1297,2.97,1298,6.32,1299,2.97,1300,2.97,1301,2.97,1302,2.97,1303,2.97,1304,2.97,1305,4.593,1306,5.616,1307,4.593,1308,2.97,1309,2.97,1310,2.97,1311,2.97,1312,2.97,1313,2.97,1314,2.97,1315,2.97,1316,2.97,1317,2.97]],["component/233",[13,1.143]],["title/234",[110,33.889,478,38.96]],["name/234",[9,2.075]],["text/234",[350,4.34]],["component/234",[13,1.143]]],"invertedIndex":[["",{"_index":161,"title":{"21-8":{},"22-1":{},"67-8":{},"68-1":{},"113-8":{},"114-1":{},"145-8":{},"146-1":{},"161-8":{},"162-1":{},"177-8":{},"178-1":{}},"name":{},"text":{"1":{},"3":{},"10":{},"13":{},"15":{},"17":{},"20":{},"21":{},"23":{},"26":{},"27":{},"28":{},"29":{},"31":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"43":{},"45":{},"47":{},"49":{},"56":{},"59":{},"61":{},"63":{},"66":{},"67":{},"69":{},"72":{},"73":{},"74":{},"75":{},"77":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"89":{},"91":{},"93":{},"95":{},"102":{},"105":{},"107":{},"109":{},"112":{},"113":{},"115":{},"118":{},"119":{},"120":{},"121":{},"123":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"135":{},"137":{},"139":{},"141":{},"144":{},"145":{},"147":{},"150":{},"151":{},"152":{},"153":{},"155":{},"157":{},"160":{},"161":{},"163":{},"166":{},"167":{},"168":{},"169":{},"171":{},"173":{},"176":{},"177":{},"179":{},"182":{},"183":{},"184":{},"185":{},"187":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"199":{},"202":{},"203":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"211":{},"214":{},"215":{},"216":{},"217":{},"218":{},"219":{},"220":{},"221":{},"223":{},"225":{},"227":{},"229":{},"231":{},"233":{}},"component":{}}],["0..n",{"_index":696,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["0.088",{"_index":1026,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["0.14",{"_index":918,"title":{},"name":{},"text":{"28":{},"74":{},"120":{},"152":{},"168":{},"184":{}},"component":{}}],["0.286",{"_index":1060,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["01",{"_index":1051,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["07",{"_index":912,"title":{},"name":{},"text":{"28":{},"74":{},"120":{},"152":{},"168":{},"184":{}},"component":{}}],["07t09:18:02.345z",{"_index":949,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["07t09:18:02.740z",{"_index":957,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["1",{"_index":164,"title":{"18":{},"28":{},"64":{},"74":{},"110":{},"120":{},"142":{},"152":{},"158":{},"168":{},"174":{},"184":{},"22-2":{},"68-2":{},"114-2":{},"146-2":{},"162-2":{},"178-2":{}},"name":{"18":{},"28":{},"29":{},"64":{},"74":{},"75":{},"110":{},"120":{},"121":{},"142":{},"152":{},"153":{},"158":{},"168":{},"169":{},"174":{},"184":{},"185":{}},"text":{"1":{},"5":{},"7":{},"11":{},"14":{},"20":{},"21":{},"22":{},"23":{},"25":{},"28":{},"29":{},"45":{},"47":{},"51":{},"53":{},"57":{},"60":{},"66":{},"67":{},"68":{},"69":{},"71":{},"74":{},"75":{},"91":{},"93":{},"97":{},"99":{},"103":{},"106":{},"112":{},"113":{},"114":{},"115":{},"117":{},"120":{},"121":{},"137":{},"144":{},"145":{},"146":{},"147":{},"149":{},"152":{},"153":{},"160":{},"161":{},"162":{},"163":{},"165":{},"168":{},"169":{},"176":{},"177":{},"178":{},"179":{},"181":{},"184":{},"185":{},"225":{},"229":{},"233":{}},"component":{}}],["1.3.2.jar!/logback.xml",{"_index":984,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["101",{"_index":863,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["102",{"_index":868,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["103rd",{"_index":397,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["10:12:38.874",{"_index":913,"title":{},"name":{},"text":{"28":{},"74":{},"120":{},"152":{},"168":{},"184":{}},"component":{}}],["10:12:39.009",{"_index":917,"title":{},"name":{},"text":{"28":{},"74":{},"120":{},"152":{},"168":{},"184":{}},"component":{}}],["10:12:39.131",{"_index":919,"title":{},"name":{},"text":{"28":{},"74":{},"120":{},"152":{},"168":{},"184":{}},"component":{}}],["11",{"_index":914,"title":{},"name":{},"text":{"28":{},"74":{},"120":{},"152":{},"168":{},"184":{}},"component":{}}],["12",{"_index":911,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["13",{"_index":1068,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["13776m",{"_index":951,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["15",{"_index":611,"title":{},"name":{},"text":{"18":{},"64":{},"110":{},"142":{},"158":{},"174":{}},"component":{}}],["16",{"_index":1049,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["186b24edf20c1c4a",{"_index":950,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["18:33:16,185",{"_index":971,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["18:33:16,186",{"_index":976,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["18:33:16,194",{"_index":985,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["18:33:16,269",{"_index":987,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["18:33:16,270",{"_index":992,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["18:33:16,272",{"_index":993,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["18:33:16,282",{"_index":997,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["18:33:16,283",{"_index":1007,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["18:33:16.295",{"_index":1010,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["18:33:16.296",{"_index":1014,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["18:33:16.364",{"_index":1024,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["18:33:16.428",{"_index":1025,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["18:33:16.518",{"_index":1027,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["18:46:48.977",{"_index":1053,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["18:46:49.044",{"_index":1056,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["18:46:49.070",{"_index":1058,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["18:46:49.346",{"_index":1059,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["18:46:49.455",{"_index":1061,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["18:46:50.806",{"_index":1063,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["1a",{"_index":590,"title":{"28-1":{},"74-1":{},"120-1":{},"152-1":{},"168-1":{},"184-1":{}},"name":{},"text":{"18":{},"20":{},"28":{},"64":{},"66":{},"74":{},"110":{},"112":{},"120":{},"142":{},"144":{},"152":{},"158":{},"160":{},"168":{},"174":{},"176":{},"184":{}},"component":{}}],["1b",{"_index":601,"title":{"29-1":{},"75-1":{},"121-1":{},"153-1":{},"169-1":{},"185-1":{}},"name":{},"text":{"18":{},"20":{},"29":{},"64":{},"66":{},"75":{},"110":{},"112":{},"121":{},"142":{},"144":{},"153":{},"158":{},"160":{},"169":{},"174":{},"176":{},"185":{}},"component":{}}],["1c",{"_index":962,"title":{"29-2":{},"75-2":{},"121-2":{},"153-2":{},"169-2":{},"185-2":{}},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["2",{"_index":172,"title":{"19":{},"65":{},"111":{},"143":{},"159":{},"175":{},"22-3":{},"68-3":{},"114-3":{},"146-3":{},"162-3":{},"178-3":{}},"name":{"19":{},"65":{},"111":{},"143":{},"159":{},"175":{}},"text":{"1":{},"20":{},"22":{},"39":{},"47":{},"66":{},"68":{},"85":{},"93":{},"112":{},"114":{},"131":{},"144":{},"146":{},"160":{},"162":{},"176":{},"178":{},"195":{},"207":{},"219":{}},"component":{}}],["2.0",{"_index":359,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["2.1/org.modelix/model",{"_index":981,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["2.47",{"_index":934,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["2/file",{"_index":980,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["20",{"_index":923,"title":{},"name":{},"text":{"28":{},"74":{},"120":{},"152":{},"168":{},"184":{}},"component":{}}],["2021",{"_index":1301,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["2021.2",{"_index":399,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["2021.2.103",{"_index":396,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["2021.2.6",{"_index":557,"title":{},"name":{},"text":{"15":{},"28":{},"29":{},"61":{},"74":{},"75":{},"107":{},"120":{},"121":{},"139":{},"152":{},"153":{},"155":{},"168":{},"169":{},"171":{},"184":{},"185":{}},"component":{}}],["2022",{"_index":910,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["2023",{"_index":411,"title":{},"name":{},"text":{"8":{},"29":{},"54":{},"75":{},"100":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["2023.r1",{"_index":414,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["211.31",{"_index":943,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["23.0",{"_index":90,"title":{},"name":{},"text":{"1":{}},"component":{}}],["23.1",{"_index":464,"title":{"12-2":{},"12-3":{},"12-4":{},"58-2":{},"58-3":{},"58-4":{},"104-2":{},"104-3":{},"104-4":{}},"name":{},"text":{"47":{}},"component":{}}],["23.1.0",{"_index":1304,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["25",{"_index":1052,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["26m",{"_index":1067,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["28101",{"_index":1019,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["28101:28101",{"_index":794,"title":{},"name":{},"text":{"24":{},"70":{},"116":{},"148":{},"164":{},"180":{}},"component":{}}],["29",{"_index":960,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["2a",{"_index":963,"title":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"name":{},"text":{},"component":{}}],["2g",{"_index":1235,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["2gb",{"_index":1236,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["2m",{"_index":922,"title":{},"name":{},"text":{"28":{},"74":{},"120":{},"152":{},"168":{},"184":{}},"component":{}}],["3",{"_index":654,"title":{"22-4":{},"68-4":{},"114-4":{},"146-4":{},"162-4":{},"178-4":{}},"name":{},"text":{},"component":{}}],["3.08",{"_index":948,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["318.03",{"_index":938,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["32178700288",{"_index":1013,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["32232121",{"_index":851,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["324m",{"_index":958,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["4",{"_index":1062,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["40a6",{"_index":847,"title":{},"name":{},"text":{"26":{},"27":{},"72":{},"73":{},"118":{},"119":{},"150":{},"151":{},"166":{},"167":{},"182":{},"183":{}},"component":{}}],["42",{"_index":866,"title":{},"name":{},"text":{"26":{},"27":{},"72":{},"73":{},"118":{},"119":{},"150":{},"151":{},"166":{},"167":{},"182":{},"183":{}},"component":{}}],["420",{"_index":854,"title":{},"name":{},"text":{"26":{},"27":{},"72":{},"73":{},"118":{},"119":{},"150":{},"151":{},"166":{},"167":{},"182":{},"183":{}},"component":{}}],["44bc",{"_index":735,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["4653",{"_index":734,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["46f2",{"_index":1173,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["5",{"_index":955,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["5005",{"_index":1034,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["5a6581bcd381%28university.schedule.structure%29%2f4128798754188010580",{"_index":737,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["6.53",{"_index":947,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["69",{"_index":872,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["73",{"_index":1023,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["7s",{"_index":1030,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["8",{"_index":827,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["8090",{"_index":670,"title":{},"name":{},"text":{"22":{},"68":{},"114":{},"146":{},"162":{},"178":{}},"component":{}}],["85",{"_index":1029,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["86.71",{"_index":945,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["8d4c",{"_index":1172,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca",{"_index":1175,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/1648392019017048449",{"_index":1207,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/1648392019017048449/1648392019017048450",{"_index":1208,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/1648392019017048449/1648392019017048452",{"_index":1210,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/1648392019017048449/1648392019017048454",{"_index":1209,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/1648392019017048457",{"_index":1212,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/1648392019017048457/1648392019017048458",{"_index":1213,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/1648392019017048460",{"_index":1215,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/1648392019017048460/1648392019017048461",{"_index":1218,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/1648392019017048460/1648392019017048466",{"_index":1216,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/1648392019017048463",{"_index":1219,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/1648392019017048463/1648392019017048464",{"_index":1220,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/4128798754188010560",{"_index":1178,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/4128798754188010560/4128798754188010563",{"_index":1179,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/4128798754188010560/4128798754188010565",{"_index":1180,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/4128798754188010560/4128798754188058355",{"_index":1182,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/4128798754188010560/4128798754188058364",{"_index":1184,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/4128798754188010568",{"_index":1188,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/4128798754188010568/4128798754188010578",{"_index":1189,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/4128798754188010569",{"_index":1191,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/4128798754188010570",{"_index":1193,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/4128798754188010570/4128798754188010571",{"_index":1195,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/4128798754188010570/4128798754188010573",{"_index":1197,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/4128798754188010580",{"_index":1198,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/4128798754188010580/4128798754188010583",{"_index":1199,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/4128798754188010580/4128798754188010585",{"_index":1200,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/4128798754188010588",{"_index":1201,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/4128798754188010588/4128798754188010589",{"_index":1202,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/4128798754188057192",{"_index":1203,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/4128798754188057192/4128798754188057193",{"_index":1204,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8d89155f7fca/4128798754188059567",{"_index":1206,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["8s",{"_index":1037,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["91",{"_index":920,"title":{},"name":{},"text":{"28":{},"74":{},"120":{},"152":{},"168":{},"184":{}},"component":{}}],["94",{"_index":1066,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["95",{"_index":959,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["96533389",{"_index":1171,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["9d7cd01febe2%2528university.schedule.sandbox%2529%252f4128798754188058349",{"_index":857,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["9d7cd01febe2%28university.schedule.sandbox%29%2f1305729863392535677",{"_index":867,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["9d7cd01febe2%28university.schedule.sandbox%29%2f4128798754188058347",{"_index":849,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["9d7cd01febe2%28university.schedule.sandbox%29%2f4128798754188058349",{"_index":852,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["9d7cd01febe2%28university.schedule.sandbox%29%2f4128798754188058353",{"_index":861,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["9d7cd01febe2%28university.schedule.sandbox%29%2f4128798754188060854",{"_index":869,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["9d7cd01febe2(unused)/4128798754188058347",{"_index":883,"title":{},"name":{},"text":{"27":{},"73":{},"119":{},"151":{},"167":{},"183":{}},"component":{}}],["9d7cd01febe2(unused)/4128798754188058349",{"_index":885,"title":{},"name":{},"text":{"27":{},"73":{},"119":{},"151":{},"167":{},"183":{}},"component":{}}],["9dfe",{"_index":736,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["_",{"_index":1048,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["__",{"_index":1043,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["___",{"_index":1046,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["____",{"_index":1044,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["_____",{"_index":1045,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["______",{"_index":1047,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["_c_typedimpl_",{"_index":1272,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["_c_untypedimpl_",{"_index":1268,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["_n_typedimpl_",{"_index":1266,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["a31d",{"_index":848,"title":{},"name":{},"text":{"26":{},"27":{},"72":{},"73":{},"118":{},"119":{},"150":{},"151":{},"166":{},"167":{},"182":{},"183":{}},"component":{}}],["abov",{"_index":181,"title":{},"name":{},"text":{"2":{},"35":{},"48":{},"81":{},"94":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["abstract",{"_index":638,"title":{},"name":{},"text":{"21":{},"25":{},"26":{},"27":{},"29":{},"38":{},"67":{},"71":{},"72":{},"73":{},"75":{},"84":{},"113":{},"117":{},"118":{},"119":{},"121":{},"130":{},"145":{},"149":{},"150":{},"151":{},"153":{},"161":{},"165":{},"166":{},"167":{},"169":{},"177":{},"181":{},"182":{},"183":{},"185":{},"194":{},"206":{},"218":{}},"component":{}}],["accept",{"_index":841,"title":{},"name":{},"text":{"26":{},"27":{},"72":{},"73":{},"118":{},"119":{},"150":{},"151":{},"166":{},"167":{},"182":{},"183":{}},"component":{}}],["access",{"_index":234,"title":{"37":{},"83":{},"129":{},"193":{},"205":{},"217":{}},"name":{},"text":{"2":{},"12":{},"13":{},"15":{},"18":{},"20":{},"21":{},"22":{},"26":{},"28":{},"29":{},"31":{},"34":{},"35":{},"43":{},"48":{},"58":{},"59":{},"61":{},"64":{},"66":{},"67":{},"68":{},"72":{},"74":{},"75":{},"77":{},"80":{},"81":{},"89":{},"94":{},"104":{},"105":{},"107":{},"110":{},"112":{},"113":{},"114":{},"118":{},"120":{},"121":{},"123":{},"126":{},"127":{},"135":{},"139":{},"142":{},"144":{},"145":{},"146":{},"150":{},"152":{},"153":{},"155":{},"158":{},"160":{},"161":{},"162":{},"166":{},"168":{},"169":{},"171":{},"174":{},"176":{},"177":{},"178":{},"182":{},"184":{},"185":{},"187":{},"190":{},"191":{},"199":{},"202":{},"203":{},"211":{},"214":{},"215":{},"223":{},"227":{},"231":{}},"component":{}}],["accordingli",{"_index":1260,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["account",{"_index":237,"title":{},"name":{},"text":{"2":{},"13":{},"15":{},"31":{},"43":{},"48":{},"59":{},"61":{},"77":{},"89":{},"94":{},"105":{},"107":{},"123":{},"135":{},"139":{},"155":{},"171":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["achiev",{"_index":544,"title":{},"name":{},"text":{"15":{},"39":{},"41":{},"61":{},"85":{},"87":{},"107":{},"131":{},"133":{},"139":{},"155":{},"171":{},"195":{},"197":{},"207":{},"209":{},"219":{},"221":{}},"component":{}}],["acronym",{"_index":146,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["action",{"_index":367,"title":{},"name":{},"text":{"8":{},"39":{},"54":{},"85":{},"100":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["ad",{"_index":634,"title":{},"name":{},"text":{"21":{},"67":{},"113":{},"145":{},"161":{},"177":{}},"component":{}}],["add",{"_index":140,"title":{},"name":{},"text":{"1":{},"2":{},"9":{},"25":{},"35":{},"36":{},"39":{},"41":{},"45":{},"47":{},"48":{},"55":{},"71":{},"81":{},"82":{},"85":{},"87":{},"91":{},"93":{},"94":{},"101":{},"117":{},"127":{},"128":{},"131":{},"133":{},"137":{},"149":{},"165":{},"181":{},"191":{},"192":{},"195":{},"197":{},"203":{},"204":{},"207":{},"209":{},"215":{},"216":{},"219":{},"221":{},"225":{},"229":{},"233":{}},"component":{}}],["addit",{"_index":279,"title":{},"name":{},"text":{"2":{},"23":{},"25":{},"35":{},"39":{},"41":{},"48":{},"69":{},"71":{},"81":{},"85":{},"87":{},"94":{},"115":{},"117":{},"127":{},"131":{},"133":{},"147":{},"149":{},"163":{},"165":{},"179":{},"181":{},"191":{},"195":{},"197":{},"203":{},"207":{},"209":{},"215":{},"219":{},"221":{}},"component":{}}],["addition",{"_index":646,"title":{},"name":{},"text":{"21":{},"67":{},"113":{},"145":{},"161":{},"177":{}},"component":{}}],["address",{"_index":244,"title":{},"name":{},"text":{"2":{},"29":{},"48":{},"75":{},"94":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["admittedli",{"_index":811,"title":{},"name":{},"text":{"25":{},"71":{},"117":{},"149":{},"165":{},"181":{}},"component":{}}],["advanc",{"_index":1154,"title":{},"name":{},"text":{"37":{},"83":{},"129":{},"193":{},"205":{},"217":{}},"component":{}}],["aggreg",{"_index":132,"title":{},"name":{},"text":{"1":{},"44":{},"47":{},"90":{},"93":{},"136":{},"224":{},"228":{},"232":{}},"component":{}}],["aim",{"_index":405,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["alia",{"_index":719,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["align",{"_index":420,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["allow",{"_index":228,"title":{},"name":{},"text":{"2":{},"3":{},"21":{},"41":{},"48":{},"49":{},"67":{},"87":{},"94":{},"95":{},"113":{},"133":{},"145":{},"161":{},"177":{},"197":{},"209":{},"221":{}},"component":{}}],["alongsid",{"_index":538,"title":{},"name":{},"text":{"15":{},"61":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["alreadi",{"_index":54,"title":{},"name":{},"text":{"1":{},"35":{},"47":{},"81":{},"93":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["altern",{"_index":266,"title":{},"name":{},"text":{"2":{},"22":{},"24":{},"26":{},"27":{},"35":{},"37":{},"41":{},"48":{},"68":{},"70":{},"72":{},"73":{},"81":{},"83":{},"87":{},"94":{},"114":{},"116":{},"118":{},"119":{},"127":{},"129":{},"133":{},"146":{},"148":{},"150":{},"151":{},"162":{},"164":{},"166":{},"167":{},"178":{},"180":{},"182":{},"183":{},"191":{},"193":{},"197":{},"203":{},"205":{},"209":{},"215":{},"217":{},"221":{}},"component":{}}],["analysi",{"_index":169,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["angular",{"_index":560,"title":{"22":{},"68":{},"114":{},"146":{},"162":{},"178":{},"22-2":{},"22-4":{},"68-2":{},"68-4":{},"114-2":{},"114-4":{},"146-2":{},"146-4":{},"162-2":{},"162-4":{},"178-2":{},"178-4":{}},"name":{},"text":{"15":{},"17":{},"18":{},"25":{},"28":{},"29":{},"61":{},"63":{},"64":{},"71":{},"74":{},"75":{},"107":{},"109":{},"110":{},"117":{},"120":{},"121":{},"139":{},"141":{},"142":{},"149":{},"152":{},"153":{},"155":{},"157":{},"158":{},"165":{},"168":{},"169":{},"171":{},"173":{},"174":{},"181":{},"184":{},"185":{}},"component":{}}],["angular.io",{"_index":924,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["angular:build",{"_index":663,"title":{},"name":{},"text":{"22":{},"68":{},"114":{},"146":{},"162":{},"178":{}},"component":{}}],["angular:npmrun",{"_index":671,"title":{},"name":{},"text":{"22":{},"28":{},"29":{},"68":{},"74":{},"75":{},"114":{},"120":{},"121":{},"146":{},"152":{},"153":{},"162":{},"168":{},"169":{},"178":{},"184":{},"185":{}},"component":{}}],["anoth",{"_index":1223,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["answer",{"_index":85,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["antora",{"_index":127,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["anyth",{"_index":386,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["apach",{"_index":216,"title":{},"name":{},"text":{"2":{},"8":{},"48":{},"54":{},"94":{},"100":{}},"component":{}}],["api",{"_index":220,"title":{"23":{},"26":{},"27":{},"35":{},"39":{},"40":{},"69":{},"72":{},"73":{},"81":{},"85":{},"86":{},"115":{},"118":{},"119":{},"127":{},"131":{},"132":{},"147":{},"150":{},"151":{},"163":{},"166":{},"167":{},"179":{},"182":{},"183":{},"191":{},"195":{},"196":{},"203":{},"207":{},"208":{},"215":{},"219":{},"220":{},"21-3":{},"23-2":{},"41-4":{},"67-3":{},"69-2":{},"87-4":{},"113-3":{},"115-2":{},"133-4":{},"145-3":{},"147-2":{},"161-3":{},"163-2":{},"177-3":{},"179-2":{},"197-4":{},"209-4":{},"221-4":{}},"name":{"23":{},"26":{},"27":{},"35":{},"39":{},"40":{},"69":{},"72":{},"73":{},"81":{},"85":{},"86":{},"115":{},"118":{},"119":{},"127":{},"131":{},"132":{},"147":{},"150":{},"151":{},"163":{},"166":{},"167":{},"179":{},"182":{},"183":{},"191":{},"195":{},"196":{},"203":{},"207":{},"208":{},"215":{},"219":{},"220":{}},"text":{"2":{},"10":{},"12":{},"17":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"31":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"48":{},"56":{},"58":{},"63":{},"66":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"81":{},"83":{},"84":{},"85":{},"86":{},"87":{},"94":{},"102":{},"104":{},"109":{},"112":{},"113":{},"114":{},"115":{},"117":{},"118":{},"119":{},"120":{},"121":{},"123":{},"127":{},"129":{},"130":{},"131":{},"132":{},"133":{},"141":{},"144":{},"145":{},"146":{},"147":{},"149":{},"150":{},"151":{},"152":{},"153":{},"157":{},"160":{},"161":{},"162":{},"163":{},"165":{},"166":{},"167":{},"168":{},"169":{},"173":{},"176":{},"177":{},"178":{},"179":{},"181":{},"182":{},"183":{},"184":{},"185":{},"187":{},"191":{},"193":{},"194":{},"195":{},"196":{},"197":{},"199":{},"203":{},"205":{},"206":{},"207":{},"208":{},"209":{},"211":{},"215":{},"217":{},"218":{},"219":{},"220":{},"221":{}},"component":{}}],["app",{"_index":580,"title":{"22-4":{},"68-4":{},"114-4":{},"146-4":{},"162-4":{},"178-4":{}},"name":{},"text":{"17":{},"18":{},"22":{},"25":{},"63":{},"64":{},"68":{},"71":{},"109":{},"110":{},"114":{},"117":{},"141":{},"142":{},"146":{},"149":{},"157":{},"158":{},"162":{},"165":{},"173":{},"174":{},"178":{},"181":{}},"component":{}}],["append",{"_index":990,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["appli",{"_index":21,"title":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"name":{},"text":{"1":{},"2":{},"4":{},"12":{},"15":{},"35":{},"39":{},"41":{},"47":{},"48":{},"50":{},"58":{},"61":{},"81":{},"85":{},"87":{},"93":{},"94":{},"96":{},"104":{},"107":{},"127":{},"131":{},"133":{},"139":{},"155":{},"171":{},"191":{},"195":{},"197":{},"203":{},"207":{},"209":{},"215":{},"219":{},"221":{}},"component":{}}],["applic",{"_index":615,"title":{"22":{},"68":{},"114":{},"146":{},"162":{},"178":{},"21-6":{},"21-7":{},"67-6":{},"67-7":{},"113-6":{},"113-7":{},"145-6":{},"145-7":{},"161-6":{},"161-7":{},"177-6":{},"177-7":{}},"name":{},"text":{"18":{},"22":{},"24":{},"28":{},"29":{},"64":{},"68":{},"70":{},"74":{},"75":{},"110":{},"114":{},"116":{},"120":{},"121":{},"142":{},"146":{},"148":{},"152":{},"153":{},"158":{},"162":{},"164":{},"168":{},"169":{},"174":{},"178":{},"180":{},"184":{},"185":{}},"component":{}}],["application.conf",{"_index":834,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["application/json",{"_index":842,"title":{},"name":{},"text":{"26":{},"27":{},"72":{},"73":{},"118":{},"119":{},"150":{},"151":{},"166":{},"167":{},"182":{},"183":{}},"component":{}}],["approach",{"_index":35,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"25":{},"47":{},"48":{},"50":{},"71":{},"93":{},"94":{},"96":{},"117":{},"149":{},"165":{},"181":{}},"component":{}}],["architectur",{"_index":178,"title":{"2":{},"21":{},"48":{},"67":{},"94":{},"113":{},"145":{},"161":{},"177":{},"2-1":{},"20-2":{},"21-1":{},"48-1":{},"66-2":{},"67-1":{},"94-1":{},"112-2":{},"113-1":{},"144-2":{},"145-1":{},"160-2":{},"161-1":{},"176-2":{},"177-1":{}},"name":{"2":{},"21":{},"48":{},"67":{},"94":{},"113":{},"145":{},"161":{},"177":{}},"text":{"12":{},"15":{},"20":{},"21":{},"28":{},"58":{},"61":{},"66":{},"67":{},"74":{},"104":{},"107":{},"112":{},"113":{},"120":{},"139":{},"144":{},"145":{},"152":{},"155":{},"160":{},"161":{},"168":{},"171":{},"176":{},"177":{},"184":{}},"component":{}}],["arg",{"_index":787,"title":{},"name":{},"text":{"24":{},"29":{},"36":{},"70":{},"75":{},"82":{},"116":{},"121":{},"128":{},"148":{},"153":{},"164":{},"169":{},"180":{},"185":{},"192":{},"204":{},"216":{}},"component":{}}],["arguement",{"_index":1149,"title":{},"name":{},"text":{"36":{},"82":{},"128":{},"192":{},"204":{},"216":{}},"component":{}}],["arraylist",{"_index":1231,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["artifact",{"_index":372,"title":{"13-2":{},"15-5":{},"31-5":{},"43-5":{},"59-2":{},"61-5":{},"77-5":{},"89-5":{},"105-2":{},"107-5":{},"123-5":{},"135-5":{},"139-5":{},"155-5":{},"171-5":{},"187-5":{},"199-5":{},"211-5":{},"223-5":{},"227-5":{},"231-5":{}},"name":{},"text":{"8":{},"13":{},"15":{},"31":{},"37":{},"38":{},"39":{},"40":{},"41":{},"43":{},"54":{},"59":{},"61":{},"77":{},"83":{},"84":{},"85":{},"86":{},"87":{},"89":{},"100":{},"105":{},"107":{},"123":{},"129":{},"130":{},"131":{},"132":{},"133":{},"135":{},"139":{},"155":{},"171":{},"187":{},"193":{},"194":{},"195":{},"196":{},"197":{},"199":{},"205":{},"206":{},"207":{},"208":{},"209":{},"211":{},"217":{},"218":{},"219":{},"220":{},"221":{},"223":{},"227":{},"231":{}},"component":{}}],["ask",{"_index":349,"title":{"6":{},"52":{},"98":{}},"name":{},"text":{},"component":{}}],["aspect",{"_index":482,"title":{},"name":{},"text":{"12":{},"15":{},"38":{},"39":{},"58":{},"61":{},"84":{},"85":{},"104":{},"107":{},"130":{},"131":{},"139":{},"155":{},"171":{},"194":{},"195":{},"206":{},"207":{},"218":{},"219":{}},"component":{}}],["assign",{"_index":691,"title":{},"name":{},"text":{"23":{},"38":{},"69":{},"84":{},"115":{},"130":{},"147":{},"163":{},"179":{},"194":{},"206":{},"218":{}},"component":{}}],["assum",{"_index":518,"title":{},"name":{},"text":{"13":{},"15":{},"28":{},"29":{},"31":{},"35":{},"43":{},"59":{},"61":{},"74":{},"75":{},"77":{},"81":{},"89":{},"105":{},"107":{},"120":{},"121":{},"123":{},"127":{},"135":{},"139":{},"152":{},"153":{},"155":{},"168":{},"169":{},"171":{},"184":{},"185":{},"187":{},"191":{},"199":{},"203":{},"211":{},"215":{},"223":{},"227":{},"231":{}},"component":{}}],["assumpt",{"_index":1299,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["attach",{"_index":1002,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["attribut",{"_index":705,"title":{"39-3":{},"85-3":{},"131-3":{},"195-3":{},"207-3":{},"219-3":{}},"name":{},"text":{"23":{},"39":{},"69":{},"85":{},"115":{},"131":{},"147":{},"163":{},"179":{},"195":{},"207":{},"219":{}},"component":{}}],["authent",{"_index":499,"title":{"13-3":{},"15-6":{},"31-6":{},"43-6":{},"59-3":{},"61-6":{},"77-6":{},"89-6":{},"105-3":{},"107-6":{},"123-6":{},"135-6":{},"139-6":{},"155-6":{},"171-6":{},"187-6":{},"199-6":{},"211-6":{},"223-6":{},"227-6":{},"231-6":{}},"name":{},"text":{},"component":{}}],["author",{"_index":173,"title":{},"name":{},"text":{"1":{},"10":{},"47":{},"56":{},"93":{},"102":{}},"component":{}}],["automat",{"_index":608,"title":{},"name":{},"text":{"18":{},"26":{},"28":{},"29":{},"64":{},"72":{},"74":{},"75":{},"110":{},"118":{},"120":{},"121":{},"142":{},"150":{},"152":{},"153":{},"158":{},"166":{},"168":{},"169":{},"174":{},"182":{},"184":{},"185":{}},"component":{}}],["autoreload",{"_index":915,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["autumn",{"_index":408,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["avail",{"_index":463,"title":{"12-1":{},"58-1":{},"104-1":{}},"name":{},"text":{"13":{},"15":{},"21":{},"22":{},"31":{},"43":{},"59":{},"61":{},"67":{},"68":{},"77":{},"89":{},"105":{},"107":{},"113":{},"114":{},"123":{},"135":{},"139":{},"145":{},"146":{},"155":{},"161":{},"162":{},"171":{},"177":{},"178":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["avoid",{"_index":967,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["b",{"_index":964,"title":{},"name":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"text":{},"component":{}}],["b150",{"_index":1174,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["backend",{"_index":625,"title":{},"name":{},"text":{"20":{},"21":{},"28":{},"29":{},"66":{},"67":{},"74":{},"75":{},"112":{},"113":{},"120":{},"121":{},"144":{},"145":{},"152":{},"153":{},"160":{},"161":{},"168":{},"169":{},"176":{},"177":{},"184":{},"185":{}},"component":{}}],["backend/build/depend",{"_index":902,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["bad",{"_index":263,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["base",{"_index":245,"title":{"22":{},"68":{},"114":{},"146":{},"162":{},"178":{}},"name":{},"text":{"2":{},"8":{},"12":{},"15":{},"21":{},"25":{},"41":{},"48":{},"54":{},"58":{},"61":{},"67":{},"71":{},"87":{},"94":{},"100":{},"104":{},"107":{},"113":{},"117":{},"133":{},"139":{},"145":{},"149":{},"155":{},"161":{},"165":{},"171":{},"177":{},"181":{},"197":{},"209":{},"221":{}},"component":{}}],["baseconcept",{"_index":716,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["baseconcept.children",{"_index":763,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["baseconcept.properti",{"_index":738,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["baseconcept.refer",{"_index":765,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["basenameconvers",{"_index":1256,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["basi",{"_index":485,"title":{},"name":{},"text":{"12":{},"15":{},"58":{},"61":{},"104":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["be",{"_index":378,"title":{},"name":{},"text":{"8":{},"18":{},"39":{},"54":{},"64":{},"85":{},"100":{},"110":{},"131":{},"142":{},"158":{},"174":{},"195":{},"207":{},"219":{}},"component":{}}],["becom",{"_index":300,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["befor",{"_index":820,"title":{},"name":{},"text":{"26":{},"27":{},"72":{},"73":{},"118":{},"119":{},"150":{},"151":{},"166":{},"167":{},"182":{},"183":{}},"component":{}}],["behaviour",{"_index":808,"title":{},"name":{},"text":{"25":{},"71":{},"117":{},"149":{},"165":{},"181":{}},"component":{}}],["below",{"_index":526,"title":{},"name":{},"text":{"13":{},"15":{},"31":{},"43":{},"59":{},"61":{},"77":{},"89":{},"105":{},"107":{},"123":{},"135":{},"139":{},"155":{},"171":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["between",{"_index":269,"title":{},"name":{},"text":{"2":{},"8":{},"41":{},"44":{},"45":{},"48":{},"54":{},"87":{},"90":{},"91":{},"94":{},"100":{},"133":{},"136":{},"137":{},"197":{},"209":{},"221":{},"224":{},"225":{},"228":{},"229":{},"232":{},"233":{}},"component":{}}],["big",{"_index":265,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["birthday",{"_index":690,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["block",{"_index":906,"title":{},"name":{},"text":{"28":{},"29":{},"39":{},"45":{},"74":{},"75":{},"85":{},"91":{},"120":{},"121":{},"131":{},"137":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{},"195":{},"207":{},"219":{},"225":{},"229":{},"233":{}},"component":{}}],["boolean",{"_index":723,"title":{},"name":{},"text":{"23":{},"38":{},"69":{},"84":{},"115":{},"130":{},"147":{},"163":{},"179":{},"194":{},"206":{},"218":{}},"component":{}}],["boolean.parseboolean(propertyvalu",{"_index":759,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["boolean.tostring(valu",{"_index":762,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["born",{"_index":1211,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["both",{"_index":208,"title":{},"name":{},"text":{"2":{},"18":{},"21":{},"41":{},"48":{},"64":{},"67":{},"87":{},"94":{},"110":{},"113":{},"133":{},"142":{},"145":{},"158":{},"161":{},"174":{},"177":{},"197":{},"209":{},"221":{}},"component":{}}],["bottom",{"_index":69,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["bring",{"_index":95,"title":{},"name":{},"text":{"1":{},"12":{},"15":{},"41":{},"47":{},"58":{},"61":{},"87":{},"93":{},"104":{},"107":{},"133":{},"139":{},"155":{},"171":{},"197":{},"209":{},"221":{}},"component":{}}],["browser",{"_index":27,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"21":{},"22":{},"28":{},"29":{},"37":{},"47":{},"48":{},"50":{},"67":{},"68":{},"74":{},"75":{},"83":{},"93":{},"94":{},"96":{},"113":{},"114":{},"120":{},"121":{},"129":{},"145":{},"146":{},"152":{},"153":{},"161":{},"162":{},"168":{},"169":{},"177":{},"178":{},"184":{},"185":{},"193":{},"205":{},"217":{}},"component":{}}],["bug",{"_index":137,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["build",{"_index":332,"title":{"13":{},"59":{},"105":{},"13-1":{},"15-3":{},"15-4":{},"22-1":{},"22-2":{},"26-1":{},"27-1":{},"31-3":{},"31-4":{},"43-3":{},"43-4":{},"59-1":{},"61-3":{},"61-4":{},"68-1":{},"68-2":{},"72-1":{},"73-1":{},"77-3":{},"77-4":{},"89-3":{},"89-4":{},"105-1":{},"107-3":{},"107-4":{},"114-1":{},"114-2":{},"118-1":{},"119-1":{},"123-3":{},"123-4":{},"135-3":{},"135-4":{},"139-3":{},"139-4":{},"146-1":{},"146-2":{},"150-1":{},"151-1":{},"155-3":{},"155-4":{},"162-1":{},"162-2":{},"166-1":{},"167-1":{},"171-3":{},"171-4":{},"178-1":{},"178-2":{},"182-1":{},"183-1":{},"187-3":{},"187-4":{},"199-3":{},"199-4":{},"211-3":{},"211-4":{},"223-3":{},"223-4":{},"227-3":{},"227-4":{},"231-3":{},"231-4":{}},"name":{"13":{},"59":{},"105":{}},"text":{"3":{},"8":{},"10":{},"12":{},"13":{},"15":{},"17":{},"22":{},"23":{},"26":{},"27":{},"28":{},"29":{},"31":{},"34":{},"35":{},"43":{},"45":{},"49":{},"54":{},"56":{},"58":{},"59":{},"61":{},"63":{},"68":{},"69":{},"72":{},"73":{},"74":{},"75":{},"77":{},"80":{},"81":{},"89":{},"91":{},"95":{},"100":{},"102":{},"104":{},"105":{},"107":{},"109":{},"114":{},"115":{},"118":{},"119":{},"120":{},"121":{},"123":{},"126":{},"127":{},"135":{},"137":{},"139":{},"141":{},"146":{},"147":{},"150":{},"151":{},"152":{},"153":{},"155":{},"157":{},"162":{},"163":{},"166":{},"167":{},"168":{},"169":{},"171":{},"173":{},"178":{},"179":{},"182":{},"183":{},"184":{},"185":{},"187":{},"190":{},"191":{},"199":{},"202":{},"203":{},"211":{},"214":{},"215":{},"223":{},"225":{},"227":{},"229":{},"231":{},"233":{}},"component":{}}],["build.gradle.kt",{"_index":1096,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["builddir.resolve(\"mp",{"_index":1113,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["buildfil",{"_index":1152,"title":{},"name":{},"text":{"37":{},"38":{},"39":{},"40":{},"41":{},"83":{},"84":{},"85":{},"86":{},"87":{},"129":{},"130":{},"131":{},"132":{},"133":{},"193":{},"194":{},"195":{},"196":{},"197":{},"205":{},"206":{},"207":{},"208":{},"209":{},"217":{},"218":{},"219":{},"220":{},"221":{}},"component":{}}],["built",{"_index":126,"title":{},"name":{},"text":{"1":{},"28":{},"29":{},"44":{},"47":{},"74":{},"75":{},"90":{},"93":{},"120":{},"121":{},"136":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{},"224":{},"228":{},"232":{}},"component":{}}],["bulk",{"_index":627,"title":{},"name":{},"text":{"20":{},"28":{},"66":{},"74":{},"112":{},"120":{},"144":{},"152":{},"160":{},"168":{},"176":{},"184":{}},"component":{}}],["bulk:run",{"_index":907,"title":{},"name":{},"text":{"28":{},"74":{},"120":{},"152":{},"168":{},"184":{}},"component":{}}],["bundl",{"_index":927,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["busi",{"_index":166,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["button",{"_index":68,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["byte",{"_index":1012,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["c",{"_index":891,"title":{},"name":{},"text":{"27":{},"73":{},"119":{},"151":{},"167":{},"183":{}},"component":{}}],["c_",{"_index":1270,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["call",{"_index":501,"title":{},"name":{},"text":{"13":{},"15":{},"24":{},"26":{},"27":{},"28":{},"29":{},"31":{},"43":{},"59":{},"61":{},"70":{},"72":{},"73":{},"74":{},"75":{},"77":{},"89":{},"105":{},"107":{},"116":{},"118":{},"119":{},"120":{},"121":{},"123":{},"135":{},"139":{},"148":{},"150":{},"151":{},"152":{},"153":{},"155":{},"164":{},"166":{},"167":{},"168":{},"169":{},"171":{},"180":{},"182":{},"183":{},"184":{},"185":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["capabl",{"_index":607,"title":{},"name":{},"text":{"18":{},"64":{},"110":{},"142":{},"158":{},"174":{}},"component":{}}],["capac",{"_index":684,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["care",{"_index":240,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["carri",{"_index":410,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["case",{"_index":258,"title":{"18":{},"19":{},"20":{},"28":{},"29":{},"64":{},"65":{},"66":{},"74":{},"75":{},"110":{},"111":{},"112":{},"120":{},"121":{},"142":{},"143":{},"144":{},"152":{},"153":{},"158":{},"159":{},"160":{},"168":{},"169":{},"174":{},"175":{},"176":{},"184":{},"185":{},"20-2":{},"66-2":{},"112-2":{},"144-2":{},"160-2":{},"176-2":{}},"name":{},"text":{"2":{},"12":{},"15":{},"18":{},"20":{},"21":{},"22":{},"28":{},"29":{},"39":{},"41":{},"48":{},"58":{},"61":{},"64":{},"66":{},"67":{},"68":{},"74":{},"75":{},"85":{},"87":{},"94":{},"104":{},"107":{},"110":{},"112":{},"113":{},"114":{},"120":{},"121":{},"131":{},"133":{},"139":{},"142":{},"144":{},"145":{},"146":{},"152":{},"153":{},"155":{},"158":{},"160":{},"161":{},"162":{},"168":{},"169":{},"171":{},"174":{},"176":{},"177":{},"178":{},"184":{},"185":{},"195":{},"197":{},"207":{},"209":{},"219":{},"221":{}},"component":{}}],["categori",{"_index":109,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["caus",{"_index":780,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["central",{"_index":134,"title":{},"name":{},"text":{"1":{},"18":{},"47":{},"64":{},"93":{},"110":{},"142":{},"158":{},"174":{}},"component":{}}],["ch.qos.logback.classic.encoder.patternlayoutencod",{"_index":995,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["ch.qos.logback.classic.joran.action.configurationact",{"_index":1006,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["ch.qos.logback.classic.joran.action.loggeract",{"_index":998,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["ch.qos.logback.classic.joran.action.rootloggeract",{"_index":1004,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["ch.qos.logback.classic.joran.joranconfigurator@7ff95560",{"_index":1008,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["ch.qos.logback.classic.loggercontext[default",{"_index":972,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["ch.qos.logback.core.consoleappend",{"_index":991,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["ch.qos.logback.core.joran.action.appenderact",{"_index":988,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["ch.qos.logback.core.joran.action.appenderrefact",{"_index":1001,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["ch.qos.logback.core.joran.action.nestedcomplexpropertyia",{"_index":994,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["ch.qos.logback.core.joran.spi.configurationwatchlist@f4168b8",{"_index":986,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["chang",{"_index":255,"title":{},"name":{},"text":{"2":{},"21":{},"28":{},"29":{},"41":{},"48":{},"67":{},"74":{},"75":{},"87":{},"94":{},"113":{},"120":{},"121":{},"133":{},"145":{},"152":{},"153":{},"161":{},"168":{},"169":{},"177":{},"184":{},"185":{},"197":{},"209":{},"221":{}},"component":{}}],["changequeri",{"_index":1077,"title":{},"name":{},"text":{"34":{},"80":{},"126":{},"190":{},"202":{},"214":{}},"component":{}}],["channel",{"_index":155,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["check",{"_index":665,"title":{},"name":{},"text":{"22":{},"23":{},"34":{},"35":{},"36":{},"45":{},"68":{},"69":{},"80":{},"81":{},"82":{},"91":{},"114":{},"115":{},"126":{},"127":{},"128":{},"137":{},"146":{},"147":{},"162":{},"163":{},"178":{},"179":{},"190":{},"191":{},"192":{},"202":{},"203":{},"204":{},"214":{},"215":{},"216":{},"225":{},"229":{},"233":{}},"component":{}}],["child",{"_index":708,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["children",{"_index":703,"title":{},"name":{},"text":{"23":{},"38":{},"69":{},"84":{},"115":{},"130":{},"147":{},"163":{},"179":{},"194":{},"206":{},"218":{}},"component":{}}],["choic",{"_index":554,"title":{},"name":{},"text":{"15":{},"61":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["choos",{"_index":91,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["chosen",{"_index":629,"title":{},"name":{},"text":{"21":{},"67":{},"113":{},"145":{},"161":{},"177":{}},"component":{}}],["chunk",{"_index":929,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["ci/gradl",{"_index":777,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["clarifi",{"_index":342,"title":{},"name":{},"text":{"5":{},"51":{},"97":{}},"component":{}}],["class",{"_index":694,"title":{},"name":{},"text":{"23":{},"35":{},"38":{},"69":{},"81":{},"84":{},"115":{},"127":{},"130":{},"147":{},"163":{},"179":{},"191":{},"194":{},"203":{},"206":{},"215":{},"218":{}},"component":{}}],["classdiagram",{"_index":693,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["clearli",{"_index":640,"title":{},"name":{},"text":{"21":{},"67":{},"113":{},"145":{},"161":{},"177":{}},"component":{}}],["client",{"_index":294,"title":{"34":{},"37":{},"80":{},"83":{},"126":{},"129":{},"190":{},"193":{},"202":{},"205":{},"214":{},"217":{}},"name":{"34":{},"37":{},"80":{},"83":{},"126":{},"129":{},"190":{},"193":{},"202":{},"205":{},"214":{},"217":{}},"text":{"2":{},"10":{},"12":{},"18":{},"20":{},"21":{},"28":{},"31":{},"34":{},"37":{},"41":{},"45":{},"48":{},"56":{},"58":{},"64":{},"66":{},"67":{},"74":{},"77":{},"80":{},"83":{},"87":{},"91":{},"94":{},"102":{},"104":{},"110":{},"112":{},"113":{},"120":{},"123":{},"126":{},"129":{},"133":{},"137":{},"142":{},"144":{},"145":{},"152":{},"158":{},"160":{},"161":{},"168":{},"174":{},"176":{},"177":{},"184":{},"187":{},"190":{},"193":{},"197":{},"199":{},"202":{},"205":{},"209":{},"211":{},"214":{},"217":{},"221":{},"225":{},"229":{},"233":{}},"component":{}}],["client.changequery(buildmodelqueri",{"_index":1078,"title":{},"name":{},"text":{"34":{},"80":{},"126":{},"190":{},"202":{},"214":{}},"component":{}}],["client.runread",{"_index":1087,"title":{},"name":{},"text":{"34":{},"80":{},"126":{},"190":{},"202":{},"214":{}},"component":{}}],["client.waitforrootnod",{"_index":1086,"title":{},"name":{},"text":{"34":{},"80":{},"126":{},"190":{},"202":{},"214":{}},"component":{}}],["client:2.4.0",{"_index":1317,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["close",{"_index":419,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["cloud",{"_index":23,"title":{"41":{},"87":{},"133":{},"197":{},"209":{},"221":{}},"name":{},"text":{"1":{},"2":{},"4":{},"17":{},"22":{},"29":{},"41":{},"47":{},"48":{},"50":{},"63":{},"68":{},"75":{},"87":{},"93":{},"94":{},"96":{},"109":{},"114":{},"121":{},"133":{},"141":{},"146":{},"153":{},"157":{},"162":{},"169":{},"173":{},"178":{},"185":{},"197":{},"209":{},"221":{}},"component":{}}],["cluster",{"_index":215,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["code",{"_index":195,"title":{},"name":{},"text":{"2":{},"15":{},"23":{},"35":{},"48":{},"61":{},"69":{},"81":{},"94":{},"107":{},"115":{},"127":{},"139":{},"147":{},"155":{},"163":{},"171":{},"179":{},"191":{},"203":{},"215":{}},"component":{}}],["collabor",{"_index":168,"title":{"21-7":{},"41-1":{},"67-7":{},"87-1":{},"113-7":{},"133-1":{},"145-7":{},"161-7":{},"177-7":{},"197-1":{},"209-1":{},"221-1":{}},"name":{},"text":{"1":{},"2":{},"20":{},"41":{},"47":{},"48":{},"66":{},"87":{},"93":{},"94":{},"112":{},"133":{},"144":{},"160":{},"176":{},"197":{},"209":{},"221":{}},"component":{}}],["collect",{"_index":322,"title":{},"name":{},"text":{"3":{},"49":{},"95":{}},"component":{}}],["combin",{"_index":466,"title":{},"name":{},"text":{"12":{},"58":{},"104":{}},"component":{}}],["come",{"_index":493,"title":{},"name":{},"text":{"12":{},"15":{},"39":{},"58":{},"61":{},"85":{},"104":{},"107":{},"131":{},"139":{},"155":{},"171":{},"195":{},"207":{},"219":{}},"component":{}}],["command",{"_index":791,"title":{},"name":{},"text":{"24":{},"28":{},"29":{},"38":{},"70":{},"74":{},"75":{},"84":{},"116":{},"120":{},"121":{},"130":{},"148":{},"152":{},"153":{},"164":{},"168":{},"169":{},"180":{},"184":{},"185":{},"194":{},"206":{},"218":{}},"component":{}}],["common",{"_index":249,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["commun",{"_index":412,"title":{"27-3":{},"73-3":{},"119-3":{},"151-3":{},"167-3":{},"183-3":{}},"name":{},"text":{"8":{},"25":{},"54":{},"71":{},"100":{},"117":{},"149":{},"165":{},"181":{}},"component":{}}],["compat",{"_index":398,"title":{},"name":{},"text":{"8":{},"44":{},"54":{},"90":{},"100":{},"136":{},"224":{},"228":{},"232":{}},"component":{}}],["compil",{"_index":710,"title":{},"name":{},"text":{"23":{},"28":{},"29":{},"69":{},"74":{},"75":{},"115":{},"120":{},"121":{},"147":{},"152":{},"153":{},"163":{},"168":{},"169":{},"179":{},"184":{},"185":{}},"component":{}}],["complet",{"_index":120,"title":{},"name":{},"text":{"1":{},"12":{},"14":{},"15":{},"18":{},"28":{},"29":{},"47":{},"58":{},"60":{},"61":{},"64":{},"74":{},"75":{},"93":{},"104":{},"106":{},"107":{},"110":{},"120":{},"121":{},"139":{},"142":{},"152":{},"153":{},"155":{},"158":{},"168":{},"169":{},"171":{},"174":{},"184":{},"185":{}},"component":{}}],["complex",{"_index":895,"title":{},"name":{},"text":{"28":{},"74":{},"120":{},"152":{},"168":{},"184":{}},"component":{}}],["complic",{"_index":968,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["compon",{"_index":47,"title":{"10":{},"12":{},"13":{},"21":{},"56":{},"58":{},"59":{},"67":{},"102":{},"104":{},"105":{},"113":{},"145":{},"161":{},"177":{},"12-1":{},"15-3":{},"31-3":{},"43-3":{},"58-1":{},"61-3":{},"77-3":{},"89-3":{},"104-1":{},"107-3":{},"123-3":{},"135-3":{},"139-3":{},"155-3":{},"171-3":{},"187-3":{},"199-3":{},"211-3":{},"223-3":{},"227-3":{},"231-3":{}},"name":{"10":{},"12":{},"13":{},"37":{},"38":{},"39":{},"40":{},"41":{},"56":{},"58":{},"59":{},"83":{},"84":{},"85":{},"86":{},"87":{},"102":{},"104":{},"105":{},"129":{},"130":{},"131":{},"132":{},"133":{},"193":{},"194":{},"195":{},"196":{},"197":{},"205":{},"206":{},"207":{},"208":{},"209":{},"217":{},"218":{},"219":{},"220":{},"221":{}},"text":{"1":{},"2":{},"8":{},"12":{},"13":{},"15":{},"17":{},"18":{},"20":{},"21":{},"22":{},"24":{},"25":{},"28":{},"29":{},"31":{},"40":{},"41":{},"43":{},"44":{},"45":{},"47":{},"48":{},"54":{},"58":{},"59":{},"61":{},"63":{},"64":{},"66":{},"67":{},"68":{},"70":{},"71":{},"74":{},"75":{},"77":{},"86":{},"87":{},"89":{},"90":{},"91":{},"93":{},"94":{},"100":{},"104":{},"105":{},"107":{},"109":{},"110":{},"112":{},"113":{},"114":{},"116":{},"117":{},"120":{},"121":{},"123":{},"132":{},"133":{},"135":{},"136":{},"137":{},"139":{},"141":{},"142":{},"144":{},"145":{},"146":{},"148":{},"149":{},"152":{},"153":{},"155":{},"157":{},"158":{},"160":{},"161":{},"162":{},"164":{},"165":{},"168":{},"169":{},"171":{},"173":{},"174":{},"176":{},"177":{},"178":{},"180":{},"181":{},"184":{},"185":{},"187":{},"196":{},"197":{},"199":{},"208":{},"209":{},"211":{},"220":{},"221":{},"223":{},"224":{},"225":{},"227":{},"228":{},"229":{},"231":{},"232":{},"233":{}},"component":{}}],["components/tech",{"_index":566,"title":{},"name":{},"text":{"17":{},"63":{},"109":{},"141":{},"157":{},"173":{}},"component":{}}],["compos",{"_index":465,"title":{},"name":{},"text":{"12":{},"58":{},"104":{}},"component":{}}],["comput",{"_index":259,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["concepdata",{"_index":1166,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["concept",{"_index":681,"title":{},"name":{},"text":{"23":{},"35":{},"38":{},"39":{},"69":{},"81":{},"84":{},"85":{},"115":{},"127":{},"130":{},"131":{},"147":{},"163":{},"179":{},"191":{},"194":{},"195":{},"203":{},"206":{},"207":{},"215":{},"218":{},"219":{}},"component":{}}],["conceptu",{"_index":381,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["concurr",{"_index":285,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["configur",{"_index":227,"title":{"39-2":{},"39-3":{},"39-4":{},"39-5":{},"85-2":{},"85-3":{},"85-4":{},"85-5":{},"131-2":{},"131-3":{},"131-4":{},"131-5":{},"195-2":{},"195-3":{},"195-4":{},"195-5":{},"207-2":{},"207-3":{},"207-4":{},"207-5":{},"219-2":{},"219-3":{},"219-4":{},"219-5":{}},"name":{},"text":{"2":{},"13":{},"15":{},"29":{},"31":{},"36":{},"39":{},"43":{},"48":{},"59":{},"61":{},"75":{},"77":{},"82":{},"85":{},"89":{},"94":{},"105":{},"107":{},"121":{},"123":{},"128":{},"131":{},"135":{},"139":{},"153":{},"155":{},"169":{},"171":{},"185":{},"187":{},"192":{},"195":{},"199":{},"204":{},"207":{},"211":{},"216":{},"219":{},"223":{},"227":{},"231":{}},"component":{}}],["configurations.cr",{"_index":1114,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["conflict",{"_index":284,"title":{},"name":{},"text":{"2":{},"37":{},"41":{},"48":{},"83":{},"87":{},"94":{},"129":{},"133":{},"193":{},"197":{},"205":{},"209":{},"217":{},"221":{}},"component":{}}],["conform",{"_index":651,"title":{},"name":{},"text":{"21":{},"22":{},"26":{},"27":{},"67":{},"68":{},"72":{},"73":{},"113":{},"114":{},"118":{},"119":{},"145":{},"146":{},"150":{},"151":{},"161":{},"162":{},"166":{},"167":{},"177":{},"178":{},"182":{},"183":{}},"component":{}}],["connect",{"_index":191,"title":{},"name":{},"text":{"2":{},"17":{},"21":{},"29":{},"34":{},"37":{},"41":{},"48":{},"63":{},"67":{},"75":{},"80":{},"83":{},"87":{},"94":{},"109":{},"113":{},"121":{},"126":{},"129":{},"133":{},"141":{},"145":{},"153":{},"157":{},"161":{},"169":{},"173":{},"177":{},"185":{},"190":{},"193":{},"197":{},"202":{},"205":{},"209":{},"214":{},"217":{},"221":{}},"component":{}}],["consequ",{"_index":51,"title":{},"name":{},"text":{"1":{},"13":{},"15":{},"21":{},"25":{},"31":{},"43":{},"47":{},"59":{},"61":{},"67":{},"71":{},"77":{},"89":{},"93":{},"105":{},"107":{},"113":{},"117":{},"123":{},"135":{},"139":{},"145":{},"149":{},"155":{},"161":{},"165":{},"171":{},"177":{},"181":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["consid",{"_index":429,"title":{},"name":{},"text":{"9":{},"55":{},"101":{}},"component":{}}],["consist",{"_index":183,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["consol",{"_index":496,"title":{"13-1":{},"15-4":{},"31-4":{},"43-4":{},"59-1":{},"61-4":{},"77-4":{},"89-4":{},"105-1":{},"107-4":{},"123-4":{},"135-4":{},"139-4":{},"155-4":{},"171-4":{},"187-4":{},"199-4":{},"211-4":{},"223-4":{},"227-4":{},"231-4":{}},"name":{},"text":{"26":{},"29":{},"72":{},"75":{},"118":{},"121":{},"150":{},"153":{},"166":{},"169":{},"182":{},"185":{}},"component":{}}],["consum",{"_index":569,"title":{},"name":{},"text":{"17":{},"18":{},"22":{},"25":{},"26":{},"27":{},"40":{},"63":{},"64":{},"68":{},"71":{},"72":{},"73":{},"86":{},"109":{},"110":{},"114":{},"117":{},"118":{},"119":{},"132":{},"141":{},"142":{},"146":{},"149":{},"150":{},"151":{},"157":{},"158":{},"162":{},"165":{},"166":{},"167":{},"173":{},"174":{},"178":{},"181":{},"182":{},"183":{},"196":{},"208":{},"220":{}},"component":{}}],["consumpt",{"_index":1158,"title":{},"name":{},"text":{"37":{},"83":{},"129":{},"193":{},"205":{},"217":{}},"component":{}}],["contact",{"_index":6,"title":{"1-6":{},"47-6":{},"93-6":{}},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["contain",{"_index":129,"title":{},"name":{},"text":{"1":{},"12":{},"15":{},"18":{},"23":{},"31":{},"39":{},"43":{},"45":{},"47":{},"58":{},"61":{},"64":{},"69":{},"77":{},"85":{},"89":{},"91":{},"93":{},"104":{},"107":{},"110":{},"115":{},"123":{},"131":{},"135":{},"137":{},"139":{},"142":{},"147":{},"155":{},"158":{},"163":{},"171":{},"174":{},"179":{},"187":{},"195":{},"199":{},"207":{},"211":{},"219":{},"223":{},"225":{},"227":{},"229":{},"231":{},"233":{}},"component":{}}],["content",{"_index":304,"title":{},"name":{},"text":{"2":{},"17":{},"18":{},"21":{},"22":{},"28":{},"29":{},"41":{},"48":{},"63":{},"64":{},"67":{},"68":{},"74":{},"75":{},"87":{},"94":{},"109":{},"110":{},"113":{},"114":{},"120":{},"121":{},"133":{},"141":{},"142":{},"145":{},"146":{},"152":{},"153":{},"157":{},"158":{},"161":{},"162":{},"168":{},"169":{},"173":{},"174":{},"177":{},"178":{},"184":{},"185":{},"197":{},"209":{},"221":{}},"component":{}}],["contract",{"_index":807,"title":{},"name":{},"text":{"25":{},"71":{},"117":{},"149":{},"165":{},"181":{}},"component":{}}],["converg",{"_index":293,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["copi",{"_index":525,"title":{},"name":{},"text":{"13":{},"15":{},"31":{},"43":{},"59":{},"61":{},"77":{},"89":{},"105":{},"107":{},"123":{},"135":{},"139":{},"155":{},"171":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["core",{"_index":418,"title":{"12-3":{},"58-3":{},"104-3":{}},"name":{},"text":{"8":{},"12":{},"31":{},"54":{},"58":{},"77":{},"100":{},"104":{},"123":{},"187":{},"199":{},"211":{}},"component":{"187":{},"188":{},"189":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"198":{},"199":{},"200":{},"201":{},"202":{},"203":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"210":{},"211":{},"212":{},"213":{},"214":{},"215":{},"216":{},"217":{},"218":{},"219":{},"220":{},"221":{},"222":{}}}],["correct",{"_index":233,"title":{},"name":{},"text":{"2":{},"22":{},"35":{},"41":{},"48":{},"68":{},"81":{},"87":{},"94":{},"114":{},"127":{},"133":{},"146":{},"162":{},"178":{},"191":{},"197":{},"203":{},"209":{},"215":{},"221":{}},"component":{}}],["correspond",{"_index":144,"title":{},"name":{},"text":{"1":{},"8":{},"9":{},"22":{},"38":{},"40":{},"47":{},"54":{},"55":{},"68":{},"84":{},"86":{},"93":{},"100":{},"101":{},"114":{},"130":{},"132":{},"146":{},"162":{},"178":{},"194":{},"196":{},"206":{},"208":{},"218":{},"220":{}},"component":{}}],["coupl",{"_index":481,"title":{},"name":{},"text":{"12":{},"15":{},"58":{},"61":{},"104":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["cours",{"_index":551,"title":{"16":{},"25":{},"62":{},"71":{},"108":{},"117":{},"140":{},"149":{},"156":{},"165":{},"172":{},"181":{}},"name":{"16":{},"62":{},"108":{},"140":{},"156":{},"172":{}},"text":{"15":{},"20":{},"21":{},"22":{},"23":{},"25":{},"27":{},"38":{},"61":{},"66":{},"67":{},"68":{},"69":{},"71":{},"73":{},"84":{},"107":{},"112":{},"113":{},"114":{},"115":{},"117":{},"119":{},"130":{},"139":{},"144":{},"145":{},"146":{},"147":{},"149":{},"151":{},"155":{},"160":{},"161":{},"162":{},"163":{},"165":{},"167":{},"171":{},"176":{},"177":{},"178":{},"179":{},"181":{},"183":{},"194":{},"206":{},"218":{}},"component":{}}],["courses.modelserver.dump",{"_index":790,"title":{},"name":{},"text":{"24":{},"29":{},"70":{},"75":{},"116":{},"121":{},"148":{},"153":{},"164":{},"169":{},"180":{},"185":{}},"component":{}}],["cover",{"_index":552,"title":{},"name":{},"text":{"15":{},"20":{},"61":{},"66":{},"107":{},"112":{},"139":{},"144":{},"155":{},"160":{},"171":{},"176":{}},"component":{}}],["cp",{"_index":800,"title":{},"name":{},"text":{"24":{},"70":{},"116":{},"148":{},"164":{},"180":{}},"component":{}}],["craft",{"_index":572,"title":{},"name":{},"text":{"17":{},"63":{},"109":{},"141":{},"157":{},"173":{}},"component":{}}],["creat",{"_index":25,"title":{},"name":{},"text":{"1":{},"4":{},"9":{},"23":{},"34":{},"47":{},"50":{},"55":{},"69":{},"80":{},"93":{},"96":{},"101":{},"115":{},"126":{},"147":{},"163":{},"179":{},"190":{},"202":{},"214":{}},"component":{}}],["creation",{"_index":617,"title":{"19":{},"65":{},"111":{},"143":{},"159":{},"175":{}},"name":{},"text":{"20":{},"66":{},"112":{},"144":{},"160":{},"176":{}},"component":{}}],["credenti",{"_index":514,"title":{},"name":{},"text":{"13":{},"15":{},"31":{},"43":{},"59":{},"61":{},"77":{},"89":{},"105":{},"107":{},"123":{},"135":{},"139":{},"155":{},"171":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["cumbersom",{"_index":680,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["curat",{"_index":1294,"title":{},"name":{},"text":{"44":{},"90":{},"136":{},"224":{},"228":{},"232":{}},"component":{}}],["curl",{"_index":835,"title":{},"name":{},"text":{"26":{},"27":{},"72":{},"73":{},"118":{},"119":{},"150":{},"151":{},"166":{},"167":{},"182":{},"183":{}},"component":{}}],["current",{"_index":44,"title":{"12-1":{},"58-1":{},"104-1":{}},"name":{},"text":{"1":{},"2":{},"8":{},"15":{},"18":{},"25":{},"29":{},"40":{},"41":{},"47":{},"48":{},"54":{},"61":{},"64":{},"71":{},"75":{},"86":{},"87":{},"93":{},"94":{},"100":{},"107":{},"110":{},"117":{},"121":{},"132":{},"133":{},"139":{},"142":{},"149":{},"153":{},"155":{},"158":{},"165":{},"169":{},"171":{},"174":{},"181":{},"185":{},"196":{},"197":{},"208":{},"209":{},"220":{},"221":{}},"component":{}}],["custom",{"_index":876,"title":{},"name":{},"text":{"27":{},"73":{},"119":{},"151":{},"167":{},"183":{}},"component":{}}],["cycl",{"_index":357,"title":{"8-2":{},"54-2":{},"100-2":{}},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["d",{"_index":795,"title":{},"name":{},"text":{"24":{},"70":{},"116":{},"148":{},"164":{},"180":{}},"component":{}}],["dashboard",{"_index":559,"title":{"18":{},"22":{},"64":{},"68":{},"110":{},"114":{},"142":{},"146":{},"158":{},"162":{},"174":{},"178":{},"21-6":{},"22-2":{},"67-6":{},"68-2":{},"113-6":{},"114-2":{},"145-6":{},"146-2":{},"161-6":{},"162-2":{},"177-6":{},"178-2":{}},"name":{"22":{},"68":{},"114":{},"146":{},"162":{},"178":{}},"text":{"15":{},"17":{},"18":{},"20":{},"21":{},"22":{},"25":{},"26":{},"27":{},"28":{},"29":{},"61":{},"63":{},"64":{},"66":{},"67":{},"68":{},"71":{},"72":{},"73":{},"74":{},"75":{},"107":{},"109":{},"110":{},"112":{},"113":{},"114":{},"117":{},"118":{},"119":{},"120":{},"121":{},"139":{},"141":{},"142":{},"144":{},"145":{},"146":{},"149":{},"150":{},"151":{},"152":{},"153":{},"155":{},"157":{},"158":{},"160":{},"161":{},"162":{},"165":{},"166":{},"167":{},"168":{},"169":{},"171":{},"173":{},"174":{},"176":{},"177":{},"178":{},"181":{},"182":{},"183":{},"184":{},"185":{}},"component":{}}],["data",{"_index":200,"title":{},"name":{},"text":{"2":{},"17":{},"21":{},"26":{},"27":{},"34":{},"38":{},"41":{},"48":{},"63":{},"67":{},"72":{},"73":{},"80":{},"84":{},"87":{},"94":{},"109":{},"113":{},"118":{},"119":{},"126":{},"130":{},"133":{},"141":{},"145":{},"150":{},"151":{},"157":{},"161":{},"166":{},"167":{},"173":{},"177":{},"182":{},"183":{},"190":{},"194":{},"197":{},"202":{},"206":{},"209":{},"214":{},"218":{},"221":{}},"component":{}}],["database.properti",{"_index":1150,"title":{},"name":{},"text":{"36":{},"82":{},"128":{},"192":{},"204":{},"216":{}},"component":{}}],["date",{"_index":1196,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["dateandtim",{"_index":1194,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["day",{"_index":605,"title":{},"name":{},"text":{"18":{},"64":{},"110":{},"142":{},"158":{},"174":{}},"component":{}}],["debug",{"_index":1000,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["declar",{"_index":903,"title":{},"name":{},"text":{"28":{},"29":{},"39":{},"45":{},"74":{},"75":{},"85":{},"91":{},"120":{},"121":{},"131":{},"137":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{},"195":{},"207":{},"219":{},"225":{},"229":{},"233":{}},"component":{}}],["decoupl",{"_index":641,"title":{},"name":{},"text":{"21":{},"67":{},"113":{},"145":{},"161":{},"177":{}},"component":{}}],["dedic",{"_index":422,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["default",{"_index":247,"title":{"39-6":{},"85-6":{},"131-6":{},"195-6":{},"207-6":{},"219-6":{}},"name":{},"text":{"2":{},"22":{},"29":{},"34":{},"36":{},"39":{},"48":{},"68":{},"75":{},"80":{},"82":{},"85":{},"94":{},"114":{},"121":{},"126":{},"128":{},"131":{},"146":{},"153":{},"162":{},"169":{},"178":{},"185":{},"190":{},"192":{},"195":{},"202":{},"204":{},"207":{},"214":{},"216":{},"219":{}},"component":{}}],["defaultdispatch",{"_index":825,"title":{},"name":{},"text":{"26":{},"28":{},"29":{},"72":{},"74":{},"75":{},"118":{},"120":{},"121":{},"150":{},"152":{},"153":{},"166":{},"168":{},"169":{},"182":{},"184":{},"185":{}},"component":{}}],["defin",{"_index":417,"title":{},"name":{},"text":{"8":{},"12":{},"15":{},"17":{},"18":{},"21":{},"22":{},"26":{},"54":{},"58":{},"61":{},"63":{},"64":{},"67":{},"68":{},"72":{},"100":{},"104":{},"107":{},"109":{},"110":{},"113":{},"114":{},"118":{},"139":{},"141":{},"142":{},"145":{},"146":{},"150":{},"155":{},"157":{},"158":{},"161":{},"162":{},"166":{},"171":{},"173":{},"174":{},"177":{},"178":{},"182":{}},"component":{}}],["definit",{"_index":248,"title":{},"name":{},"text":{"2":{},"17":{},"21":{},"23":{},"48":{},"63":{},"67":{},"69":{},"94":{},"109":{},"113":{},"115":{},"141":{},"145":{},"147":{},"157":{},"161":{},"163":{},"173":{},"177":{},"179":{}},"component":{}}],["demo",{"_index":495,"title":{},"name":{},"text":{"12":{},"15":{},"58":{},"61":{},"104":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["dens",{"_index":476,"title":{},"name":{},"text":{"12":{},"58":{},"104":{}},"component":{}}],["depend",{"_index":446,"title":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"name":{},"text":{"10":{},"12":{},"21":{},"31":{},"35":{},"39":{},"45":{},"56":{},"58":{},"67":{},"77":{},"81":{},"85":{},"91":{},"102":{},"104":{},"113":{},"123":{},"127":{},"131":{},"137":{},"145":{},"161":{},"177":{},"187":{},"191":{},"195":{},"199":{},"203":{},"207":{},"211":{},"215":{},"219":{},"225":{},"229":{},"233":{}},"component":{}}],["dependson",{"_index":1243,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["dependson(resolvemp",{"_index":1122,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["deploy",{"_index":370,"title":{"21-8":{},"67-8":{},"113-8":{},"145-8":{},"161-8":{},"177-8":{}},"name":{},"text":{"8":{},"27":{},"54":{},"73":{},"100":{},"119":{},"151":{},"167":{},"183":{}},"component":{}}],["depth",{"_index":176,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["descend",{"_index":1079,"title":{},"name":{},"text":{"34":{},"80":{},"126":{},"190":{},"202":{},"214":{}},"component":{}}],["describ",{"_index":676,"title":{},"name":{},"text":{"23":{},"25":{},"28":{},"29":{},"69":{},"71":{},"74":{},"75":{},"115":{},"117":{},"120":{},"121":{},"147":{},"149":{},"152":{},"153":{},"163":{},"165":{},"168":{},"169":{},"179":{},"181":{},"184":{},"185":{}},"component":{}}],["descript",{"_index":459,"title":{},"name":{},"text":{"11":{},"12":{},"17":{},"20":{},"23":{},"26":{},"38":{},"39":{},"57":{},"58":{},"63":{},"66":{},"69":{},"72":{},"84":{},"85":{},"103":{},"104":{},"109":{},"112":{},"115":{},"118":{},"130":{},"131":{},"141":{},"144":{},"147":{},"150":{},"157":{},"160":{},"163":{},"166":{},"173":{},"176":{},"179":{},"182":{},"194":{},"195":{},"206":{},"207":{},"218":{},"219":{}},"component":{}}],["design",{"_index":326,"title":{},"name":{},"text":{"3":{},"37":{},"49":{},"83":{},"95":{},"129":{},"193":{},"205":{},"217":{}},"component":{}}],["detail",{"_index":73,"title":{},"name":{},"text":{"1":{},"3":{},"21":{},"28":{},"29":{},"41":{},"47":{},"49":{},"67":{},"74":{},"75":{},"87":{},"93":{},"95":{},"113":{},"120":{},"121":{},"133":{},"145":{},"152":{},"153":{},"161":{},"168":{},"169":{},"177":{},"184":{},"185":{},"197":{},"209":{},"221":{}},"component":{}}],["detect",{"_index":307,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["determin",{"_index":686,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["develop",{"_index":10,"title":{"8":{},"54":{},"100":{},"8-1":{},"41-3":{},"54-1":{},"87-3":{},"100-1":{},"133-3":{},"197-3":{},"209-3":{},"221-3":{}},"name":{},"text":{"1":{},"3":{},"4":{},"8":{},"15":{},"21":{},"25":{},"28":{},"29":{},"36":{},"47":{},"49":{},"50":{},"54":{},"61":{},"67":{},"71":{},"74":{},"75":{},"82":{},"93":{},"95":{},"96":{},"100":{},"107":{},"113":{},"117":{},"120":{},"121":{},"128":{},"139":{},"145":{},"149":{},"152":{},"153":{},"155":{},"161":{},"165":{},"168":{},"169":{},"171":{},"177":{},"181":{},"184":{},"185":{},"192":{},"204":{},"216":{}},"component":{}}],["diagram",{"_index":335,"title":{},"name":{},"text":{"3":{},"49":{},"95":{}},"component":{}}],["differ",{"_index":92,"title":{},"name":{},"text":{"1":{},"2":{},"18":{},"20":{},"21":{},"36":{},"41":{},"45":{},"47":{},"48":{},"64":{},"66":{},"67":{},"82":{},"87":{},"91":{},"93":{},"94":{},"110":{},"112":{},"113":{},"128":{},"133":{},"137":{},"142":{},"144":{},"145":{},"158":{},"160":{},"161":{},"174":{},"176":{},"177":{},"192":{},"197":{},"204":{},"209":{},"216":{},"221":{},"225":{},"229":{},"233":{}},"component":{}}],["direct",{"_index":351,"title":{},"name":{},"text":{"7":{},"53":{},"99":{}},"component":{}}],["directli",{"_index":76,"title":{},"name":{},"text":{"1":{},"21":{},"25":{},"35":{},"47":{},"67":{},"71":{},"81":{},"93":{},"113":{},"117":{},"127":{},"145":{},"149":{},"161":{},"165":{},"177":{},"181":{},"191":{},"203":{},"215":{}},"component":{}}],["directori",{"_index":1111,"title":{},"name":{},"text":{"35":{},"39":{},"81":{},"85":{},"127":{},"131":{},"191":{},"195":{},"203":{},"207":{},"215":{},"219":{}},"component":{}}],["disabl",{"_index":916,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["discuss",{"_index":341,"title":{},"name":{},"text":{"5":{},"51":{},"97":{}},"component":{}}],["display",{"_index":592,"title":{},"name":{},"text":{"18":{},"64":{},"110":{},"142":{},"158":{},"174":{}},"component":{}}],["distribut",{"_index":17,"title":{},"name":{},"text":{"1":{},"2":{},"12":{},"47":{},"48":{},"58":{},"93":{},"94":{},"104":{}},"component":{}}],["dive",{"_index":75,"title":{},"name":{},"text":{"1":{},"15":{},"47":{},"61":{},"93":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["diverg",{"_index":305,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["diátaxis[2",{"_index":104,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["djdbc.url=$jdbc_url",{"_index":799,"title":{},"name":{},"text":{"24":{},"70":{},"116":{},"148":{},"164":{},"180":{}},"component":{}}],["doc",{"_index":432,"title":{},"name":{},"text":{"10":{},"37":{},"39":{},"40":{},"41":{},"56":{},"83":{},"85":{},"86":{},"87":{},"102":{},"129":{},"131":{},"132":{},"133":{},"193":{},"195":{},"196":{},"197":{},"205":{},"207":{},"208":{},"209":{},"217":{},"219":{},"220":{},"221":{}},"component":{}}],["doc/model",{"_index":1290,"title":{},"name":{},"text":{"41":{},"87":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["docker",{"_index":213,"title":{"21-8":{},"67-8":{},"113-8":{},"145-8":{},"161-8":{},"177-8":{}},"name":{},"text":{"2":{},"24":{},"48":{},"70":{},"94":{},"116":{},"148":{},"164":{},"180":{}},"component":{}}],["document",{"_index":1,"title":{"1-2":{},"47-2":{},"93-2":{}},"name":{},"text":{"1":{},"3":{},"8":{},"9":{},"17":{},"21":{},"22":{},"41":{},"45":{},"47":{},"49":{},"54":{},"55":{},"63":{},"67":{},"68":{},"87":{},"91":{},"93":{},"95":{},"100":{},"101":{},"109":{},"113":{},"114":{},"133":{},"137":{},"141":{},"145":{},"146":{},"157":{},"161":{},"162":{},"173":{},"177":{},"178":{},"197":{},"209":{},"221":{},"225":{},"229":{},"233":{}},"component":{}}],["doesn’t",{"_index":315,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["domain",{"_index":19,"title":{"16":{},"23":{},"25":{},"62":{},"69":{},"71":{},"108":{},"115":{},"117":{},"140":{},"147":{},"149":{},"156":{},"163":{},"165":{},"172":{},"179":{},"181":{},"21-3":{},"21-4":{},"67-3":{},"67-4":{},"113-3":{},"113-4":{},"145-3":{},"145-4":{},"161-3":{},"161-4":{},"177-3":{},"177-4":{}},"name":{"16":{},"62":{},"108":{},"140":{},"156":{},"172":{}},"text":{"1":{},"3":{},"4":{},"15":{},"17":{},"18":{},"20":{},"21":{},"25":{},"40":{},"47":{},"49":{},"50":{},"61":{},"63":{},"64":{},"66":{},"67":{},"71":{},"86":{},"93":{},"95":{},"96":{},"107":{},"109":{},"110":{},"112":{},"113":{},"117":{},"132":{},"139":{},"141":{},"142":{},"144":{},"145":{},"149":{},"155":{},"157":{},"158":{},"160":{},"161":{},"165":{},"171":{},"173":{},"174":{},"176":{},"177":{},"181":{},"196":{},"208":{},"220":{}},"component":{}}],["domain[1",{"_index":804,"title":{},"name":{},"text":{"25":{},"71":{},"117":{},"149":{},"165":{},"181":{}},"component":{}}],["done",{"_index":364,"title":{},"name":{},"text":{"8":{},"28":{},"29":{},"34":{},"35":{},"54":{},"74":{},"75":{},"80":{},"81":{},"100":{},"120":{},"121":{},"126":{},"127":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{},"190":{},"191":{},"202":{},"203":{},"214":{},"215":{}},"component":{}}],["download",{"_index":448,"title":{},"name":{},"text":{"10":{},"28":{},"29":{},"56":{},"74":{},"75":{},"102":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["dsl",{"_index":327,"title":{},"name":{},"text":{"3":{},"49":{},"95":{}},"component":{}}],["dt_socket",{"_index":1033,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["dump",{"_index":970,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["dumpin",{"_index":789,"title":{},"name":{},"text":{"24":{},"29":{},"70":{},"75":{},"116":{},"121":{},"148":{},"153":{},"164":{},"169":{},"180":{},"185":{}},"component":{}}],["dure",{"_index":782,"title":{},"name":{},"text":{"23":{},"36":{},"45":{},"69":{},"82":{},"91":{},"115":{},"128":{},"137":{},"147":{},"163":{},"179":{},"192":{},"204":{},"216":{},"225":{},"229":{},"233":{}},"component":{}}],["e",{"_index":242,"title":{},"name":{},"text":{"2":{},"18":{},"45":{},"48":{},"64":{},"91":{},"94":{},"110":{},"137":{},"142":{},"158":{},"174":{},"225":{},"229":{},"233":{}},"component":{}}],["e.g",{"_index":387,"title":{},"name":{},"text":{"8":{},"22":{},"38":{},"39":{},"45":{},"54":{},"68":{},"84":{},"85":{},"91":{},"100":{},"114":{},"130":{},"131":{},"137":{},"146":{},"162":{},"178":{},"194":{},"195":{},"206":{},"207":{},"218":{},"219":{},"225":{},"229":{},"233":{}},"component":{}}],["ea76",{"_index":846,"title":{},"name":{},"text":{"26":{},"27":{},"72":{},"73":{},"118":{},"119":{},"150":{},"151":{},"166":{},"167":{},"182":{},"183":{}},"component":{}}],["each",{"_index":382,"title":{},"name":{},"text":{"8":{},"12":{},"17":{},"18":{},"21":{},"23":{},"43":{},"44":{},"54":{},"58":{},"63":{},"64":{},"67":{},"69":{},"89":{},"90":{},"100":{},"104":{},"109":{},"110":{},"113":{},"115":{},"135":{},"136":{},"141":{},"142":{},"145":{},"147":{},"157":{},"158":{},"161":{},"163":{},"173":{},"174":{},"177":{},"179":{},"223":{},"224":{},"227":{},"228":{},"231":{},"232":{}},"component":{}}],["earli",{"_index":380,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["easi",{"_index":314,"title":{},"name":{},"text":{"2":{},"17":{},"35":{},"41":{},"48":{},"63":{},"81":{},"87":{},"94":{},"109":{},"127":{},"133":{},"141":{},"157":{},"173":{},"191":{},"197":{},"203":{},"209":{},"215":{},"221":{}},"component":{}}],["easier",{"_index":401,"title":{},"name":{},"text":{"8":{},"23":{},"54":{},"69":{},"100":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["easiest",{"_index":523,"title":{},"name":{},"text":{"13":{},"15":{},"31":{},"43":{},"59":{},"61":{},"77":{},"89":{},"105":{},"107":{},"123":{},"135":{},"139":{},"155":{},"171":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["easili",{"_index":306,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["edit",{"_index":328,"title":{},"name":{},"text":{"3":{},"15":{},"18":{},"22":{},"49":{},"61":{},"64":{},"68":{},"95":{},"107":{},"110":{},"114":{},"139":{},"142":{},"146":{},"155":{},"158":{},"162":{},"171":{},"174":{},"178":{}},"component":{}}],["editor",{"_index":179,"title":{"2-2":{},"48-2":{},"94-2":{}},"name":{},"text":{"2":{},"3":{},"10":{},"15":{},"23":{},"41":{},"48":{},"49":{},"56":{},"61":{},"69":{},"87":{},"94":{},"95":{},"102":{},"107":{},"115":{},"133":{},"139":{},"147":{},"155":{},"163":{},"171":{},"179":{},"197":{},"209":{},"221":{}},"component":{}}],["educ",{"_index":636,"title":{},"name":{},"text":{"21":{},"25":{},"67":{},"71":{},"113":{},"117":{},"145":{},"149":{},"161":{},"165":{},"177":{},"181":{}},"component":{}}],["einstein",{"_index":884,"title":{},"name":{},"text":{"27":{},"73":{},"119":{},"151":{},"167":{},"183":{}},"component":{}}],["element",{"_index":1257,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["email",{"_index":159,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["enabl",{"_index":492,"title":{},"name":{},"text":{"12":{},"15":{},"35":{},"58":{},"61":{},"81":{},"104":{},"107":{},"127":{},"139":{},"155":{},"171":{},"191":{},"203":{},"215":{}},"component":{}}],["encod",{"_index":996,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["end",{"_index":295,"title":{},"name":{},"text":{"2":{},"9":{},"29":{},"41":{},"48":{},"55":{},"75":{},"87":{},"94":{},"101":{},"121":{},"133":{},"153":{},"169":{},"185":{},"197":{},"209":{},"221":{}},"component":{}}],["endpoint",{"_index":573,"title":{},"name":{},"text":{"17":{},"26":{},"63":{},"72":{},"109":{},"118":{},"141":{},"150":{},"157":{},"166":{},"173":{},"182":{}},"component":{}}],["enforc",{"_index":1296,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["enforcedplatform",{"_index":1298,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["engin",{"_index":167,"title":{},"name":{},"text":{"1":{},"21":{},"25":{},"47":{},"67":{},"71":{},"93":{},"113":{},"117":{},"145":{},"149":{},"161":{},"165":{},"177":{},"181":{}},"component":{}}],["ensur",{"_index":1110,"title":{},"name":{},"text":{"35":{},"44":{},"81":{},"90":{},"127":{},"136":{},"191":{},"203":{},"215":{},"224":{},"228":{},"232":{}},"component":{}}],["entir",{"_index":897,"title":{},"name":{},"text":{"28":{},"29":{},"34":{},"74":{},"75":{},"80":{},"120":{},"121":{},"126":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{},"190":{},"202":{},"214":{}},"component":{}}],["entri",{"_index":534,"title":{"15-7":{},"61-7":{},"107-7":{},"139-7":{},"155-7":{},"171-7":{}},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["envis",{"_index":548,"title":{},"name":{},"text":{"15":{},"18":{},"61":{},"64":{},"107":{},"110":{},"139":{},"142":{},"155":{},"158":{},"171":{},"174":{}},"component":{}}],["error",{"_index":138,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["establish",{"_index":22,"title":{},"name":{},"text":{"1":{},"4":{},"47":{},"50":{},"93":{},"96":{}},"component":{}}],["even",{"_index":257,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["eventloopgroupproxi",{"_index":1064,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["eventu",{"_index":806,"title":{},"name":{},"text":{"25":{},"71":{},"117":{},"149":{},"165":{},"181":{}},"component":{}}],["everyon",{"_index":871,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["everyth",{"_index":489,"title":{},"name":{},"text":{"12":{},"15":{},"17":{},"21":{},"58":{},"61":{},"63":{},"67":{},"104":{},"107":{},"109":{},"113":{},"139":{},"141":{},"145":{},"155":{},"157":{},"161":{},"171":{},"173":{},"177":{}},"component":{}}],["exactli",{"_index":149,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["exampl",{"_index":394,"title":{"39-7":{},"85-7":{},"131-7":{},"195-7":{},"207-7":{},"219-7":{}},"name":{},"text":{"8":{},"12":{},"13":{},"15":{},"17":{},"21":{},"23":{},"25":{},"26":{},"27":{},"29":{},"31":{},"35":{},"43":{},"45":{},"54":{},"58":{},"59":{},"61":{},"63":{},"67":{},"69":{},"71":{},"72":{},"73":{},"75":{},"77":{},"81":{},"89":{},"91":{},"100":{},"104":{},"105":{},"107":{},"109":{},"113":{},"115":{},"117":{},"118":{},"119":{},"121":{},"123":{},"127":{},"135":{},"137":{},"139":{},"141":{},"145":{},"147":{},"149":{},"150":{},"151":{},"153":{},"155":{},"157":{},"161":{},"163":{},"165":{},"166":{},"167":{},"169":{},"171":{},"173":{},"177":{},"179":{},"181":{},"182":{},"183":{},"185":{},"187":{},"191":{},"199":{},"203":{},"211":{},"215":{},"223":{},"225":{},"227":{},"229":{},"231":{},"233":{}},"component":{}}],["example@0.0.0",{"_index":925,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["except",{"_index":713,"title":{},"name":{},"text":{"23":{},"34":{},"69":{},"80":{},"115":{},"126":{},"147":{},"163":{},"179":{},"190":{},"202":{},"214":{}},"component":{}}],["execut",{"_index":921,"title":{},"name":{},"text":{"28":{},"29":{},"39":{},"74":{},"75":{},"85":{},"120":{},"121":{},"131":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{},"195":{},"207":{},"219":{}},"component":{}}],["exemplari",{"_index":1169,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["exist",{"_index":29,"title":{},"name":{},"text":{"1":{},"4":{},"8":{},"12":{},"35":{},"47":{},"50":{},"54":{},"58":{},"81":{},"93":{},"96":{},"100":{},"104":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["expect",{"_index":669,"title":{},"name":{},"text":{"22":{},"28":{},"29":{},"68":{},"74":{},"75":{},"114":{},"120":{},"121":{},"146":{},"152":{},"153":{},"162":{},"168":{},"169":{},"178":{},"184":{},"185":{}},"component":{}}],["experiment",{"_index":59,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["expert",{"_index":20,"title":{},"name":{},"text":{"1":{},"4":{},"47":{},"50":{},"93":{},"96":{}},"component":{}}],["explain",{"_index":620,"title":{},"name":{},"text":{"20":{},"66":{},"112":{},"144":{},"160":{},"176":{}},"component":{}}],["explan",{"_index":125,"title":{"5":{},"32":{},"51":{},"78":{},"97":{},"124":{},"188":{},"200":{},"212":{}},"name":{},"text":{"1":{},"5":{},"15":{},"47":{},"51":{},"61":{},"93":{},"97":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["explor",{"_index":33,"title":{},"name":{},"text":{"1":{},"4":{},"28":{},"29":{},"47":{},"50":{},"74":{},"75":{},"93":{},"96":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["expor",{"_index":1167,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["export",{"_index":438,"title":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"name":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"text":{"10":{},"23":{},"38":{},"39":{},"56":{},"69":{},"84":{},"85":{},"102":{},"115":{},"130":{},"131":{},"147":{},"163":{},"179":{},"194":{},"195":{},"206":{},"207":{},"218":{},"219":{}},"component":{}}],["exportmodul",{"_index":1254,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["exportmodules(\"jetbrains.mps.runtim",{"_index":1278,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["expos",{"_index":574,"title":{},"name":{},"text":{"17":{},"21":{},"26":{},"63":{},"67":{},"72":{},"109":{},"113":{},"118":{},"141":{},"145":{},"150":{},"157":{},"161":{},"166":{},"173":{},"177":{},"182":{}},"component":{}}],["express",{"_index":679,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["extend",{"_index":715,"title":{},"name":{},"text":{"23":{},"38":{},"69":{},"84":{},"115":{},"130":{},"147":{},"163":{},"179":{},"194":{},"206":{},"218":{}},"component":{}}],["extens",{"_index":388,"title":{},"name":{},"text":{"8":{},"10":{},"54":{},"56":{},"100":{},"102":{}},"component":{}}],["extern",{"_index":229,"title":{},"name":{},"text":{"2":{},"12":{},"15":{},"39":{},"48":{},"58":{},"61":{},"85":{},"94":{},"104":{},"107":{},"131":{},"139":{},"155":{},"171":{},"195":{},"207":{},"219":{}},"component":{}}],["extra",{"_index":632,"title":{},"name":{},"text":{"21":{},"67":{},"113":{},"145":{},"161":{},"177":{}},"component":{}}],["fail",{"_index":781,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["fairli",{"_index":674,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["fallback",{"_index":425,"title":{"9":{},"55":{},"101":{}},"name":{},"text":{"9":{},"29":{},"55":{},"75":{},"101":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["fals",{"_index":718,"title":{},"name":{},"text":{"23":{},"26":{},"29":{},"38":{},"69":{},"72":{},"75":{},"84":{},"115":{},"118":{},"121":{},"130":{},"147":{},"150":{},"153":{},"163":{},"166":{},"169":{},"179":{},"182":{},"185":{},"194":{},"206":{},"218":{}},"component":{}}],["fanci",{"_index":813,"title":{},"name":{},"text":{"25":{},"71":{},"117":{},"149":{},"165":{},"181":{}},"component":{}}],["faq",{"_index":83,"title":{},"name":{"6":{},"52":{},"98":{}},"text":{"1":{},"47":{},"93":{}},"component":{}}],["fast",{"_index":311,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["fatjar",{"_index":983,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["fatjar/1.3.2/1e6502c0e8282b1fe2c06824ad43f4d7270f20d7/model",{"_index":982,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["featur",{"_index":494,"title":{},"name":{},"text":{"12":{},"15":{},"37":{},"45":{},"58":{},"61":{},"83":{},"91":{},"104":{},"107":{},"129":{},"137":{},"139":{},"155":{},"171":{},"193":{},"205":{},"217":{},"225":{},"229":{},"233":{}},"component":{}}],["feedback",{"_index":160,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["figur",{"_index":655,"title":{},"name":{},"text":{"22":{},"68":{},"114":{},"146":{},"162":{},"178":{}},"component":{}}],["file",{"_index":267,"title":{},"name":{},"text":{"2":{},"13":{},"15":{},"25":{},"26":{},"28":{},"29":{},"31":{},"35":{},"38":{},"39":{},"40":{},"41":{},"43":{},"48":{},"59":{},"61":{},"71":{},"72":{},"74":{},"75":{},"77":{},"81":{},"84":{},"85":{},"86":{},"87":{},"89":{},"94":{},"105":{},"107":{},"117":{},"118":{},"120":{},"121":{},"123":{},"127":{},"130":{},"131":{},"132":{},"133":{},"135":{},"139":{},"149":{},"150":{},"152":{},"153":{},"155":{},"165":{},"166":{},"168":{},"169":{},"171":{},"181":{},"182":{},"184":{},"185":{},"187":{},"191":{},"194":{},"195":{},"196":{},"197":{},"199":{},"203":{},"206":{},"207":{},"208":{},"209":{},"211":{},"215":{},"218":{},"219":{},"220":{},"221":{},"223":{},"227":{},"231":{}},"component":{}}],["file(\"build/kotlin_gen",{"_index":1274,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["file(\"build/ts_gen",{"_index":1276,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["file(\"path/to/json/dir",{"_index":1226,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["file(\"path/to/mps/hom",{"_index":1273,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["filter",{"_index":1091,"title":{},"name":{},"text":{"34":{},"35":{},"80":{},"81":{},"126":{},"127":{},"190":{},"191":{},"202":{},"203":{},"214":{},"215":{}},"component":{}}],["final",{"_index":42,"title":{},"name":{},"text":{"1":{},"23":{},"47":{},"69":{},"93":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["find",{"_index":71,"title":{},"name":{},"text":{"1":{},"29":{},"47":{},"75":{},"93":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["first",{"_index":238,"title":{},"name":{},"text":{"2":{},"8":{},"13":{},"15":{},"25":{},"28":{},"29":{},"31":{},"39":{},"43":{},"48":{},"54":{},"59":{},"61":{},"71":{},"74":{},"75":{},"77":{},"85":{},"89":{},"94":{},"100":{},"105":{},"107":{},"117":{},"120":{},"121":{},"123":{},"131":{},"135":{},"139":{},"149":{},"152":{},"153":{},"155":{},"165":{},"168":{},"169":{},"171":{},"181":{},"184":{},"185":{},"187":{},"195":{},"199":{},"207":{},"211":{},"219":{},"223":{},"227":{},"231":{}},"component":{}}],["fix",{"_index":313,"title":{},"name":{},"text":{"2":{},"23":{},"41":{},"48":{},"69":{},"87":{},"94":{},"115":{},"133":{},"147":{},"163":{},"179":{},"197":{},"209":{},"221":{}},"component":{}}],["flexibl",{"_index":628,"title":{},"name":{},"text":{"21":{},"67":{},"113":{},"145":{},"161":{},"177":{}},"component":{}}],["focu",{"_index":484,"title":{},"name":{},"text":{"12":{},"15":{},"58":{},"61":{},"104":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["folder",{"_index":503,"title":{},"name":{},"text":{"13":{},"15":{},"17":{},"22":{},"26":{},"27":{},"28":{},"29":{},"31":{},"35":{},"43":{},"59":{},"61":{},"63":{},"68":{},"72":{},"73":{},"74":{},"75":{},"77":{},"81":{},"89":{},"105":{},"107":{},"109":{},"114":{},"118":{},"119":{},"120":{},"121":{},"123":{},"127":{},"135":{},"139":{},"141":{},"146":{},"150":{},"151":{},"152":{},"153":{},"155":{},"157":{},"162":{},"166":{},"167":{},"168":{},"169":{},"171":{},"173":{},"178":{},"182":{},"183":{},"184":{},"185":{},"187":{},"191":{},"199":{},"203":{},"211":{},"215":{},"223":{},"227":{},"231":{}},"component":{}}],["follow",{"_index":66,"title":{},"name":{},"text":{"1":{},"8":{},"12":{},"13":{},"15":{},"21":{},"24":{},"25":{},"31":{},"35":{},"39":{},"43":{},"45":{},"47":{},"54":{},"58":{},"59":{},"61":{},"67":{},"70":{},"71":{},"77":{},"81":{},"85":{},"89":{},"91":{},"93":{},"100":{},"104":{},"105":{},"107":{},"113":{},"116":{},"117":{},"123":{},"127":{},"131":{},"135":{},"137":{},"139":{},"145":{},"148":{},"149":{},"155":{},"161":{},"164":{},"165":{},"171":{},"177":{},"180":{},"181":{},"187":{},"191":{},"195":{},"199":{},"203":{},"207":{},"211":{},"215":{},"219":{},"223":{},"225":{},"227":{},"229":{},"231":{},"233":{}},"component":{}}],["form",{"_index":467,"title":{},"name":{},"text":{"12":{},"58":{},"104":{}},"component":{}}],["format",{"_index":273,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["forward",{"_index":232,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["found",{"_index":135,"title":{},"name":{},"text":{"1":{},"9":{},"29":{},"47":{},"55":{},"75":{},"93":{},"101":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["four",{"_index":107,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["framework",{"_index":3,"title":{"1-3":{},"1-4":{},"47-3":{},"47-4":{},"93-3":{},"93-4":{}},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["frameworks/tool",{"_index":488,"title":{},"name":{},"text":{"12":{},"15":{},"58":{},"61":{},"104":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["frequent",{"_index":348,"title":{"6":{},"52":{},"98":{}},"name":{},"text":{},"component":{}}],["friction",{"_index":18,"title":{},"name":{},"text":{"1":{},"4":{},"47":{},"50":{},"93":{},"96":{}},"component":{}}],["from(mps.resolve().map",{"_index":1119,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["full",{"_index":88,"title":{"21-1":{},"67-1":{},"113-1":{},"145-1":{},"161-1":{},"177-1":{}},"name":{},"text":{"1":{},"18":{},"21":{},"47":{},"64":{},"67":{},"93":{},"110":{},"113":{},"142":{},"145":{},"158":{},"161":{},"174":{},"177":{}},"component":{}}],["fulli",{"_index":1247,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["function",{"_index":817,"title":{},"name":{},"text":{"26":{},"39":{},"72":{},"85":{},"118":{},"131":{},"150":{},"166":{},"182":{},"195":{},"207":{},"219":{}},"component":{}}],["further",{"_index":416,"title":{},"name":{},"text":{"8":{},"35":{},"38":{},"54":{},"81":{},"84":{},"100":{},"127":{},"130":{},"191":{},"194":{},"203":{},"206":{},"215":{},"218":{}},"component":{}}],["furthermor",{"_index":1293,"title":{},"name":{},"text":{"44":{},"90":{},"136":{},"224":{},"228":{},"232":{}},"component":{}}],["futur",{"_index":784,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["g",{"_index":1303,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["gain",{"_index":61,"title":{},"name":{},"text":{"1":{},"8":{},"47":{},"54":{},"93":{},"100":{}},"component":{}}],["gen",{"_index":439,"title":{},"name":{"35":{},"39":{},"40":{},"81":{},"85":{},"86":{},"127":{},"131":{},"132":{},"191":{},"195":{},"196":{},"203":{},"207":{},"208":{},"215":{},"219":{},"220":{}},"text":{"10":{},"12":{},"23":{},"31":{},"35":{},"39":{},"40":{},"56":{},"58":{},"69":{},"77":{},"81":{},"85":{},"86":{},"102":{},"104":{},"115":{},"123":{},"127":{},"131":{},"132":{},"147":{},"163":{},"179":{},"187":{},"191":{},"195":{},"196":{},"199":{},"203":{},"207":{},"208":{},"211":{},"215":{},"219":{},"220":{}},"component":{}}],["gen.gradl",{"_index":1105,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["gen.gradle.plugin",{"_index":443,"title":{},"name":{},"text":{"10":{},"39":{},"56":{},"85":{},"102":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["gener",{"_index":383,"title":{"23":{},"35":{},"39":{},"40":{},"69":{},"81":{},"85":{},"86":{},"115":{},"127":{},"131":{},"132":{},"147":{},"163":{},"179":{},"191":{},"195":{},"196":{},"203":{},"207":{},"208":{},"215":{},"219":{},"220":{},"21-3":{},"23-2":{},"45-1":{},"67-3":{},"69-2":{},"91-1":{},"113-3":{},"115-2":{},"137-1":{},"145-3":{},"147-2":{},"161-3":{},"163-2":{},"177-3":{},"179-2":{},"225-1":{},"229-1":{},"233-1":{}},"name":{},"text":{"8":{},"13":{},"15":{},"17":{},"21":{},"23":{},"25":{},"27":{},"28":{},"29":{},"31":{},"35":{},"38":{},"39":{},"40":{},"43":{},"54":{},"59":{},"61":{},"63":{},"67":{},"69":{},"71":{},"73":{},"74":{},"75":{},"77":{},"81":{},"84":{},"85":{},"86":{},"89":{},"100":{},"105":{},"107":{},"109":{},"113":{},"115":{},"117":{},"119":{},"120":{},"121":{},"123":{},"127":{},"130":{},"131":{},"132":{},"135":{},"139":{},"141":{},"145":{},"147":{},"149":{},"151":{},"152":{},"153":{},"155":{},"157":{},"161":{},"163":{},"165":{},"167":{},"168":{},"169":{},"171":{},"173":{},"177":{},"179":{},"181":{},"183":{},"184":{},"185":{},"187":{},"191":{},"194":{},"195":{},"196":{},"199":{},"203":{},"206":{},"207":{},"208":{},"211":{},"215":{},"218":{},"219":{},"220":{},"223":{},"227":{},"231":{}},"component":{}}],["get",{"_index":533,"title":{"15-2":{},"31-2":{},"43-2":{},"61-2":{},"77-2":{},"89-2":{},"107-2":{},"123-2":{},"135-2":{},"139-2":{},"155-2":{},"171-2":{},"187-2":{},"199-2":{},"211-2":{},"223-2":{},"227-2":{},"231-2":{}},"name":{},"text":{},"component":{}}],["getchildren",{"_index":774,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["gethasremoteequip",{"_index":757,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["getinod",{"_index":743,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["getinode().getpropertyvalue(\"hasremoteequip",{"_index":758,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["getinode().getpropertyvalue(\"maxplac",{"_index":750,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["getinode().setpropertyvalue(\"hasremoteequip",{"_index":761,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["getinode().setpropertyvalue(\"maxplac",{"_index":755,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["getmaxplac",{"_index":747,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["getproperti",{"_index":773,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["getrefer",{"_index":775,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["ghp",{"_index":433,"title":{},"name":{},"text":{"10":{},"56":{},"102":{}},"component":{}}],["git",{"_index":271,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["githhub",{"_index":513,"title":{},"name":{},"text":{"13":{},"15":{},"31":{},"43":{},"59":{},"61":{},"77":{},"89":{},"105":{},"107":{},"123":{},"135":{},"139":{},"155":{},"171":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["github",{"_index":365,"title":{"13-3":{},"15-6":{},"31-6":{},"43-6":{},"59-3":{},"61-6":{},"77-6":{},"89-6":{},"105-3":{},"107-6":{},"123-6":{},"135-6":{},"139-6":{},"155-6":{},"171-6":{},"187-6":{},"199-6":{},"211-6":{},"223-6":{},"227-6":{},"231-6":{}},"name":{},"text":{"8":{},"13":{},"15":{},"31":{},"37":{},"38":{},"39":{},"40":{},"41":{},"43":{},"54":{},"59":{},"61":{},"77":{},"83":{},"84":{},"85":{},"86":{},"87":{},"89":{},"100":{},"105":{},"107":{},"123":{},"129":{},"130":{},"131":{},"132":{},"133":{},"135":{},"139":{},"155":{},"171":{},"187":{},"193":{},"194":{},"195":{},"196":{},"197":{},"199":{},"205":{},"206":{},"207":{},"208":{},"209":{},"211":{},"217":{},"218":{},"219":{},"220":{},"221":{},"223":{},"227":{},"231":{}},"component":{}}],["gitui",{"_index":455,"title":{},"name":{},"text":{"10":{},"56":{},"102":{}},"component":{}}],["give",{"_index":84,"title":{},"name":{},"text":{"1":{},"2":{},"15":{},"47":{},"48":{},"61":{},"93":{},"94":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["given",{"_index":619,"title":{},"name":{},"text":{"20":{},"21":{},"40":{},"66":{},"67":{},"86":{},"112":{},"113":{},"132":{},"144":{},"145":{},"160":{},"161":{},"176":{},"177":{},"196":{},"208":{},"220":{}},"component":{}}],["global",{"_index":899,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["glossari",{"_index":5,"title":{"3":{},"49":{},"95":{},"1-5":{},"47-5":{},"93-5":{}},"name":{"3":{},"49":{},"95":{}},"text":{"1":{},"3":{},"47":{},"49":{},"93":{},"95":{}},"component":{}}],["go",{"_index":672,"title":{},"name":{},"text":{"22":{},"68":{},"114":{},"146":{},"162":{},"178":{}},"component":{}}],["goal",{"_index":340,"title":{"4":{},"50":{},"96":{}},"name":{"4":{},"50":{},"96":{}},"text":{"7":{},"8":{},"15":{},"53":{},"54":{},"61":{},"99":{},"100":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["googl",{"_index":236,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["gpr.key",{"_index":522,"title":{},"name":{},"text":{"13":{},"15":{},"31":{},"43":{},"59":{},"61":{},"77":{},"89":{},"105":{},"107":{},"123":{},"135":{},"139":{},"155":{},"171":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["gpr.user",{"_index":521,"title":{},"name":{},"text":{"13":{},"15":{},"31":{},"43":{},"59":{},"61":{},"77":{},"89":{},"105":{},"107":{},"123":{},"135":{},"139":{},"155":{},"171":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["gradl",{"_index":441,"title":{"13":{},"35":{},"39":{},"44":{},"59":{},"81":{},"85":{},"90":{},"105":{},"127":{},"131":{},"136":{},"191":{},"195":{},"203":{},"207":{},"215":{},"219":{},"224":{},"228":{},"232":{},"15-3":{},"31-3":{},"43-3":{},"61-3":{},"77-3":{},"89-3":{},"107-3":{},"123-3":{},"135-3":{},"139-3":{},"155-3":{},"171-3":{},"187-3":{},"199-3":{},"211-3":{},"223-3":{},"227-3":{},"231-3":{}},"name":{"35":{},"39":{},"81":{},"85":{},"127":{},"131":{},"191":{},"195":{},"203":{},"207":{},"215":{},"219":{}},"text":{"10":{},"12":{},"13":{},"15":{},"17":{},"22":{},"24":{},"26":{},"27":{},"28":{},"29":{},"31":{},"35":{},"39":{},"40":{},"43":{},"44":{},"45":{},"56":{},"58":{},"59":{},"61":{},"63":{},"68":{},"70":{},"72":{},"73":{},"74":{},"75":{},"77":{},"81":{},"85":{},"86":{},"89":{},"90":{},"91":{},"102":{},"104":{},"105":{},"107":{},"109":{},"114":{},"116":{},"118":{},"119":{},"120":{},"121":{},"123":{},"127":{},"131":{},"132":{},"135":{},"136":{},"137":{},"139":{},"141":{},"146":{},"148":{},"150":{},"151":{},"152":{},"153":{},"155":{},"157":{},"162":{},"164":{},"166":{},"167":{},"168":{},"169":{},"171":{},"173":{},"178":{},"180":{},"182":{},"183":{},"184":{},"185":{},"187":{},"191":{},"195":{},"196":{},"199":{},"203":{},"207":{},"208":{},"211":{},"215":{},"219":{},"220":{},"223":{},"224":{},"225":{},"227":{},"228":{},"229":{},"231":{},"232":{},"233":{}},"component":{}}],["gradle.properti",{"_index":528,"title":{},"name":{},"text":{"13":{},"15":{},"31":{},"35":{},"43":{},"59":{},"61":{},"77":{},"81":{},"89":{},"105":{},"107":{},"123":{},"127":{},"135":{},"139":{},"155":{},"171":{},"187":{},"191":{},"199":{},"203":{},"211":{},"215":{},"223":{},"227":{},"231":{}},"component":{}}],["gradlew",{"_index":504,"title":{},"name":{},"text":{"13":{},"15":{},"22":{},"24":{},"26":{},"27":{},"28":{},"29":{},"31":{},"35":{},"36":{},"41":{},"43":{},"59":{},"61":{},"68":{},"70":{},"72":{},"73":{},"74":{},"75":{},"77":{},"81":{},"82":{},"87":{},"89":{},"105":{},"107":{},"114":{},"116":{},"118":{},"119":{},"120":{},"121":{},"123":{},"127":{},"128":{},"133":{},"135":{},"139":{},"146":{},"148":{},"150":{},"151":{},"152":{},"153":{},"155":{},"162":{},"164":{},"166":{},"167":{},"168":{},"169":{},"171":{},"178":{},"180":{},"182":{},"183":{},"184":{},"185":{},"187":{},"191":{},"192":{},"197":{},"199":{},"203":{},"204":{},"209":{},"211":{},"215":{},"216":{},"221":{},"223":{},"227":{},"231":{}},"component":{}}],["gradlew.bat",{"_index":507,"title":{},"name":{},"text":{"13":{},"15":{},"31":{},"43":{},"59":{},"61":{},"77":{},"89":{},"105":{},"107":{},"123":{},"135":{},"139":{},"155":{},"171":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["gradle’",{"_index":1292,"title":{},"name":{},"text":{"44":{},"90":{},"136":{},"224":{},"228":{},"232":{}},"component":{}}],["guarante",{"_index":292,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["guid",{"_index":124,"title":{"7":{},"53":{},"99":{}},"name":{},"text":{"1":{},"7":{},"11":{},"47":{},"53":{},"57":{},"93":{},"99":{},"103":{}},"component":{}}],["h",{"_index":840,"title":{},"name":{},"text":{"26":{},"27":{},"29":{},"72":{},"73":{},"75":{},"118":{},"119":{},"121":{},"150":{},"151":{},"153":{},"166":{},"167":{},"169":{},"182":{},"183":{},"185":{}},"component":{}}],["hall",{"_index":603,"title":{},"name":{},"text":{"18":{},"64":{},"110":{},"142":{},"158":{},"174":{}},"component":{}}],["hand",{"_index":116,"title":{},"name":{},"text":{"1":{},"14":{},"17":{},"23":{},"47":{},"60":{},"63":{},"69":{},"93":{},"106":{},"109":{},"115":{},"141":{},"147":{},"157":{},"163":{},"173":{},"179":{}},"component":{}}],["handl",{"_index":1308,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["happen",{"_index":256,"title":{},"name":{},"text":{"2":{},"21":{},"41":{},"48":{},"67":{},"87":{},"94":{},"113":{},"133":{},"145":{},"161":{},"177":{},"197":{},"209":{},"221":{}},"component":{}}],["hard",{"_index":291,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["hash",{"_index":303,"title":{},"name":{},"text":{"2":{},"28":{},"29":{},"41":{},"48":{},"74":{},"75":{},"87":{},"94":{},"120":{},"121":{},"133":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{},"197":{},"209":{},"221":{}},"component":{}}],["hasremoteequip",{"_index":722,"title":{},"name":{},"text":{"23":{},"26":{},"27":{},"38":{},"69":{},"72":{},"73":{},"84":{},"115":{},"118":{},"119":{},"130":{},"147":{},"150":{},"151":{},"163":{},"166":{},"167":{},"179":{},"182":{},"183":{},"194":{},"206":{},"218":{}},"component":{}}],["have",{"_index":613,"title":{},"name":{},"text":{"18":{},"64":{},"110":{},"142":{},"158":{},"174":{}},"component":{}}],["head",{"_index":64,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["header",{"_index":241,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["headless",{"_index":185,"title":{},"name":{},"text":{"2":{},"10":{},"48":{},"56":{},"94":{},"102":{}},"component":{}}],["heap",{"_index":1234,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["held",{"_index":682,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["hello",{"_index":870,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["helper",{"_index":785,"title":{"24":{},"70":{},"116":{},"148":{},"164":{},"180":{}},"name":{},"text":{"24":{},"35":{},"39":{},"70":{},"81":{},"85":{},"116":{},"127":{},"131":{},"148":{},"164":{},"180":{},"191":{},"195":{},"203":{},"207":{},"215":{},"219":{}},"component":{}}],["here",{"_index":123,"title":{},"name":{},"text":{"1":{},"2":{},"8":{},"9":{},"12":{},"15":{},"20":{},"22":{},"34":{},"35":{},"36":{},"41":{},"47":{},"48":{},"54":{},"55":{},"58":{},"61":{},"66":{},"68":{},"80":{},"81":{},"82":{},"87":{},"93":{},"94":{},"100":{},"101":{},"104":{},"107":{},"112":{},"114":{},"126":{},"127":{},"128":{},"133":{},"139":{},"144":{},"146":{},"155":{},"160":{},"162":{},"171":{},"176":{},"178":{},"190":{},"191":{},"192":{},"197":{},"202":{},"203":{},"204":{},"209":{},"214":{},"215":{},"216":{},"221":{}},"component":{}}],["high",{"_index":222,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["home",{"_index":1232,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["home/nkoester/git/modelix/modelix",{"_index":1020,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["host",{"_index":833,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["html",{"_index":193,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["http",{"_index":188,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["http://0.0.0.0:28101",{"_index":1028,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["http://0.0.0.0:8090",{"_index":831,"title":{},"name":{},"text":{"26":{},"28":{},"29":{},"72":{},"74":{},"75":{},"118":{},"120":{},"121":{},"150":{},"152":{},"153":{},"166":{},"168":{},"169":{},"182":{},"184":{},"185":{}},"component":{}}],["http://127.0.0.1:63320/node?ref=r%3adfa26643",{"_index":733,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["http://localhost:4200",{"_index":673,"title":{},"name":{},"text":{"22":{},"28":{},"29":{},"68":{},"74":{},"75":{},"114":{},"120":{},"121":{},"146":{},"152":{},"153":{},"162":{},"168":{},"169":{},"178":{},"184":{},"185":{}},"component":{}}],["http://localhost:8090/lectur",{"_index":859,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["http://localhost:8090/lectures/mp",{"_index":873,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["http://localhost:8090/lectures/trash",{"_index":874,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["http://localhost:8090/room",{"_index":839,"title":{},"name":{},"text":{"26":{},"27":{},"72":{},"73":{},"118":{},"119":{},"150":{},"151":{},"166":{},"167":{},"182":{},"183":{}},"component":{}}],["http://localhost:8090/rooms/mp",{"_index":855,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["http://localhost:8090/rooms/trash",{"_index":858,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["http://voelter.de/data/pub/aplatformforsystemsandbusinessmodeling.pdf",{"_index":171,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["https://diataxis.fr/explan",{"_index":347,"title":{},"name":{},"text":{"5":{},"51":{},"97":{}},"component":{}}],["https://diataxis.fr/how",{"_index":355,"title":{},"name":{},"text":{"7":{},"53":{},"99":{}},"component":{}}],["https://diataxis.fr/refer",{"_index":462,"title":{},"name":{},"text":{"11":{},"57":{},"103":{}},"component":{}}],["https://diataxis.fr/tutori",{"_index":532,"title":{},"name":{},"text":{"14":{},"60":{},"106":{}},"component":{}}],["https://en.wikipedia.org/wiki/jetbrains_mp",{"_index":337,"title":{},"name":{},"text":{"3":{},"49":{},"95":{}},"component":{}}],["https://github.com/modelix/increment",{"_index":472,"title":{},"name":{},"text":{"12":{},"58":{},"104":{}},"component":{}}],["https://github.com/modelix/modelix",{"_index":471,"title":{},"name":{},"text":{"12":{},"58":{},"104":{}},"component":{}}],["https://github.com/modelix/modelix.cor",{"_index":469,"title":{},"name":{},"text":{"12":{},"58":{},"104":{}},"component":{}}],["https://github.com/modelix/modelix.doc",{"_index":473,"title":{},"name":{},"text":{"12":{},"58":{},"104":{}},"component":{}}],["https://github.com/modelix/modelix.mp",{"_index":470,"title":{},"name":{},"text":{"12":{},"58":{},"104":{}},"component":{}}],["https://github.com/modelix/modelix.platform",{"_index":468,"title":{},"name":{},"text":{"12":{},"58":{},"104":{}},"component":{}}],["https://github.com/modelix/modelix.sampl",{"_index":474,"title":{},"name":{},"text":{"12":{},"58":{},"104":{}},"component":{}}],["https://issues.modelix.org",{"_index":376,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["https://www.jetbrains.com/mp",{"_index":336,"title":{},"name":{},"text":{"3":{},"49":{},"95":{}},"component":{}}],["https://www.openapis.org",{"_index":653,"title":{},"name":{},"text":{"21":{},"67":{},"113":{},"145":{},"161":{},"177":{}},"component":{}}],["i.",{"_index":642,"title":{},"name":{},"text":{"21":{},"38":{},"39":{},"67":{},"84":{},"85":{},"113":{},"130":{},"131":{},"145":{},"161":{},"177":{},"194":{},"195":{},"206":{},"207":{},"218":{},"219":{}},"component":{}}],["id(\"org.modelix.model",{"_index":1104,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["idea",{"_index":43,"title":{},"name":{},"text":{"1":{},"22":{},"47":{},"68":{},"93":{},"114":{},"146":{},"162":{},"178":{}},"component":{}}],["identifi",{"_index":302,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["ignit",{"_index":217,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["ignor",{"_index":1227,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["illumin",{"_index":343,"title":{},"name":{},"text":{"5":{},"51":{},"97":{}},"component":{}}],["illustr",{"_index":621,"title":{},"name":{},"text":{"20":{},"22":{},"66":{},"68":{},"112":{},"114":{},"144":{},"146":{},"160":{},"162":{},"176":{},"178":{}},"component":{}}],["imag",{"_index":180,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["imaginari",{"_index":582,"title":{},"name":{},"text":{"18":{},"64":{},"110":{},"142":{},"158":{},"174":{}},"component":{}}],["immedi",{"_index":86,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["implement",{"_index":48,"title":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{},"21-5":{},"22-3":{},"67-5":{},"68-3":{},"113-5":{},"114-3":{},"145-5":{},"146-3":{},"161-5":{},"162-3":{},"177-5":{},"178-3":{}},"name":{},"text":{"1":{},"2":{},"17":{},"18":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"37":{},"41":{},"47":{},"48":{},"63":{},"64":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{},"74":{},"83":{},"87":{},"93":{},"94":{},"109":{},"110":{},"113":{},"114":{},"115":{},"117":{},"118":{},"119":{},"120":{},"129":{},"133":{},"141":{},"142":{},"145":{},"146":{},"147":{},"149":{},"150":{},"151":{},"152":{},"157":{},"158":{},"161":{},"162":{},"163":{},"165":{},"166":{},"167":{},"168":{},"173":{},"174":{},"177":{},"178":{},"179":{},"181":{},"182":{},"183":{},"184":{},"193":{},"197":{},"205":{},"209":{},"217":{},"221":{}},"component":{}}],["implementation(\"org.modelix:model",{"_index":1307,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["implementation(enforcedplatform(\"org.modelix:platform",{"_index":1305,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["implementation(platform(\"org.modelix:platform",{"_index":1316,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["implicit",{"_index":82,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["import",{"_index":726,"title":{},"name":{},"text":{"23":{},"35":{},"69":{},"81":{},"115":{},"127":{},"147":{},"163":{},"179":{},"191":{},"203":{},"215":{}},"component":{}}],["inamedconcept",{"_index":717,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["inamedconcept.children",{"_index":764,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["inamedconcept.properti",{"_index":740,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["inamedconcept.refer",{"_index":766,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["includ",{"_index":480,"title":{},"name":{},"text":{"12":{},"21":{},"28":{},"29":{},"31":{},"34":{},"58":{},"67":{},"74":{},"75":{},"77":{},"80":{},"104":{},"113":{},"120":{},"121":{},"123":{},"126":{},"145":{},"152":{},"153":{},"161":{},"168":{},"169":{},"177":{},"184":{},"185":{},"187":{},"190":{},"199":{},"202":{},"211":{},"214":{}},"component":{}}],["includeconcept",{"_index":1253,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["includeconcept(\"concept.fq.nam",{"_index":1130,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["includedconcept",{"_index":1239,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["includedlanguag",{"_index":1237,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["includedlanguagenamespac",{"_index":1238,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["includedmodul",{"_index":1240,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["includednamespac",{"_index":1252,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["includelanguag",{"_index":1246,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["includelanguage(\"language.fq.nam",{"_index":1129,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["includelanguage(\"org.modelix.model.repositoryconcept",{"_index":1133,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["includenamespac",{"_index":1250,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["includenamespace(\"jetbrains.mps.baselanguag",{"_index":1277,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["includenamespace(\"org.exampl",{"_index":1128,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["incompat",{"_index":1314,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["increment",{"_index":444,"title":{},"name":{},"text":{"10":{},"56":{},"102":{}},"component":{}}],["indep",{"_index":297,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["independ",{"_index":585,"title":{},"name":{},"text":{"18":{},"41":{},"64":{},"87":{},"110":{},"133":{},"142":{},"158":{},"174":{},"197":{},"209":{},"221":{}},"component":{}}],["index",{"_index":9,"title":{},"name":{"1":{},"5":{},"7":{},"11":{},"14":{},"15":{},"31":{},"32":{},"33":{},"42":{},"43":{},"44":{},"46":{},"47":{},"51":{},"53":{},"57":{},"60":{},"61":{},"77":{},"78":{},"79":{},"88":{},"89":{},"90":{},"92":{},"93":{},"97":{},"99":{},"103":{},"106":{},"107":{},"123":{},"124":{},"125":{},"134":{},"135":{},"136":{},"138":{},"139":{},"155":{},"171":{},"187":{},"188":{},"189":{},"198":{},"199":{},"200":{},"201":{},"210":{},"211":{},"212":{},"213":{},"222":{},"223":{},"224":{},"226":{},"227":{},"228":{},"230":{},"231":{},"232":{},"234":{}},"text":{},"component":{}}],["individu",{"_index":97,"title":{},"name":{},"text":{"1":{},"8":{},"12":{},"13":{},"15":{},"21":{},"22":{},"26":{},"27":{},"31":{},"43":{},"44":{},"45":{},"47":{},"54":{},"58":{},"59":{},"61":{},"67":{},"68":{},"72":{},"73":{},"77":{},"89":{},"90":{},"91":{},"93":{},"100":{},"104":{},"105":{},"107":{},"113":{},"114":{},"118":{},"119":{},"123":{},"135":{},"136":{},"137":{},"139":{},"145":{},"146":{},"150":{},"151":{},"155":{},"161":{},"162":{},"166":{},"167":{},"171":{},"177":{},"178":{},"182":{},"183":{},"187":{},"199":{},"211":{},"223":{},"224":{},"225":{},"227":{},"228":{},"229":{},"231":{},"232":{},"233":{}},"component":{}}],["info",{"_index":828,"title":{},"name":{},"text":{"26":{},"28":{},"29":{},"72":{},"74":{},"75":{},"118":{},"120":{},"121":{},"150":{},"152":{},"153":{},"166":{},"168":{},"169":{},"182":{},"184":{},"185":{}},"component":{}}],["inform",{"_index":423,"title":{},"name":{},"text":{"8":{},"11":{},"12":{},"18":{},"22":{},"54":{},"57":{},"58":{},"64":{},"68":{},"100":{},"103":{},"104":{},"110":{},"114":{},"142":{},"146":{},"158":{},"162":{},"174":{},"178":{}},"component":{}}],["initi",{"_index":549,"title":{},"name":{},"text":{"15":{},"26":{},"28":{},"29":{},"61":{},"72":{},"74":{},"75":{},"107":{},"118":{},"120":{},"121":{},"139":{},"150":{},"152":{},"153":{},"155":{},"166":{},"168":{},"169":{},"171":{},"182":{},"184":{},"185":{}},"component":{}}],["ink",{"_index":597,"title":{},"name":{},"text":{"18":{},"64":{},"110":{},"142":{},"158":{},"174":{}},"component":{}}],["inmemori",{"_index":788,"title":{},"name":{},"text":{"24":{},"29":{},"36":{},"70":{},"75":{},"82":{},"116":{},"121":{},"128":{},"148":{},"153":{},"164":{},"169":{},"180":{},"185":{},"192":{},"204":{},"216":{}},"component":{}}],["inod",{"_index":698,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["inode.isload",{"_index":1089,"title":{},"name":{},"text":{"34":{},"80":{},"126":{},"190":{},"202":{},"214":{}},"component":{}}],["inodehold",{"_index":739,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["input",{"_index":250,"title":{},"name":{},"text":{"2":{},"39":{},"48":{},"85":{},"94":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["insid",{"_index":644,"title":{},"name":{},"text":{"21":{},"26":{},"39":{},"45":{},"67":{},"72":{},"85":{},"91":{},"113":{},"118":{},"131":{},"137":{},"145":{},"150":{},"161":{},"166":{},"177":{},"182":{},"195":{},"207":{},"219":{},"225":{},"229":{},"233":{}},"component":{}}],["insight",{"_index":890,"title":{},"name":{},"text":{"27":{},"73":{},"119":{},"151":{},"167":{},"183":{}},"component":{}}],["inspect",{"_index":553,"title":{},"name":{},"text":{"15":{},"61":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["inspir",{"_index":39,"title":{},"name":{},"text":{"1":{},"15":{},"47":{},"61":{},"93":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["instal",{"_index":189,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["instanc",{"_index":203,"title":{},"name":{},"text":{"2":{},"10":{},"18":{},"21":{},"22":{},"23":{},"24":{},"26":{},"27":{},"28":{},"29":{},"34":{},"37":{},"41":{},"48":{},"56":{},"64":{},"67":{},"68":{},"69":{},"70":{},"72":{},"73":{},"74":{},"75":{},"80":{},"83":{},"87":{},"94":{},"102":{},"110":{},"113":{},"114":{},"115":{},"116":{},"118":{},"119":{},"120":{},"121":{},"126":{},"129":{},"133":{},"142":{},"145":{},"146":{},"147":{},"148":{},"150":{},"151":{},"152":{},"153":{},"158":{},"161":{},"162":{},"163":{},"164":{},"166":{},"167":{},"168":{},"169":{},"174":{},"177":{},"178":{},"179":{},"180":{},"182":{},"183":{},"184":{},"185":{},"190":{},"193":{},"197":{},"202":{},"205":{},"209":{},"214":{},"217":{},"221":{}},"component":{}}],["instanti",{"_index":989,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["instead",{"_index":274,"title":{},"name":{},"text":{"2":{},"29":{},"41":{},"45":{},"48":{},"75":{},"87":{},"91":{},"94":{},"121":{},"133":{},"137":{},"153":{},"169":{},"185":{},"197":{},"209":{},"221":{},"225":{},"229":{},"233":{}},"component":{}}],["int",{"_index":1181,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["integ",{"_index":721,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["integer.parseint(propertyvalu",{"_index":753,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["integer.tostring(valu",{"_index":756,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["integr",{"_index":28,"title":{},"name":{},"text":{"1":{},"4":{},"15":{},"35":{},"47":{},"50":{},"61":{},"81":{},"93":{},"96":{},"107":{},"127":{},"139":{},"155":{},"171":{},"191":{},"203":{},"215":{}},"component":{}}],["intellij",{"_index":555,"title":{},"name":{},"text":{"15":{},"61":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["intend",{"_index":491,"title":{},"name":{},"text":{"12":{},"15":{},"21":{},"38":{},"58":{},"61":{},"67":{},"84":{},"104":{},"107":{},"113":{},"130":{},"139":{},"145":{},"155":{},"161":{},"171":{},"177":{},"194":{},"206":{},"218":{}},"component":{}}],["intent",{"_index":805,"title":{},"name":{},"text":{"25":{},"71":{},"117":{},"149":{},"165":{},"181":{}},"component":{}}],["intention",{"_index":678,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["interact",{"_index":197,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["interest",{"_index":1070,"title":{},"name":{},"text":{"34":{},"35":{},"36":{},"80":{},"81":{},"82":{},"126":{},"127":{},"128":{},"190":{},"191":{},"192":{},"202":{},"203":{},"204":{},"214":{},"215":{},"216":{}},"component":{}}],["interfac",{"_index":1168,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["intermedi",{"_index":658,"title":{"25":{},"71":{},"117":{},"149":{},"165":{},"181":{}},"name":{},"text":{"22":{},"68":{},"114":{},"146":{},"162":{},"178":{}},"component":{}}],["intern",{"_index":201,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["interoper",{"_index":46,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["interst",{"_index":98,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["into(mpsdir",{"_index":1121,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["introduc",{"_index":639,"title":{},"name":{},"text":{"21":{},"67":{},"113":{},"145":{},"161":{},"177":{}},"component":{}}],["introduct",{"_index":0,"title":{"1-1":{},"15-1":{},"31-1":{},"43-1":{},"47-1":{},"61-1":{},"77-1":{},"89-1":{},"93-1":{},"107-1":{},"123-1":{},"135-1":{},"139-1":{},"155-1":{},"171-1":{},"187-1":{},"199-1":{},"211-1":{},"223-1":{},"227-1":{},"231-1":{}},"name":{},"text":{},"component":{}}],["introspect",{"_index":875,"title":{"27-3":{},"73-3":{},"119-3":{},"151-3":{},"167-3":{},"183-3":{}},"name":{},"text":{},"component":{}}],["involv",{"_index":898,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["isn’t",{"_index":714,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["issu",{"_index":143,"title":{},"name":{},"text":{"1":{},"8":{},"9":{},"47":{},"54":{},"55":{},"93":{},"100":{},"101":{}},"component":{}}],["it.properties.nam",{"_index":700,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["itemi",{"_index":373,"title":{},"name":{},"text":{"8":{},"13":{},"15":{},"31":{},"43":{},"54":{},"59":{},"61":{},"77":{},"89":{},"100":{},"105":{},"107":{},"123":{},"135":{},"139":{},"155":{},"171":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["iter",{"_index":1093,"title":{},"name":{},"text":{"34":{},"80":{},"126":{},"190":{},"202":{},"214":{}},"component":{}}],["itself",{"_index":316,"title":{},"name":{},"text":{"2":{},"15":{},"21":{},"23":{},"28":{},"29":{},"41":{},"48":{},"61":{},"67":{},"69":{},"74":{},"75":{},"87":{},"94":{},"107":{},"113":{},"115":{},"120":{},"121":{},"133":{},"139":{},"145":{},"147":{},"152":{},"153":{},"155":{},"161":{},"163":{},"168":{},"169":{},"171":{},"177":{},"179":{},"184":{},"185":{},"197":{},"209":{},"221":{}},"component":{}}],["it’",{"_index":320,"title":{},"name":{},"text":{"2":{},"23":{},"48":{},"69":{},"94":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["jar:file:/home/nkoester/.gradle/caches/modul",{"_index":979,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["java",{"_index":568,"title":{},"name":{},"text":{"17":{},"23":{},"24":{},"39":{},"44":{},"63":{},"69":{},"70":{},"85":{},"90":{},"109":{},"115":{},"116":{},"131":{},"136":{},"141":{},"147":{},"148":{},"157":{},"163":{},"164":{},"173":{},"179":{},"180":{},"195":{},"207":{},"219":{},"224":{},"228":{},"232":{}},"component":{}}],["java/kotlin",{"_index":487,"title":{},"name":{},"text":{"12":{},"15":{},"58":{},"61":{},"104":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["javaexecut",{"_index":1229,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["javascript",{"_index":194,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["jdbc",{"_index":1017,"title":{},"name":{},"text":{"29":{},"36":{},"75":{},"82":{},"121":{},"128":{},"153":{},"169":{},"185":{},"192":{},"204":{},"216":{}},"component":{}}],["jdbcconf",{"_index":1148,"title":{},"name":{},"text":{"36":{},"82":{},"128":{},"192":{},"204":{},"216":{}},"component":{}}],["jetbrain",{"_index":156,"title":{},"name":{},"text":{"1":{},"3":{},"8":{},"12":{},"21":{},"31":{},"35":{},"47":{},"49":{},"54":{},"58":{},"67":{},"77":{},"81":{},"93":{},"95":{},"100":{},"104":{},"113":{},"123":{},"127":{},"145":{},"161":{},"177":{},"187":{},"191":{},"199":{},"203":{},"211":{},"215":{}},"component":{}}],["jetbrains.mps.lang.core.baseconcept",{"_index":1186,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["jetbrains.mps.lang.core.inamedconcept",{"_index":1187,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["jetbrains.mps.lang.core.structure.baseconcept",{"_index":727,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["jetbrains.mps.lang.core.structure.inamedconcept",{"_index":728,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["join",{"_index":153,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["jq",{"_index":843,"title":{},"name":{},"text":{"26":{},"27":{},"72":{},"73":{},"118":{},"119":{},"150":{},"151":{},"166":{},"167":{},"182":{},"183":{}},"component":{}}],["json",{"_index":626,"title":{},"name":{},"text":{"20":{},"28":{},"38":{},"39":{},"40":{},"66":{},"74":{},"84":{},"85":{},"86":{},"112":{},"120":{},"130":{},"131":{},"132":{},"144":{},"152":{},"160":{},"168":{},"176":{},"184":{},"194":{},"195":{},"196":{},"206":{},"207":{},"208":{},"218":{},"219":{},"220":{}},"component":{}}],["jsondir",{"_index":1225,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["jvm",{"_index":486,"title":{},"name":{},"text":{"12":{},"15":{},"58":{},"61":{},"104":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["kb",{"_index":939,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["keep",{"_index":1161,"title":{},"name":{},"text":{"37":{},"41":{},"83":{},"87":{},"129":{},"133":{},"193":{},"197":{},"205":{},"209":{},"217":{},"221":{}},"component":{}}],["key",{"_index":276,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["keyboard",{"_index":251,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["keycloak",{"_index":456,"title":{},"name":{},"text":{"10":{},"56":{},"102":{}},"component":{}}],["keyword",{"_index":323,"title":{},"name":{},"text":{"3":{},"49":{},"95":{}},"component":{}}],["kind",{"_index":121,"title":{},"name":{},"text":{"1":{},"14":{},"47":{},"60":{},"93":{},"106":{}},"component":{}}],["know",{"_index":309,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["knowledg",{"_index":643,"title":{},"name":{},"text":{"21":{},"29":{},"67":{},"75":{},"113":{},"121":{},"145":{},"153":{},"161":{},"169":{},"177":{},"185":{}},"component":{}}],["kotlin",{"_index":436,"title":{},"name":{},"text":{"10":{},"17":{},"35":{},"37":{},"39":{},"40":{},"56":{},"63":{},"81":{},"83":{},"85":{},"86":{},"102":{},"109":{},"127":{},"129":{},"131":{},"132":{},"141":{},"157":{},"173":{},"191":{},"193":{},"195":{},"196":{},"203":{},"205":{},"207":{},"208":{},"215":{},"217":{},"219":{},"220":{}},"component":{}}],["kotlin/typescript",{"_index":1228,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["kotlindir",{"_index":1135,"title":{},"name":{},"text":{"35":{},"39":{},"81":{},"85":{},"127":{},"131":{},"191":{},"195":{},"203":{},"207":{},"215":{},"219":{}},"component":{}}],["kotlinproject",{"_index":1137,"title":{},"name":{},"text":{"35":{},"39":{},"81":{},"85":{},"127":{},"131":{},"191":{},"195":{},"203":{},"207":{},"215":{},"219":{}},"component":{}}],["ktor",{"_index":578,"title":{},"name":{},"text":{"17":{},"21":{},"63":{},"67":{},"109":{},"113":{},"141":{},"145":{},"157":{},"161":{},"173":{},"177":{}},"component":{}}],["ktor.appl",{"_index":829,"title":{},"name":{},"text":{"26":{},"28":{},"29":{},"72":{},"74":{},"75":{},"118":{},"120":{},"121":{},"150":{},"152":{},"153":{},"166":{},"168":{},"169":{},"182":{},"184":{},"185":{}},"component":{}}],["kubernet",{"_index":214,"title":{"21-8":{},"67-8":{},"113-8":{},"145-8":{},"161-8":{},"177-8":{}},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["l_",{"_index":1262,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["langaug",{"_index":1163,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["languag",{"_index":30,"title":{"16":{},"62":{},"108":{},"140":{},"156":{},"172":{},"21-2":{},"23-1":{},"67-2":{},"69-1":{},"113-2":{},"115-1":{},"145-2":{},"147-1":{},"161-2":{},"163-1":{},"177-2":{},"179-1":{}},"name":{},"text":{"1":{},"2":{},"3":{},"4":{},"12":{},"15":{},"17":{},"21":{},"23":{},"25":{},"26":{},"35":{},"38":{},"39":{},"40":{},"47":{},"48":{},"49":{},"50":{},"58":{},"61":{},"63":{},"67":{},"69":{},"71":{},"72":{},"81":{},"84":{},"85":{},"86":{},"93":{},"94":{},"95":{},"96":{},"104":{},"107":{},"109":{},"113":{},"115":{},"117":{},"118":{},"127":{},"130":{},"131":{},"132":{},"139":{},"141":{},"145":{},"147":{},"149":{},"150":{},"155":{},"157":{},"161":{},"163":{},"165":{},"166":{},"171":{},"173":{},"177":{},"179":{},"181":{},"182":{},"191":{},"194":{},"195":{},"196":{},"203":{},"206":{},"207":{},"208":{},"215":{},"218":{},"219":{},"220":{}},"component":{}}],["languageclass",{"_index":1261,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["languageclass.prefix",{"_index":1279,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["languageclass.suffix",{"_index":1281,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["languagedata",{"_index":1165,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["languageprefix",{"_index":1251,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["larg",{"_index":606,"title":{},"name":{},"text":{"18":{},"64":{},"110":{},"142":{},"158":{},"174":{}},"component":{}}],["latest",{"_index":1101,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["launch",{"_index":881,"title":{},"name":{},"text":{"27":{},"73":{},"119":{},"151":{},"167":{},"183":{}},"component":{}}],["layer",{"_index":633,"title":{},"name":{},"text":{"21":{},"25":{},"28":{},"29":{},"67":{},"71":{},"74":{},"75":{},"113":{},"117":{},"120":{},"121":{},"145":{},"149":{},"152":{},"153":{},"161":{},"165":{},"168":{},"169":{},"177":{},"181":{},"184":{},"185":{}},"component":{}}],["lead",{"_index":1313,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["learn",{"_index":111,"title":{},"name":{},"text":{"1":{},"14":{},"26":{},"45":{},"47":{},"60":{},"72":{},"91":{},"93":{},"106":{},"118":{},"137":{},"150":{},"166":{},"182":{},"225":{},"229":{},"233":{}},"component":{}}],["lectur",{"_index":594,"title":{},"name":{},"text":{"18":{},"22":{},"23":{},"26":{},"38":{},"64":{},"68":{},"69":{},"72":{},"84":{},"110":{},"114":{},"115":{},"118":{},"130":{},"142":{},"146":{},"147":{},"150":{},"158":{},"162":{},"163":{},"166":{},"174":{},"178":{},"179":{},"182":{},"194":{},"206":{},"218":{}},"component":{}}],["lectureassign",{"_index":695,"title":{},"name":{},"text":{"23":{},"38":{},"69":{},"84":{},"115":{},"130":{},"147":{},"163":{},"179":{},"194":{},"206":{},"218":{}},"component":{}}],["lectureref",{"_index":860,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["left",{"_index":93,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["legaci",{"_index":896,"title":{},"name":{},"text":{"28":{},"74":{},"120":{},"152":{},"168":{},"184":{}},"component":{}}],["lesson",{"_index":113,"title":{},"name":{},"text":{"1":{},"14":{},"47":{},"60":{},"93":{},"106":{}},"component":{}}],["level",{"_index":502,"title":{},"name":{},"text":{"13":{},"15":{},"28":{},"29":{},"31":{},"43":{},"59":{},"61":{},"74":{},"75":{},"77":{},"89":{},"105":{},"107":{},"120":{},"121":{},"123":{},"135":{},"139":{},"152":{},"153":{},"155":{},"168":{},"169":{},"171":{},"184":{},"185":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["lib",{"_index":445,"title":{},"name":{},"text":{"10":{},"56":{},"102":{}},"component":{}}],["librari",{"_index":904,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["licens",{"_index":360,"title":{},"name":{},"text":{"8":{},"41":{},"54":{},"87":{},"100":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["ligh",{"_index":576,"title":{},"name":{},"text":{"17":{},"63":{},"109":{},"141":{},"157":{},"173":{}},"component":{}}],["light",{"_index":447,"title":{"34":{},"37":{},"80":{},"83":{},"126":{},"129":{},"190":{},"193":{},"202":{},"205":{},"214":{},"217":{}},"name":{"34":{},"37":{},"80":{},"83":{},"126":{},"129":{},"190":{},"193":{},"202":{},"205":{},"214":{},"217":{}},"text":{"10":{},"12":{},"17":{},"20":{},"26":{},"28":{},"29":{},"31":{},"37":{},"56":{},"58":{},"63":{},"66":{},"72":{},"74":{},"75":{},"77":{},"83":{},"102":{},"104":{},"109":{},"112":{},"118":{},"120":{},"121":{},"123":{},"129":{},"141":{},"144":{},"150":{},"152":{},"153":{},"157":{},"160":{},"166":{},"168":{},"169":{},"173":{},"176":{},"182":{},"184":{},"185":{},"187":{},"193":{},"199":{},"205":{},"211":{},"217":{}},"component":{}}],["lightmodelclient.build",{"_index":1074,"title":{},"name":{},"text":{"34":{},"80":{},"126":{},"190":{},"202":{},"214":{}},"component":{}}],["limit",{"_index":330,"title":{"23-3":{},"69-3":{},"115-3":{},"147-3":{},"163-3":{},"179-3":{}},"name":{},"text":{"3":{},"21":{},"23":{},"49":{},"67":{},"69":{},"95":{},"113":{},"115":{},"145":{},"147":{},"161":{},"163":{},"177":{},"179":{}},"component":{}}],["line",{"_index":1097,"title":{},"name":{},"text":{"35":{},"38":{},"81":{},"84":{},"127":{},"130":{},"191":{},"194":{},"203":{},"206":{},"215":{},"218":{}},"component":{}}],["link",{"_index":428,"title":{},"name":{},"text":{"9":{},"55":{},"101":{}},"component":{}}],["list",{"_index":415,"title":{"12-1":{},"58-1":{},"104-1":{}},"name":{},"text":{"8":{},"34":{},"35":{},"39":{},"54":{},"80":{},"81":{},"85":{},"100":{},"126":{},"127":{},"131":{},"190":{},"191":{},"195":{},"202":{},"203":{},"207":{},"214":{},"215":{},"219":{}},"component":{}}],["listen",{"_index":953,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["live",{"_index":952,"title":{},"name":{},"text":{"28":{},"29":{},"37":{},"74":{},"75":{},"83":{},"120":{},"121":{},"129":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{},"193":{},"205":{},"217":{}},"component":{}}],["load",{"_index":223,"title":{},"name":{},"text":{"2":{},"23":{},"26":{},"29":{},"34":{},"48":{},"69":{},"72":{},"75":{},"80":{},"94":{},"115":{},"118":{},"121":{},"126":{},"147":{},"150":{},"153":{},"163":{},"166":{},"169":{},"179":{},"182":{},"185":{},"190":{},"202":{},"214":{}},"component":{}}],["local",{"_index":206,"title":{"36":{},"82":{},"128":{},"192":{},"204":{},"216":{}},"name":{},"text":{"2":{},"29":{},"41":{},"48":{},"75":{},"87":{},"94":{},"121":{},"133":{},"153":{},"169":{},"185":{},"197":{},"209":{},"221":{}},"component":{}}],["localhost:4200",{"_index":954,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["locat",{"_index":530,"title":{},"name":{},"text":{"13":{},"15":{},"31":{},"39":{},"43":{},"59":{},"61":{},"77":{},"85":{},"89":{},"105":{},"107":{},"123":{},"131":{},"135":{},"139":{},"155":{},"171":{},"187":{},"195":{},"199":{},"207":{},"211":{},"219":{},"223":{},"227":{},"231":{}},"component":{}}],["log",{"_index":823,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["logback",{"_index":974,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["logback.groovi",{"_index":977,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["logback.xml",{"_index":978,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["logger",{"_index":999,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["logger[org.modelix",{"_index":1003,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["logger[root",{"_index":1005,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["login",{"_index":235,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["long",{"_index":1155,"title":{},"name":{},"text":{"37":{},"39":{},"83":{},"85":{},"129":{},"131":{},"193":{},"195":{},"205":{},"207":{},"217":{},"219":{}},"component":{}}],["look",{"_index":724,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["lose",{"_index":321,"title":{},"name":{},"text":{"3":{},"49":{},"95":{}},"component":{}}],["low",{"_index":595,"title":{},"name":{},"text":{"18":{},"64":{},"110":{},"142":{},"158":{},"174":{}},"component":{}}],["lower",{"_index":1157,"title":{},"name":{},"text":{"37":{},"83":{},"129":{},"193":{},"205":{},"217":{}},"component":{}}],["mac/linux",{"_index":505,"title":{},"name":{},"text":{"13":{},"15":{},"31":{},"43":{},"59":{},"61":{},"77":{},"89":{},"105":{},"107":{},"123":{},"135":{},"139":{},"155":{},"171":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["machineri",{"_index":460,"title":{},"name":{},"text":{"11":{},"57":{},"103":{}},"component":{}}],["made",{"_index":1126,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["mail",{"_index":243,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["main",{"_index":602,"title":{},"name":{},"text":{"18":{},"23":{},"28":{},"29":{},"64":{},"69":{},"74":{},"75":{},"93":{},"110":{},"115":{},"120":{},"121":{},"142":{},"147":{},"152":{},"153":{},"158":{},"163":{},"168":{},"169":{},"174":{},"179":{},"184":{},"185":{}},"component":{}}],["main.j",{"_index":944,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["mainli",{"_index":1284,"title":{},"name":{},"text":{"40":{},"86":{},"132":{},"196":{},"208":{},"220":{}},"component":{}}],["major",{"_index":390,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["make",{"_index":400,"title":{},"name":{},"text":{"8":{},"15":{},"17":{},"22":{},"23":{},"45":{},"54":{},"61":{},"63":{},"68":{},"69":{},"91":{},"100":{},"107":{},"109":{},"114":{},"115":{},"137":{},"139":{},"141":{},"146":{},"147":{},"155":{},"157":{},"162":{},"163":{},"171":{},"173":{},"178":{},"179":{},"225":{},"229":{},"233":{}},"component":{}}],["manag",{"_index":363,"title":{},"name":{},"text":{"8":{},"10":{},"54":{},"56":{},"100":{},"102":{}},"component":{}}],["mani",{"_index":377,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["manual",{"_index":616,"title":{"19":{},"65":{},"111":{},"143":{},"159":{},"175":{}},"name":{},"text":{"20":{},"28":{},"29":{},"66":{},"74":{},"75":{},"112":{},"120":{},"121":{},"144":{},"152":{},"153":{},"160":{},"168":{},"169":{},"176":{},"184":{},"185":{}},"component":{}}],["map",{"_index":618,"title":{"20-2":{},"66-2":{},"112-2":{},"144-2":{},"160-2":{},"176-2":{}},"name":{},"text":{"38":{},"44":{},"84":{},"90":{},"130":{},"136":{},"194":{},"206":{},"218":{},"224":{},"228":{},"232":{}},"component":{}}],["materi",{"_index":461,"title":{},"name":{},"text":{"11":{},"57":{},"103":{}},"component":{}}],["matter",{"_index":659,"title":{},"name":{},"text":{"22":{},"68":{},"114":{},"146":{},"162":{},"178":{}},"component":{}}],["maven",{"_index":1106,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["max",{"_index":1011,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["maximum",{"_index":683,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["maxparticip",{"_index":865,"title":{},"name":{},"text":{"26":{},"38":{},"72":{},"84":{},"118":{},"130":{},"150":{},"166":{},"182":{},"194":{},"206":{},"218":{}},"component":{}}],["maxplac",{"_index":720,"title":{},"name":{},"text":{"23":{},"26":{},"27":{},"38":{},"69":{},"72":{},"73":{},"84":{},"115":{},"118":{},"119":{},"130":{},"147":{},"150":{},"151":{},"163":{},"166":{},"167":{},"179":{},"182":{},"183":{},"194":{},"206":{},"218":{}},"component":{}}],["mayor",{"_index":108,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["mb",{"_index":935,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["mean",{"_index":150,"title":{},"name":{},"text":{"1":{},"2":{},"41":{},"47":{},"48":{},"87":{},"93":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["meant",{"_index":545,"title":{},"name":{},"text":{"15":{},"21":{},"61":{},"67":{},"107":{},"113":{},"139":{},"145":{},"155":{},"161":{},"171":{},"177":{}},"component":{}}],["meetup",{"_index":413,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["memori",{"_index":969,"title":{},"name":{},"text":{"29":{},"36":{},"75":{},"82":{},"121":{},"128":{},"153":{},"169":{},"185":{},"192":{},"204":{},"216":{}},"component":{}}],["menu",{"_index":102,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["messag",{"_index":824,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["met",{"_index":880,"title":{},"name":{},"text":{"27":{},"73":{},"119":{},"151":{},"167":{},"183":{}},"component":{}}],["meta",{"_index":37,"title":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"name":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"text":{"1":{},"3":{},"12":{},"15":{},"20":{},"21":{},"35":{},"38":{},"47":{},"49":{},"58":{},"61":{},"66":{},"67":{},"81":{},"84":{},"93":{},"95":{},"104":{},"107":{},"112":{},"113":{},"127":{},"130":{},"139":{},"144":{},"145":{},"155":{},"160":{},"161":{},"171":{},"176":{},"177":{},"191":{},"194":{},"203":{},"206":{},"215":{},"218":{}},"component":{}}],["metamodel",{"_index":437,"title":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"name":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"text":{"10":{},"17":{},"21":{},"35":{},"38":{},"39":{},"40":{},"56":{},"63":{},"67":{},"81":{},"84":{},"85":{},"86":{},"102":{},"109":{},"113":{},"127":{},"130":{},"131":{},"132":{},"141":{},"145":{},"157":{},"161":{},"173":{},"177":{},"191":{},"194":{},"195":{},"196":{},"203":{},"206":{},"207":{},"208":{},"215":{},"218":{},"219":{},"220":{}},"component":{}}],["method",{"_index":1222,"title":{"39-4":{},"85-4":{},"131-4":{},"195-4":{},"207-4":{},"219-4":{}},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["minor",{"_index":391,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["minut",{"_index":612,"title":{},"name":{},"text":{"18":{},"64":{},"110":{},"142":{},"158":{},"174":{}},"component":{}}],["mission",{"_index":339,"title":{"4-2":{},"50-2":{},"96-2":{}},"name":{},"text":{},"component":{}}],["mode",{"_index":186,"title":{},"name":{},"text":{"2":{},"28":{},"29":{},"48":{},"74":{},"75":{},"94":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["model",{"_index":14,"title":{"16":{},"23":{},"24":{},"27":{},"34":{},"35":{},"36":{},"37":{},"39":{},"40":{},"41":{},"62":{},"69":{},"70":{},"73":{},"80":{},"81":{},"82":{},"83":{},"85":{},"86":{},"87":{},"108":{},"115":{},"116":{},"119":{},"126":{},"127":{},"128":{},"129":{},"131":{},"132":{},"133":{},"140":{},"147":{},"148":{},"151":{},"156":{},"163":{},"164":{},"167":{},"172":{},"179":{},"180":{},"183":{},"190":{},"191":{},"192":{},"193":{},"195":{},"196":{},"197":{},"202":{},"203":{},"204":{},"205":{},"207":{},"208":{},"209":{},"214":{},"215":{},"216":{},"217":{},"219":{},"220":{},"221":{},"2-3":{},"21-3":{},"41-2":{},"48-3":{},"67-3":{},"87-2":{},"94-3":{},"113-3":{},"133-2":{},"145-3":{},"161-3":{},"177-3":{},"197-2":{},"209-2":{},"221-2":{}},"name":{"23":{},"24":{},"26":{},"27":{},"34":{},"35":{},"36":{},"37":{},"39":{},"40":{},"41":{},"69":{},"70":{},"72":{},"73":{},"80":{},"81":{},"82":{},"83":{},"85":{},"86":{},"87":{},"115":{},"116":{},"118":{},"119":{},"126":{},"127":{},"128":{},"129":{},"131":{},"132":{},"133":{},"147":{},"148":{},"150":{},"151":{},"163":{},"164":{},"166":{},"167":{},"179":{},"180":{},"182":{},"183":{},"190":{},"191":{},"192":{},"193":{},"195":{},"196":{},"197":{},"202":{},"203":{},"204":{},"205":{},"207":{},"208":{},"209":{},"214":{},"215":{},"216":{},"217":{},"219":{},"220":{},"221":{}},"text":{"1":{},"2":{},"4":{},"8":{},"10":{},"12":{},"15":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"31":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"47":{},"48":{},"50":{},"54":{},"56":{},"58":{},"61":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"93":{},"94":{},"96":{},"100":{},"102":{},"104":{},"107":{},"109":{},"110":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"123":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"139":{},"141":{},"142":{},"144":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"155":{},"157":{},"158":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"171":{},"173":{},"174":{},"176":{},"177":{},"178":{},"179":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"187":{},"190":{},"191":{},"192":{},"193":{},"194":{},"195":{},"196":{},"197":{},"199":{},"202":{},"203":{},"204":{},"205":{},"206":{},"207":{},"208":{},"209":{},"211":{},"214":{},"215":{},"216":{},"217":{},"218":{},"219":{},"220":{},"221":{}},"component":{}}],["model:1.3.2",{"_index":797,"title":{},"name":{},"text":{"24":{},"70":{},"116":{},"148":{},"164":{},"180":{}},"component":{}}],["modelix",{"_index":8,"title":{"1":{},"4":{},"10":{},"12":{},"15":{},"41":{},"44":{},"45":{},"47":{},"50":{},"56":{},"58":{},"61":{},"87":{},"90":{},"91":{},"93":{},"96":{},"102":{},"104":{},"107":{},"133":{},"136":{},"137":{},"139":{},"155":{},"171":{},"197":{},"209":{},"221":{},"224":{},"225":{},"228":{},"229":{},"232":{},"233":{},"2-1":{},"12-1":{},"12-2":{},"12-3":{},"12-4":{},"13-2":{},"15-5":{},"31-5":{},"43-5":{},"48-1":{},"58-1":{},"58-2":{},"58-3":{},"58-4":{},"59-2":{},"61-5":{},"77-5":{},"89-5":{},"94-1":{},"104-1":{},"104-2":{},"104-3":{},"104-4":{},"105-2":{},"107-5":{},"123-5":{},"135-5":{},"139-5":{},"155-5":{},"171-5":{},"187-5":{},"199-5":{},"211-5":{},"223-5":{},"227-5":{},"231-5":{}},"name":{},"text":{"1":{},"2":{},"3":{},"8":{},"10":{},"12":{},"13":{},"15":{},"17":{},"21":{},"22":{},"23":{},"25":{},"29":{},"31":{},"37":{},"38":{},"41":{},"43":{},"44":{},"45":{},"47":{},"48":{},"49":{},"54":{},"56":{},"58":{},"59":{},"61":{},"63":{},"67":{},"68":{},"69":{},"71":{},"75":{},"77":{},"83":{},"84":{},"87":{},"89":{},"90":{},"91":{},"93":{},"94":{},"95":{},"100":{},"102":{},"104":{},"105":{},"107":{},"109":{},"113":{},"114":{},"115":{},"117":{},"121":{},"123":{},"129":{},"130":{},"133":{},"135":{},"136":{},"137":{},"139":{},"141":{},"145":{},"146":{},"147":{},"149":{},"153":{},"155":{},"157":{},"161":{},"162":{},"163":{},"165":{},"169":{},"171":{},"173":{},"177":{},"178":{},"179":{},"181":{},"185":{},"187":{},"193":{},"194":{},"197":{},"199":{},"205":{},"206":{},"209":{},"211":{},"217":{},"218":{},"221":{},"223":{},"224":{},"225":{},"227":{},"228":{},"229":{},"231":{},"232":{},"233":{}},"component":{"1":{},"2":{},"3":{},"4":{},"5":{},"6":{},"7":{},"8":{},"9":{},"10":{},"11":{},"12":{},"13":{},"14":{},"15":{},"16":{},"17":{},"18":{},"19":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"30":{},"31":{},"32":{},"33":{},"34":{},"35":{},"36":{},"37":{},"38":{},"39":{},"40":{},"41":{},"42":{},"43":{},"44":{},"45":{},"46":{},"47":{},"48":{},"49":{},"50":{},"51":{},"52":{},"53":{},"54":{},"55":{},"56":{},"57":{},"58":{},"59":{},"60":{},"61":{},"62":{},"63":{},"64":{},"65":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"76":{},"77":{},"78":{},"79":{},"80":{},"81":{},"82":{},"83":{},"84":{},"85":{},"86":{},"87":{},"88":{},"89":{},"90":{},"91":{},"92":{},"93":{},"94":{},"95":{},"96":{},"97":{},"98":{},"99":{},"100":{},"101":{},"102":{},"103":{},"104":{},"105":{},"106":{},"107":{},"108":{},"109":{},"110":{},"111":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"122":{},"123":{},"124":{},"125":{},"126":{},"127":{},"128":{},"129":{},"130":{},"131":{},"132":{},"133":{},"134":{},"135":{},"136":{},"137":{},"138":{}}}],["modelix.cor",{"_index":479,"title":{"31":{},"32":{},"33":{},"42":{},"77":{},"78":{},"79":{},"88":{},"123":{},"124":{},"125":{},"134":{},"187":{},"188":{},"189":{},"198":{},"199":{},"200":{},"201":{},"210":{},"211":{},"212":{},"213":{},"222":{}},"name":{},"text":{"12":{},"31":{},"36":{},"58":{},"77":{},"82":{},"104":{},"123":{},"128":{},"187":{},"192":{},"199":{},"204":{},"211":{},"216":{}},"component":{}}],["modelix.platform",{"_index":478,"title":{"43":{},"46":{},"89":{},"92":{},"135":{},"138":{},"223":{},"226":{},"227":{},"230":{},"231":{},"234":{}},"name":{},"text":{"12":{},"43":{},"58":{},"89":{},"104":{},"135":{},"223":{},"227":{},"231":{}},"component":{}}],["modelix/modelix",{"_index":796,"title":{},"name":{},"text":{"24":{},"70":{},"116":{},"148":{},"164":{},"180":{}},"component":{}}],["modelix/modelix.doc",{"_index":136,"title":{},"name":{},"text":{"1":{},"9":{},"47":{},"55":{},"93":{},"101":{}},"component":{}}],["modelix_platform_vers",{"_index":1302,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["modelixcorevers",{"_index":1103,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["modelixcoreversion=1.4.10",{"_index":1099,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["modelql",{"_index":577,"title":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"name":{},"text":{"17":{},"21":{},"25":{},"26":{},"63":{},"67":{},"71":{},"72":{},"109":{},"113":{},"117":{},"118":{},"141":{},"145":{},"149":{},"150":{},"157":{},"161":{},"165":{},"166":{},"173":{},"177":{},"181":{},"182":{}},"component":{}}],["modelserv",{"_index":1050,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["modif",{"_index":286,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["modul",{"_index":202,"title":{},"name":{},"text":{"2":{},"34":{},"39":{},"41":{},"48":{},"80":{},"85":{},"87":{},"94":{},"126":{},"131":{},"133":{},"190":{},"195":{},"197":{},"202":{},"207":{},"209":{},"214":{},"219":{},"221":{}},"component":{}}],["modulefold",{"_index":1230,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["modulesfrom",{"_index":1245,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["modulesfrom(projectdir.resolve(\"build/depend",{"_index":1132,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["modulesfrom(projectdir.resolve(\"languag",{"_index":1124,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["modulesfrom(projectdir.resolve(\"solut",{"_index":1125,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["moment",{"_index":508,"title":{},"name":{},"text":{"13":{},"15":{},"23":{},"31":{},"43":{},"59":{},"61":{},"69":{},"77":{},"89":{},"105":{},"107":{},"115":{},"123":{},"135":{},"139":{},"147":{},"155":{},"163":{},"171":{},"179":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["more",{"_index":58,"title":{},"name":{},"text":{"1":{},"3":{},"8":{},"12":{},"18":{},"21":{},"28":{},"29":{},"34":{},"35":{},"36":{},"37":{},"45":{},"47":{},"49":{},"54":{},"58":{},"64":{},"67":{},"74":{},"75":{},"80":{},"81":{},"82":{},"83":{},"91":{},"93":{},"95":{},"100":{},"104":{},"110":{},"113":{},"120":{},"121":{},"126":{},"127":{},"128":{},"129":{},"137":{},"142":{},"145":{},"152":{},"153":{},"158":{},"161":{},"168":{},"169":{},"174":{},"177":{},"184":{},"185":{},"190":{},"191":{},"192":{},"193":{},"202":{},"203":{},"204":{},"205":{},"214":{},"215":{},"216":{},"217":{},"225":{},"229":{},"233":{}},"component":{}}],["motiv",{"_index":177,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["mous",{"_index":252,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["mp",{"_index":152,"title":{"16":{},"38":{},"62":{},"84":{},"108":{},"130":{},"140":{},"156":{},"172":{},"194":{},"206":{},"218":{},"21-2":{},"41-2":{},"67-2":{},"87-2":{},"113-2":{},"133-2":{},"145-2":{},"161-2":{},"177-2":{},"197-2":{},"209-2":{},"221-2":{}},"name":{},"text":{"1":{},"2":{},"3":{},"8":{},"10":{},"12":{},"15":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"26":{},"27":{},"28":{},"29":{},"31":{},"34":{},"35":{},"37":{},"38":{},"39":{},"41":{},"45":{},"47":{},"48":{},"49":{},"54":{},"56":{},"58":{},"61":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"72":{},"73":{},"74":{},"75":{},"77":{},"80":{},"81":{},"83":{},"84":{},"85":{},"87":{},"91":{},"93":{},"94":{},"95":{},"100":{},"102":{},"104":{},"107":{},"109":{},"110":{},"112":{},"113":{},"114":{},"115":{},"118":{},"119":{},"120":{},"121":{},"123":{},"126":{},"127":{},"129":{},"130":{},"131":{},"133":{},"137":{},"139":{},"141":{},"142":{},"144":{},"145":{},"146":{},"147":{},"150":{},"151":{},"152":{},"153":{},"155":{},"157":{},"158":{},"160":{},"161":{},"162":{},"163":{},"166":{},"167":{},"168":{},"169":{},"171":{},"173":{},"174":{},"176":{},"177":{},"178":{},"179":{},"182":{},"183":{},"184":{},"185":{},"187":{},"190":{},"191":{},"193":{},"194":{},"195":{},"197":{},"199":{},"202":{},"203":{},"205":{},"206":{},"207":{},"209":{},"211":{},"214":{},"215":{},"217":{},"218":{},"219":{},"221":{},"225":{},"229":{},"233":{}},"component":{}}],["mps(\"com.jetbrains:mps:$mpsvers",{"_index":1116,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["mps/metamodel",{"_index":570,"title":{},"name":{},"text":{"17":{},"35":{},"63":{},"81":{},"109":{},"127":{},"141":{},"157":{},"173":{},"191":{},"203":{},"215":{}},"component":{}}],["mps/project",{"_index":900,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["mps:96533389",{"_index":1177,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["mps:metamodel:build",{"_index":1147,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["mps_version",{"_index":1300,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["mps_version:$modelix_platform_vers",{"_index":1306,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["mpsdepend",{"_index":1115,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["mpsdir",{"_index":1112,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["mpsheapsiz",{"_index":1233,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["mpshome",{"_index":1123,"title":{},"name":{},"text":{"35":{},"39":{},"81":{},"85":{},"127":{},"131":{},"191":{},"195":{},"203":{},"207":{},"215":{},"219":{}},"component":{}}],["mpslanguageregistry.getinst",{"_index":711,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["mpsversion",{"_index":1108,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["mpsversion=2021.3.2",{"_index":1100,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["multi",{"_index":1153,"title":{},"name":{},"text":{"37":{},"83":{},"129":{},"193":{},"205":{},"217":{}},"component":{}}],["multipl",{"_index":45,"title":{},"name":{},"text":{"1":{},"2":{},"12":{},"21":{},"38":{},"47":{},"48":{},"58":{},"67":{},"84":{},"93":{},"94":{},"104":{},"113":{},"130":{},"145":{},"161":{},"177":{},"194":{},"206":{},"218":{}},"component":{}}],["multiproject",{"_index":458,"title":{},"name":{},"text":{"10":{},"56":{},"102":{}},"component":{}}],["mylanguageprefix",{"_index":1280,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["mylanguagesuffix",{"_index":1282,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["n_",{"_index":1264,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["name",{"_index":430,"title":{"39-5":{},"85-5":{},"131-5":{},"195-5":{},"207-5":{},"219-5":{}},"name":{},"text":{"10":{},"23":{},"26":{},"27":{},"28":{},"29":{},"35":{},"38":{},"39":{},"56":{},"69":{},"72":{},"73":{},"74":{},"75":{},"81":{},"84":{},"85":{},"102":{},"115":{},"118":{},"119":{},"120":{},"121":{},"127":{},"130":{},"131":{},"147":{},"150":{},"151":{},"152":{},"153":{},"163":{},"166":{},"167":{},"168":{},"169":{},"179":{},"182":{},"183":{},"184":{},"185":{},"191":{},"194":{},"195":{},"203":{},"206":{},"207":{},"215":{},"218":{},"219":{}},"component":{}}],["nameconfig",{"_index":1258,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["namespac",{"_index":1127,"title":{},"name":{},"text":{"35":{},"39":{},"81":{},"85":{},"127":{},"131":{},"191":{},"195":{},"203":{},"207":{},"215":{},"219":{}},"component":{}}],["nativ",{"_index":38,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["navig",{"_index":477,"title":{},"name":{},"text":{"12":{},"58":{},"104":{}},"component":{}}],["ncludedlanguag",{"_index":1249,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["necessari",{"_index":1094,"title":{},"name":{},"text":{"35":{},"45":{},"81":{},"91":{},"127":{},"137":{},"191":{},"203":{},"215":{},"225":{},"229":{},"233":{}},"component":{}}],["necessarili",{"_index":814,"title":{},"name":{},"text":{"25":{},"71":{},"117":{},"149":{},"165":{},"181":{}},"component":{}}],["need",{"_index":262,"title":{},"name":{},"text":{"2":{},"13":{},"15":{},"18":{},"21":{},"22":{},"25":{},"26":{},"27":{},"28":{},"29":{},"31":{},"41":{},"43":{},"48":{},"59":{},"61":{},"64":{},"67":{},"68":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"87":{},"89":{},"94":{},"105":{},"107":{},"110":{},"113":{},"114":{},"117":{},"118":{},"119":{},"120":{},"121":{},"123":{},"133":{},"135":{},"139":{},"142":{},"145":{},"146":{},"149":{},"150":{},"151":{},"152":{},"153":{},"155":{},"158":{},"161":{},"162":{},"165":{},"166":{},"167":{},"168":{},"169":{},"171":{},"174":{},"177":{},"178":{},"181":{},"182":{},"183":{},"184":{},"185":{},"187":{},"197":{},"199":{},"209":{},"211":{},"221":{},"223":{},"227":{},"231":{}},"component":{}}],["new",{"_index":34,"title":{},"name":{},"text":{"1":{},"2":{},"4":{},"23":{},"26":{},"28":{},"29":{},"41":{},"45":{},"47":{},"48":{},"50":{},"69":{},"72":{},"74":{},"75":{},"87":{},"91":{},"93":{},"94":{},"96":{},"115":{},"118":{},"120":{},"121":{},"133":{},"137":{},"147":{},"150":{},"152":{},"153":{},"163":{},"166":{},"168":{},"169":{},"179":{},"182":{},"184":{},"185":{},"197":{},"209":{},"221":{},"225":{},"229":{},"233":{}},"component":{}}],["newest",{"_index":614,"title":{},"name":{},"text":{"18":{},"64":{},"110":{},"142":{},"158":{},"174":{}},"component":{}}],["next",{"_index":67,"title":{},"name":{},"text":{"1":{},"2":{},"18":{},"22":{},"39":{},"47":{},"48":{},"64":{},"68":{},"85":{},"93":{},"94":{},"110":{},"114":{},"131":{},"142":{},"146":{},"158":{},"162":{},"174":{},"178":{},"195":{},"207":{},"219":{}},"component":{}}],["nexu",{"_index":374,"title":{},"name":{},"text":{"8":{},"10":{},"13":{},"15":{},"31":{},"37":{},"38":{},"39":{},"40":{},"41":{},"43":{},"54":{},"56":{},"59":{},"61":{},"77":{},"83":{},"84":{},"85":{},"86":{},"87":{},"89":{},"100":{},"102":{},"105":{},"107":{},"123":{},"129":{},"130":{},"131":{},"132":{},"133":{},"135":{},"139":{},"155":{},"171":{},"187":{},"193":{},"194":{},"195":{},"196":{},"197":{},"199":{},"205":{},"206":{},"207":{},"208":{},"209":{},"211":{},"217":{},"218":{},"219":{},"220":{},"221":{},"223":{},"227":{},"231":{}},"component":{}}],["ng",{"_index":926,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["node",{"_index":275,"title":{},"name":{},"text":{"2":{},"23":{},"28":{},"29":{},"34":{},"41":{},"48":{},"69":{},"74":{},"75":{},"80":{},"87":{},"94":{},"115":{},"120":{},"121":{},"126":{},"133":{},"147":{},"152":{},"153":{},"163":{},"168":{},"169":{},"179":{},"184":{},"185":{},"190":{},"197":{},"202":{},"209":{},"214":{},"221":{}},"component":{}}],["node%253ar%253ace161c54",{"_index":856,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["node%3ar%3ace161c54",{"_index":845,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["node.getchildren(\"modules\").filterload",{"_index":1092,"title":{},"name":{},"text":{"34":{},"80":{},"126":{},"190":{},"202":{},"214":{}},"component":{}}],["none",{"_index":539,"title":{},"name":{},"text":{"15":{},"61":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["noteworthi",{"_index":637,"title":{},"name":{},"text":{"21":{},"67":{},"113":{},"145":{},"161":{},"177":{}},"component":{}}],["noth",{"_index":318,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["notif",{"_index":649,"title":{},"name":{},"text":{"21":{},"67":{},"113":{},"145":{},"161":{},"177":{}},"component":{}}],["notnul",{"_index":741,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["now",{"_index":704,"title":{},"name":{},"text":{"23":{},"26":{},"27":{},"35":{},"69":{},"72":{},"73":{},"81":{},"115":{},"118":{},"119":{},"127":{},"147":{},"150":{},"151":{},"163":{},"166":{},"167":{},"179":{},"182":{},"183":{},"191":{},"203":{},"215":{}},"component":{}}],["null",{"_index":751,"title":{},"name":{},"text":{"23":{},"26":{},"29":{},"69":{},"72":{},"75":{},"115":{},"118":{},"121":{},"147":{},"150":{},"153":{},"163":{},"166":{},"169":{},"179":{},"182":{},"185":{}},"component":{}}],["nullabl",{"_index":746,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["number",{"_index":392,"title":{},"name":{},"text":{"8":{},"45":{},"54":{},"91":{},"100":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["o",{"_index":1041,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["o.m.s.r.modelserverlightwrapp",{"_index":1054,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["oauth",{"_index":239,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["object",{"_index":1259,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["observ",{"_index":886,"title":{},"name":{},"text":{"27":{},"73":{},"119":{},"151":{},"167":{},"183":{}},"component":{}}],["obtain",{"_index":512,"title":{},"name":{},"text":{"13":{},"15":{},"17":{},"21":{},"22":{},"29":{},"31":{},"43":{},"59":{},"61":{},"63":{},"67":{},"68":{},"75":{},"77":{},"89":{},"105":{},"107":{},"109":{},"113":{},"114":{},"121":{},"123":{},"135":{},"139":{},"141":{},"145":{},"146":{},"153":{},"155":{},"157":{},"161":{},"162":{},"169":{},"171":{},"173":{},"177":{},"178":{},"185":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["on",{"_index":99,"title":{},"name":{},"text":{"1":{},"3":{},"15":{},"21":{},"22":{},"23":{},"25":{},"41":{},"45":{},"47":{},"49":{},"61":{},"67":{},"68":{},"69":{},"71":{},"87":{},"91":{},"93":{},"95":{},"107":{},"113":{},"114":{},"115":{},"117":{},"133":{},"137":{},"139":{},"145":{},"146":{},"147":{},"149":{},"155":{},"161":{},"162":{},"163":{},"165":{},"171":{},"177":{},"178":{},"179":{},"181":{},"197":{},"209":{},"221":{},"225":{},"229":{},"233":{}},"component":{}}],["onc",{"_index":421,"title":{},"name":{},"text":{"8":{},"15":{},"17":{},"26":{},"27":{},"28":{},"29":{},"35":{},"54":{},"61":{},"63":{},"72":{},"73":{},"74":{},"75":{},"81":{},"100":{},"107":{},"109":{},"118":{},"119":{},"120":{},"121":{},"127":{},"139":{},"141":{},"150":{},"151":{},"152":{},"153":{},"155":{},"157":{},"166":{},"167":{},"168":{},"169":{},"171":{},"173":{},"182":{},"183":{},"184":{},"185":{},"191":{},"203":{},"215":{}},"component":{}}],["oneoff",{"_index":697,"title":{},"name":{},"text":{"23":{},"38":{},"69":{},"84":{},"115":{},"130":{},"147":{},"163":{},"179":{},"194":{},"206":{},"218":{}},"component":{}}],["ongo",{"_index":650,"title":{},"name":{},"text":{"21":{},"67":{},"113":{},"145":{},"161":{},"177":{}},"component":{}}],["open",{"_index":11,"title":{},"name":{},"text":{"1":{},"4":{},"8":{},"9":{},"15":{},"26":{},"28":{},"29":{},"47":{},"50":{},"54":{},"55":{},"61":{},"72":{},"74":{},"75":{},"93":{},"96":{},"100":{},"101":{},"107":{},"118":{},"120":{},"121":{},"139":{},"150":{},"152":{},"153":{},"155":{},"166":{},"168":{},"169":{},"171":{},"182":{},"184":{},"185":{}},"component":{}}],["openapi",{"_index":571,"title":{"25":{},"71":{},"117":{},"149":{},"165":{},"181":{},"21-4":{},"21-5":{},"22-3":{},"67-4":{},"67-5":{},"68-3":{},"113-4":{},"113-5":{},"114-3":{},"145-4":{},"145-5":{},"146-3":{},"161-4":{},"161-5":{},"162-3":{},"177-4":{},"177-5":{},"178-3":{}},"name":{"25":{},"71":{},"117":{},"149":{},"165":{},"181":{}},"text":{"17":{},"21":{},"22":{},"25":{},"26":{},"41":{},"63":{},"67":{},"68":{},"71":{},"72":{},"87":{},"109":{},"113":{},"114":{},"117":{},"118":{},"133":{},"141":{},"145":{},"146":{},"149":{},"150":{},"157":{},"161":{},"162":{},"165":{},"166":{},"173":{},"177":{},"178":{},"181":{},"182":{},"197":{},"209":{},"221":{}},"component":{}}],["openapi.yaml",{"_index":818,"title":{},"name":{},"text":{"26":{},"27":{},"72":{},"73":{},"118":{},"119":{},"150":{},"151":{},"166":{},"167":{},"182":{},"183":{}},"component":{}}],["openapi.yml",{"_index":803,"title":{},"name":{},"text":{"25":{},"71":{},"117":{},"149":{},"165":{},"181":{}},"component":{}}],["oper",{"_index":281,"title":{"41-1":{},"87-1":{},"133-1":{},"197-1":{},"209-1":{},"221-1":{}},"name":{},"text":{"2":{},"11":{},"41":{},"48":{},"57":{},"87":{},"94":{},"103":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["optim",{"_index":1156,"title":{},"name":{},"text":{"37":{},"83":{},"129":{},"193":{},"205":{},"217":{}},"component":{}}],["option",{"_index":209,"title":{},"name":{},"text":{"2":{},"13":{},"15":{},"25":{},"29":{},"31":{},"34":{},"38":{},"39":{},"41":{},"43":{},"48":{},"59":{},"61":{},"71":{},"75":{},"77":{},"80":{},"84":{},"85":{},"87":{},"89":{},"94":{},"105":{},"107":{},"117":{},"121":{},"123":{},"126":{},"130":{},"131":{},"133":{},"135":{},"139":{},"149":{},"153":{},"155":{},"165":{},"169":{},"171":{},"181":{},"185":{},"187":{},"190":{},"194":{},"195":{},"197":{},"199":{},"202":{},"206":{},"207":{},"209":{},"211":{},"214":{},"218":{},"219":{},"221":{},"223":{},"227":{},"231":{}},"component":{}}],["options>ng",{"_index":1036,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["order",{"_index":298,"title":{},"name":{},"text":{"2":{},"38":{},"41":{},"45":{},"48":{},"84":{},"87":{},"91":{},"94":{},"130":{},"133":{},"137":{},"194":{},"197":{},"206":{},"209":{},"218":{},"221":{},"225":{},"229":{},"233":{}},"component":{}}],["org.example.mylanguag",{"_index":1141,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["org.jetbrains.annotations.notnul",{"_index":730,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["org.jetbrains.annotations.nul",{"_index":732,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["org.modelix",{"_index":435,"title":{},"name":{},"text":{"10":{},"29":{},"56":{},"75":{},"102":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["org.modelix.languag",{"_index":1275,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["org.modelix.model",{"_index":442,"title":{},"name":{},"text":{"10":{},"35":{},"56":{},"81":{},"102":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["org.modelix.model.api.inod",{"_index":731,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["org.modelix.model.server.main",{"_index":802,"title":{},"name":{},"text":{"24":{},"29":{},"70":{},"75":{},"116":{},"121":{},"148":{},"153":{},"164":{},"169":{},"180":{},"185":{}},"component":{}}],["org.modelix.mp",{"_index":395,"title":{},"name":{},"text":{"8":{},"10":{},"54":{},"56":{},"100":{},"102":{}},"component":{}}],["org.modelix.mps.apigen.runtime.inodehold",{"_index":729,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["org.modelix.mps.build",{"_index":451,"title":{},"name":{},"text":{"10":{},"56":{},"102":{}},"component":{}}],["org.modelix.mps.model",{"_index":449,"title":{},"name":{},"text":{"10":{},"56":{},"102":{}},"component":{}}],["org.modelix:platform",{"_index":1310,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["organ",{"_index":565,"title":{},"name":{},"text":{"17":{},"63":{},"109":{},"141":{},"157":{},"173":{}},"component":{}}],["organis",{"_index":366,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["orient",{"_index":112,"title":{},"name":{},"text":{"1":{},"5":{},"7":{},"11":{},"14":{},"47":{},"51":{},"53":{},"57":{},"60":{},"93":{},"97":{},"99":{},"103":{},"106":{}},"component":{}}],["ot",{"_index":289,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["other",{"_index":57,"title":{},"name":{},"text":{"1":{},"12":{},"31":{},"47":{},"58":{},"77":{},"93":{},"104":{},"123":{},"187":{},"199":{},"211":{}},"component":{}}],["otherwis",{"_index":79,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["out",{"_index":72,"title":{},"name":{},"text":{"1":{},"8":{},"34":{},"35":{},"36":{},"45":{},"47":{},"54":{},"80":{},"81":{},"82":{},"91":{},"93":{},"100":{},"126":{},"127":{},"128":{},"137":{},"190":{},"191":{},"192":{},"202":{},"203":{},"204":{},"214":{},"215":{},"216":{},"225":{},"229":{},"233":{}},"component":{}}],["output",{"_index":908,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["outsid",{"_index":586,"title":{},"name":{},"text":{"18":{},"22":{},"34":{},"38":{},"64":{},"68":{},"80":{},"84":{},"110":{},"114":{},"126":{},"130":{},"142":{},"146":{},"158":{},"162":{},"174":{},"178":{},"190":{},"194":{},"202":{},"206":{},"214":{},"218":{}},"component":{}}],["over",{"_index":63,"title":{},"name":{},"text":{"1":{},"2":{},"8":{},"12":{},"34":{},"41":{},"47":{},"48":{},"54":{},"58":{},"80":{},"87":{},"93":{},"94":{},"100":{},"104":{},"126":{},"133":{},"190":{},"197":{},"202":{},"209":{},"214":{},"221":{}},"component":{}}],["overcom",{"_index":329,"title":{},"name":{},"text":{"3":{},"49":{},"95":{}},"component":{}}],["overrid",{"_index":742,"title":{"45-2":{},"91-2":{},"137-2":{},"225-2":{},"229-2":{},"233-2":{}},"name":{},"text":{"23":{},"45":{},"69":{},"91":{},"115":{},"137":{},"147":{},"163":{},"179":{},"225":{},"229":{},"233":{}},"component":{}}],["overview",{"_index":62,"title":{"2-1":{},"20-1":{},"38-1":{},"39-1":{},"48-1":{},"66-1":{},"84-1":{},"85-1":{},"94-1":{},"112-1":{},"130-1":{},"131-1":{},"144-1":{},"160-1":{},"176-1":{},"194-1":{},"195-1":{},"206-1":{},"207-1":{},"218-1":{},"219-1":{}},"name":{},"text":{"1":{},"2":{},"8":{},"12":{},"21":{},"47":{},"48":{},"54":{},"58":{},"67":{},"93":{},"94":{},"100":{},"104":{},"113":{},"145":{},"161":{},"177":{}},"component":{}}],["p",{"_index":793,"title":{},"name":{},"text":{"24":{},"70":{},"116":{},"148":{},"164":{},"180":{}},"component":{}}],["packag",{"_index":375,"title":{"13-3":{},"15-6":{},"31-6":{},"43-6":{},"59-3":{},"61-6":{},"77-6":{},"89-6":{},"105-3":{},"107-6":{},"123-6":{},"135-6":{},"139-6":{},"155-6":{},"171-6":{},"187-6":{},"199-6":{},"211-6":{},"223-6":{},"227-6":{},"231-6":{}},"name":{},"text":{"8":{},"10":{},"13":{},"15":{},"23":{},"31":{},"37":{},"38":{},"39":{},"40":{},"41":{},"43":{},"54":{},"56":{},"59":{},"61":{},"69":{},"77":{},"83":{},"84":{},"85":{},"86":{},"87":{},"89":{},"100":{},"102":{},"105":{},"107":{},"115":{},"123":{},"129":{},"130":{},"131":{},"132":{},"133":{},"135":{},"139":{},"147":{},"155":{},"163":{},"171":{},"179":{},"187":{},"193":{},"194":{},"195":{},"196":{},"197":{},"199":{},"205":{},"206":{},"207":{},"208":{},"209":{},"211":{},"217":{},"218":{},"219":{},"220":{},"221":{},"223":{},"227":{},"231":{}},"component":{}}],["page",{"_index":94,"title":{"22":{},"68":{},"114":{},"146":{},"162":{},"178":{},"21-6":{},"67-6":{},"113-6":{},"145-6":{},"161-6":{},"177-6":{}},"name":{},"text":{"1":{},"9":{},"12":{},"17":{},"18":{},"22":{},"47":{},"55":{},"58":{},"63":{},"64":{},"68":{},"93":{},"101":{},"104":{},"109":{},"110":{},"114":{},"141":{},"142":{},"146":{},"157":{},"158":{},"162":{},"173":{},"174":{},"178":{}},"component":{}}],["paramet",{"_index":1242,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["parent",{"_index":662,"title":{},"name":{},"text":{"22":{},"26":{},"27":{},"68":{},"72":{},"73":{},"114":{},"118":{},"119":{},"146":{},"150":{},"151":{},"162":{},"166":{},"167":{},"178":{},"182":{},"183":{}},"component":{}}],["parser",{"_index":331,"title":{},"name":{},"text":{"3":{},"49":{},"95":{}},"component":{}}],["part",{"_index":49,"title":{},"name":{},"text":{"1":{},"2":{},"15":{},"22":{},"23":{},"41":{},"47":{},"48":{},"61":{},"68":{},"69":{},"87":{},"93":{},"94":{},"107":{},"114":{},"115":{},"133":{},"139":{},"146":{},"147":{},"155":{},"162":{},"163":{},"171":{},"178":{},"179":{},"197":{},"209":{},"221":{}},"component":{}}],["particular",{"_index":344,"title":{},"name":{},"text":{"5":{},"51":{},"97":{}},"component":{}}],["past",{"_index":527,"title":{},"name":{},"text":{"13":{},"15":{},"31":{},"43":{},"59":{},"61":{},"77":{},"89":{},"105":{},"107":{},"123":{},"135":{},"139":{},"155":{},"171":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["patch",{"_index":393,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["path",{"_index":41,"title":{},"name":{},"text":{"1":{},"29":{},"36":{},"47":{},"75":{},"82":{},"93":{},"121":{},"128":{},"153":{},"169":{},"185":{},"192":{},"204":{},"216":{}},"component":{}}],["paus",{"_index":1038,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["perform",{"_index":264,"title":{},"name":{},"text":{"2":{},"36":{},"48":{},"82":{},"94":{},"128":{},"192":{},"204":{},"216":{}},"component":{}}],["period",{"_index":610,"title":{},"name":{},"text":{"18":{},"64":{},"110":{},"142":{},"158":{},"174":{}},"component":{}}],["persist",{"_index":901,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["person",{"_index":516,"title":{},"name":{},"text":{"13":{},"15":{},"31":{},"43":{},"59":{},"61":{},"77":{},"89":{},"105":{},"107":{},"123":{},"135":{},"139":{},"155":{},"171":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["phase",{"_index":928,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["physic",{"_index":862,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["pick",{"_index":1312,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["platform",{"_index":13,"title":{"44":{},"45":{},"90":{},"91":{},"136":{},"137":{},"224":{},"225":{},"228":{},"229":{},"232":{},"233":{},"12-2":{},"58-2":{},"104-2":{}},"name":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"text":{"1":{},"4":{},"8":{},"10":{},"12":{},"15":{},"21":{},"31":{},"37":{},"43":{},"44":{},"45":{},"47":{},"50":{},"54":{},"56":{},"58":{},"61":{},"67":{},"77":{},"83":{},"89":{},"90":{},"91":{},"93":{},"96":{},"100":{},"102":{},"104":{},"107":{},"113":{},"123":{},"129":{},"135":{},"136":{},"137":{},"139":{},"145":{},"155":{},"161":{},"171":{},"177":{},"187":{},"193":{},"199":{},"205":{},"211":{},"217":{},"223":{},"224":{},"225":{},"227":{},"228":{},"229":{},"231":{},"232":{},"233":{}},"component":{"223":{},"224":{},"225":{},"226":{},"227":{},"228":{},"229":{},"230":{},"231":{},"232":{},"233":{},"234":{}}}],["playbook",{"_index":133,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["pleas",{"_index":139,"title":{},"name":{},"text":{"1":{},"8":{},"9":{},"12":{},"41":{},"47":{},"54":{},"55":{},"58":{},"87":{},"93":{},"100":{},"101":{},"104":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["plugin",{"_index":190,"title":{"35":{},"39":{},"81":{},"85":{},"127":{},"131":{},"191":{},"195":{},"203":{},"207":{},"215":{},"219":{}},"name":{},"text":{"2":{},"8":{},"10":{},"17":{},"21":{},"24":{},"26":{},"28":{},"29":{},"34":{},"35":{},"39":{},"40":{},"41":{},"44":{},"48":{},"54":{},"56":{},"63":{},"67":{},"70":{},"72":{},"74":{},"75":{},"80":{},"81":{},"85":{},"86":{},"87":{},"90":{},"94":{},"100":{},"102":{},"109":{},"113":{},"116":{},"118":{},"120":{},"121":{},"126":{},"127":{},"131":{},"132":{},"133":{},"136":{},"141":{},"145":{},"148":{},"150":{},"152":{},"153":{},"157":{},"161":{},"164":{},"166":{},"168":{},"169":{},"173":{},"177":{},"180":{},"182":{},"184":{},"185":{},"190":{},"191":{},"195":{},"196":{},"197":{},"202":{},"203":{},"207":{},"208":{},"209":{},"214":{},"215":{},"219":{},"220":{},"221":{},"224":{},"228":{},"232":{}},"component":{}}],["pluginmanag",{"_index":1102,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["point",{"_index":535,"title":{"15-7":{},"61-7":{},"107-7":{},"139-7":{},"155-7":{},"171-7":{}},"name":{},"text":{"29":{},"39":{},"75":{},"85":{},"121":{},"131":{},"153":{},"169":{},"185":{},"195":{},"207":{},"219":{}},"component":{}}],["polyfil",{"_index":937,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["polyfills.j",{"_index":936,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["port",{"_index":667,"title":{},"name":{},"text":{"22":{},"26":{},"29":{},"68":{},"72":{},"75":{},"114":{},"118":{},"121":{},"146":{},"150":{},"153":{},"162":{},"166":{},"169":{},"178":{},"182":{},"185":{}},"component":{}}],["possibl",{"_index":225,"title":{},"name":{},"text":{"2":{},"15":{},"23":{},"41":{},"48":{},"61":{},"69":{},"87":{},"94":{},"107":{},"115":{},"133":{},"139":{},"147":{},"155":{},"163":{},"171":{},"179":{},"197":{},"209":{},"221":{}},"component":{}}],["power",{"_index":596,"title":{},"name":{},"text":{"18":{},"64":{},"110":{},"142":{},"158":{},"174":{}},"component":{}}],["practic",{"_index":1071,"title":{},"name":{},"text":{"34":{},"35":{},"36":{},"80":{},"81":{},"82":{},"126":{},"127":{},"128":{},"190":{},"191":{},"192":{},"202":{},"203":{},"204":{},"214":{},"215":{},"216":{}},"component":{}}],["precondit",{"_index":879,"title":{},"name":{},"text":{"27":{},"73":{},"119":{},"151":{},"167":{},"183":{}},"component":{}}],["prefix",{"_index":389,"title":{},"name":{},"text":{"8":{},"39":{},"54":{},"85":{},"100":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["present",{"_index":1072,"title":{},"name":{},"text":{"34":{},"35":{},"36":{},"80":{},"81":{},"82":{},"126":{},"127":{},"128":{},"190":{},"191":{},"192":{},"202":{},"203":{},"204":{},"214":{},"215":{},"216":{}},"component":{}}],["press",{"_index":1035,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["prevent",{"_index":1090,"title":{},"name":{},"text":{"34":{},"80":{},"126":{},"190":{},"202":{},"214":{}},"component":{}}],["previou",{"_index":282,"title":{},"name":{},"text":{"2":{},"39":{},"41":{},"48":{},"85":{},"87":{},"94":{},"131":{},"133":{},"195":{},"197":{},"207":{},"209":{},"219":{},"221":{}},"component":{}}],["previous",{"_index":657,"title":{},"name":{},"text":{"22":{},"29":{},"39":{},"68":{},"75":{},"85":{},"114":{},"121":{},"131":{},"146":{},"153":{},"162":{},"169":{},"178":{},"185":{},"195":{},"207":{},"219":{}},"component":{}}],["primari",{"_index":483,"title":{},"name":{},"text":{"12":{},"15":{},"58":{},"61":{},"104":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["primarili",{"_index":1221,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["privat",{"_index":767,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["problem",{"_index":299,"title":{},"name":{},"text":{"2":{},"7":{},"41":{},"48":{},"53":{},"87":{},"94":{},"99":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["process",{"_index":253,"title":{},"name":{},"text":{"2":{},"8":{},"25":{},"28":{},"29":{},"37":{},"39":{},"48":{},"54":{},"71":{},"74":{},"75":{},"83":{},"85":{},"94":{},"100":{},"117":{},"120":{},"121":{},"129":{},"131":{},"149":{},"152":{},"153":{},"165":{},"168":{},"169":{},"181":{},"184":{},"185":{},"193":{},"195":{},"205":{},"207":{},"217":{},"219":{}},"component":{}}],["produc",{"_index":283,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["product",{"_index":55,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["program",{"_index":325,"title":{},"name":{},"text":{"3":{},"49":{},"95":{}},"component":{}}],["progress",{"_index":537,"title":{},"name":{},"text":{"15":{},"61":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["project",{"_index":36,"title":{"20":{},"66":{},"112":{},"144":{},"160":{},"176":{},"2-1":{},"48-1":{},"94-1":{}},"name":{},"text":{"1":{},"2":{},"3":{},"8":{},"13":{},"14":{},"15":{},"17":{},"20":{},"21":{},"22":{},"23":{},"25":{},"26":{},"27":{},"28":{},"29":{},"31":{},"34":{},"35":{},"36":{},"39":{},"43":{},"45":{},"47":{},"48":{},"49":{},"54":{},"59":{},"60":{},"61":{},"63":{},"66":{},"67":{},"68":{},"69":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"80":{},"81":{},"82":{},"85":{},"89":{},"91":{},"93":{},"94":{},"95":{},"100":{},"105":{},"106":{},"107":{},"109":{},"112":{},"113":{},"114":{},"115":{},"117":{},"118":{},"119":{},"120":{},"121":{},"123":{},"126":{},"127":{},"128":{},"131":{},"135":{},"137":{},"139":{},"141":{},"144":{},"145":{},"146":{},"147":{},"149":{},"150":{},"151":{},"152":{},"153":{},"155":{},"157":{},"160":{},"161":{},"162":{},"163":{},"165":{},"166":{},"167":{},"168":{},"169":{},"171":{},"173":{},"176":{},"177":{},"178":{},"179":{},"181":{},"182":{},"183":{},"184":{},"185":{},"187":{},"190":{},"191":{},"192":{},"195":{},"199":{},"202":{},"203":{},"204":{},"207":{},"211":{},"214":{},"215":{},"216":{},"219":{},"223":{},"225":{},"227":{},"229":{},"231":{},"233":{}},"component":{}}],["project\").projectdir.resolve(\"src/gen",{"_index":1144,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["project(\":mi",{"_index":1138,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["project(\":mps:metamodel\").projectdir.resolve(\"src/main/kotlin",{"_index":1136,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["projector",{"_index":543,"title":{},"name":{},"text":{"15":{},"61":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["project’",{"_index":1297,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["properti",{"_index":531,"title":{},"name":{},"text":{"13":{},"15":{},"23":{},"29":{},"31":{},"38":{},"43":{},"59":{},"61":{},"69":{},"75":{},"77":{},"84":{},"89":{},"105":{},"107":{},"115":{},"121":{},"123":{},"130":{},"135":{},"139":{},"147":{},"153":{},"155":{},"163":{},"169":{},"171":{},"179":{},"185":{},"187":{},"194":{},"199":{},"206":{},"211":{},"218":{},"223":{},"227":{},"231":{}},"component":{}}],["propertyvalu",{"_index":749,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["propertyvalue.isempti",{"_index":752,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["protected_prefix",{"_index":1289,"title":{},"name":{},"text":{"41":{},"87":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["provid",{"_index":218,"title":{"4-3":{},"50-3":{},"96-3":{}},"name":{},"text":{"2":{},"8":{},"12":{},"15":{},"20":{},"21":{},"22":{},"25":{},"26":{},"27":{},"28":{},"29":{},"35":{},"37":{},"38":{},"39":{},"41":{},"43":{},"45":{},"48":{},"54":{},"58":{},"61":{},"66":{},"67":{},"68":{},"71":{},"72":{},"73":{},"74":{},"75":{},"81":{},"83":{},"84":{},"85":{},"87":{},"89":{},"91":{},"94":{},"100":{},"104":{},"107":{},"112":{},"113":{},"114":{},"117":{},"118":{},"119":{},"120":{},"121":{},"127":{},"129":{},"130":{},"131":{},"133":{},"135":{},"137":{},"139":{},"144":{},"145":{},"146":{},"149":{},"150":{},"151":{},"152":{},"153":{},"155":{},"160":{},"161":{},"162":{},"165":{},"166":{},"167":{},"168":{},"169":{},"171":{},"176":{},"177":{},"178":{},"181":{},"182":{},"183":{},"184":{},"185":{},"191":{},"193":{},"194":{},"195":{},"197":{},"203":{},"205":{},"206":{},"207":{},"209":{},"215":{},"217":{},"218":{},"219":{},"221":{},"223":{},"225":{},"227":{},"229":{},"231":{},"233":{}},"component":{}}],["proxi",{"_index":231,"title":{},"name":{},"text":{"2":{},"10":{},"48":{},"56":{},"94":{},"102":{}},"component":{}}],["public",{"_index":497,"title":{"13-2":{},"15-5":{},"31-5":{},"43-5":{},"59-2":{},"61-5":{},"77-5":{},"89-5":{},"105-2":{},"107-5":{},"123-5":{},"135-5":{},"139-5":{},"155-5":{},"171-5":{},"187-5":{},"199-5":{},"211-5":{},"223-5":{},"227-5":{},"231-5":{}},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["publish",{"_index":369,"title":{},"name":{},"text":{"8":{},"13":{},"15":{},"31":{},"43":{},"54":{},"59":{},"61":{},"77":{},"89":{},"100":{},"105":{},"107":{},"123":{},"135":{},"139":{},"155":{},"171":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["pull",{"_index":141,"title":{},"name":{},"text":{"1":{},"9":{},"47":{},"55":{},"93":{},"101":{}},"component":{}}],["purpos",{"_index":546,"title":{},"name":{},"text":{"15":{},"25":{},"61":{},"71":{},"107":{},"117":{},"139":{},"149":{},"155":{},"165":{},"171":{},"181":{}},"component":{}}],["push",{"_index":648,"title":{},"name":{},"text":{"21":{},"67":{},"113":{},"145":{},"161":{},"177":{}},"component":{}}],["ql",{"_index":579,"title":{},"name":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"text":{"17":{},"20":{},"22":{},"28":{},"29":{},"63":{},"66":{},"68":{},"74":{},"75":{},"109":{},"112":{},"114":{},"120":{},"121":{},"141":{},"144":{},"146":{},"152":{},"153":{},"157":{},"160":{},"162":{},"168":{},"169":{},"173":{},"176":{},"178":{},"184":{},"185":{}},"component":{}}],["ql:build",{"_index":819,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["ql:run",{"_index":822,"title":{},"name":{},"text":{"26":{},"29":{},"72":{},"75":{},"118":{},"121":{},"150":{},"153":{},"166":{},"169":{},"182":{},"185":{}},"component":{}}],["qualifi",{"_index":1248,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["quarku",{"_index":575,"title":{},"name":{},"text":{"17":{},"21":{},"27":{},"63":{},"67":{},"73":{},"109":{},"113":{},"119":{},"141":{},"145":{},"151":{},"157":{},"161":{},"167":{},"173":{},"177":{},"183":{}},"component":{}}],["queri",{"_index":821,"title":{},"name":{},"text":{"26":{},"34":{},"72":{},"80":{},"118":{},"126":{},"150":{},"166":{},"182":{},"190":{},"202":{},"214":{}},"component":{}}],["question",{"_index":87,"title":{"6":{},"52":{},"98":{}},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["r",{"_index":1039,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["r1",{"_index":407,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["r2",{"_index":409,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["r:ce161c54",{"_index":882,"title":{},"name":{},"text":{"27":{},"73":{},"119":{},"151":{},"167":{},"183":{}},"component":{}}],["rare",{"_index":317,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["raw",{"_index":930,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["re",{"_index":1145,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["read",{"_index":550,"title":{},"name":{},"text":{"15":{},"17":{},"18":{},"21":{},"22":{},"34":{},"61":{},"63":{},"64":{},"67":{},"68":{},"80":{},"107":{},"109":{},"110":{},"113":{},"114":{},"126":{},"139":{},"141":{},"142":{},"145":{},"146":{},"155":{},"157":{},"158":{},"161":{},"162":{},"171":{},"173":{},"174":{},"177":{},"178":{},"190":{},"202":{},"214":{}},"component":{}}],["read/writ",{"_index":1080,"title":{},"name":{},"text":{"34":{},"80":{},"126":{},"190":{},"202":{},"214":{}},"component":{}}],["reader",{"_index":115,"title":{},"name":{},"text":{"1":{},"7":{},"14":{},"47":{},"53":{},"60":{},"93":{},"99":{},"106":{}},"component":{}}],["readi",{"_index":832,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["real",{"_index":353,"title":{"21-7":{},"41-1":{},"67-7":{},"87-1":{},"113-7":{},"133-1":{},"145-7":{},"161-7":{},"177-7":{},"197-1":{},"209-1":{},"221-1":{}},"name":{},"text":{"7":{},"20":{},"24":{},"41":{},"53":{},"66":{},"70":{},"87":{},"99":{},"112":{},"116":{},"133":{},"144":{},"148":{},"160":{},"164":{},"176":{},"180":{},"197":{},"209":{},"221":{}},"component":{}}],["realiz",{"_index":562,"title":{},"name":{},"text":{"15":{},"17":{},"21":{},"61":{},"63":{},"67":{},"107":{},"109":{},"113":{},"139":{},"141":{},"145":{},"155":{},"157":{},"161":{},"171":{},"173":{},"177":{}},"component":{}}],["realli",{"_index":812,"title":{},"name":{},"text":{"25":{},"71":{},"117":{},"149":{},"165":{},"181":{}},"component":{}}],["realtim",{"_index":278,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["receiv",{"_index":192,"title":{},"name":{},"text":{"2":{},"34":{},"41":{},"48":{},"80":{},"87":{},"94":{},"126":{},"133":{},"190":{},"197":{},"202":{},"209":{},"214":{},"221":{}},"component":{}}],["recommend",{"_index":1151,"title":{},"name":{},"text":{"36":{},"82":{},"128":{},"192":{},"204":{},"216":{}},"component":{}}],["recur",{"_index":1192,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["reduc",{"_index":16,"title":{},"name":{},"text":{"1":{},"4":{},"47":{},"50":{},"93":{},"96":{}},"component":{}}],["refer",{"_index":65,"title":{"11":{},"57":{},"103":{}},"name":{},"text":{"1":{},"8":{},"11":{},"23":{},"35":{},"38":{},"41":{},"47":{},"54":{},"57":{},"69":{},"81":{},"84":{},"87":{},"93":{},"100":{},"103":{},"115":{},"127":{},"130":{},"133":{},"147":{},"163":{},"179":{},"191":{},"194":{},"197":{},"203":{},"206":{},"209":{},"215":{},"218":{},"221":{}},"component":{}}],["reformat",{"_index":1287,"title":{},"name":{},"text":{"41":{},"87":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["refresh",{"_index":609,"title":{},"name":{},"text":{"18":{},"64":{},"110":{},"142":{},"158":{},"174":{}},"component":{}}],["regener",{"_index":776,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["regist",{"_index":1009,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["registr",{"_index":1139,"title":{},"name":{},"text":{"35":{},"39":{},"81":{},"85":{},"127":{},"131":{},"191":{},"195":{},"203":{},"207":{},"215":{},"219":{}},"component":{}}],["registrationhelpernam",{"_index":1140,"title":{},"name":{},"text":{"35":{},"39":{},"81":{},"85":{},"127":{},"131":{},"191":{},"195":{},"203":{},"207":{},"215":{},"219":{}},"component":{}}],["relat",{"_index":622,"title":{},"name":{},"text":{"20":{},"35":{},"66":{},"81":{},"112":{},"127":{},"144":{},"160":{},"176":{},"191":{},"203":{},"215":{}},"component":{}}],["releas",{"_index":356,"title":{"8":{},"54":{},"100":{},"8-2":{},"54-2":{},"100-2":{}},"name":{},"text":{"8":{},"12":{},"35":{},"43":{},"44":{},"54":{},"58":{},"81":{},"89":{},"90":{},"100":{},"104":{},"127":{},"135":{},"136":{},"191":{},"203":{},"215":{},"223":{},"224":{},"227":{},"228":{},"231":{},"232":{}},"component":{}}],["relev",{"_index":371,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["reload",{"_index":961,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["remain",{"_index":308,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["remov",{"_index":261,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["renam",{"_index":707,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["render",{"_index":246,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["repeat",{"_index":687,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["replac",{"_index":529,"title":{},"name":{},"text":{"13":{},"15":{},"31":{},"43":{},"59":{},"61":{},"77":{},"89":{},"105":{},"107":{},"123":{},"135":{},"139":{},"155":{},"171":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["replic",{"_index":199,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["repo",{"_index":434,"title":{},"name":{},"text":{"10":{},"56":{},"102":{}},"component":{}}],["repo/w",{"_index":1076,"title":{},"name":{},"text":{"34":{},"80":{},"126":{},"190":{},"202":{},"214":{}},"component":{}}],["report",{"_index":162,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["repositori",{"_index":131,"title":{"17":{},"21":{},"63":{},"67":{},"109":{},"113":{},"141":{},"145":{},"157":{},"161":{},"173":{},"177":{}},"name":{"12":{},"58":{},"104":{}},"text":{"1":{},"2":{},"8":{},"12":{},"13":{},"15":{},"17":{},"21":{},"23":{},"24":{},"27":{},"28":{},"29":{},"31":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"43":{},"47":{},"48":{},"54":{},"58":{},"59":{},"61":{},"63":{},"67":{},"69":{},"70":{},"73":{},"74":{},"75":{},"77":{},"81":{},"83":{},"84":{},"85":{},"86":{},"87":{},"89":{},"93":{},"94":{},"100":{},"104":{},"105":{},"107":{},"109":{},"113":{},"115":{},"116":{},"119":{},"120":{},"121":{},"123":{},"127":{},"129":{},"130":{},"131":{},"132":{},"133":{},"135":{},"139":{},"141":{},"145":{},"147":{},"148":{},"151":{},"152":{},"153":{},"155":{},"157":{},"161":{},"163":{},"164":{},"167":{},"168":{},"169":{},"171":{},"173":{},"177":{},"179":{},"180":{},"183":{},"184":{},"185":{},"187":{},"191":{},"193":{},"194":{},"195":{},"196":{},"197":{},"199":{},"203":{},"205":{},"206":{},"207":{},"208":{},"209":{},"211":{},"215":{},"217":{},"218":{},"219":{},"220":{},"221":{},"223":{},"227":{},"231":{}},"component":{}}],["repres",{"_index":426,"title":{},"name":{},"text":{"9":{},"18":{},"39":{},"55":{},"64":{},"85":{},"101":{},"110":{},"131":{},"142":{},"158":{},"174":{},"195":{},"207":{},"219":{}},"component":{}}],["request",{"_index":142,"title":{},"name":{},"text":{"1":{},"2":{},"9":{},"47":{},"48":{},"55":{},"93":{},"94":{},"101":{}},"component":{}}],["requir",{"_index":196,"title":{},"name":{},"text":{"2":{},"7":{},"13":{},"15":{},"18":{},"21":{},"31":{},"35":{},"41":{},"43":{},"48":{},"53":{},"59":{},"61":{},"64":{},"67":{},"77":{},"81":{},"87":{},"89":{},"94":{},"99":{},"105":{},"107":{},"110":{},"113":{},"123":{},"127":{},"133":{},"135":{},"139":{},"142":{},"145":{},"155":{},"158":{},"161":{},"171":{},"174":{},"177":{},"187":{},"191":{},"197":{},"199":{},"203":{},"209":{},"211":{},"215":{},"221":{},"223":{},"227":{},"231":{}},"component":{}}],["resolut",{"_index":1315,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["resolv",{"_index":287,"title":{},"name":{},"text":{"2":{},"29":{},"37":{},"41":{},"48":{},"75":{},"83":{},"87":{},"94":{},"121":{},"129":{},"133":{},"153":{},"169":{},"185":{},"193":{},"197":{},"205":{},"209":{},"217":{},"221":{}},"component":{}}],["resolvemp",{"_index":1117,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["resourc",{"_index":973,"title":{},"name":{},"text":{"29":{},"37":{},"75":{},"83":{},"121":{},"129":{},"153":{},"169":{},"185":{},"193":{},"205":{},"217":{}},"component":{}}],["respect",{"_index":1098,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["respond",{"_index":830,"title":{},"name":{},"text":{"26":{},"28":{},"29":{},"72":{},"74":{},"75":{},"118":{},"120":{},"121":{},"150":{},"152":{},"153":{},"166":{},"168":{},"169":{},"182":{},"184":{},"185":{}},"component":{}}],["respons",{"_index":1160,"title":{},"name":{},"text":{"37":{},"83":{},"129":{},"193":{},"205":{},"217":{}},"component":{}}],["rest",{"_index":219,"title":{},"name":{"26":{},"27":{},"72":{},"73":{},"118":{},"119":{},"150":{},"151":{},"166":{},"167":{},"182":{},"183":{}},"text":{"2":{},"17":{},"20":{},"22":{},"25":{},"26":{},"27":{},"28":{},"29":{},"48":{},"63":{},"66":{},"68":{},"71":{},"72":{},"73":{},"74":{},"75":{},"94":{},"109":{},"112":{},"114":{},"117":{},"118":{},"119":{},"120":{},"121":{},"141":{},"144":{},"146":{},"149":{},"150":{},"151":{},"152":{},"153":{},"157":{},"160":{},"162":{},"165":{},"166":{},"167":{},"168":{},"169":{},"173":{},"176":{},"178":{},"181":{},"182":{},"183":{},"184":{},"185":{}},"component":{}}],["restrict",{"_index":509,"title":{},"name":{},"text":{"13":{},"15":{},"31":{},"35":{},"43":{},"59":{},"61":{},"77":{},"81":{},"89":{},"105":{},"107":{},"123":{},"127":{},"135":{},"139":{},"155":{},"171":{},"187":{},"191":{},"199":{},"203":{},"211":{},"215":{},"223":{},"227":{},"231":{}},"component":{}}],["result",{"_index":105,"title":{},"name":{},"text":{"1":{},"2":{},"39":{},"41":{},"47":{},"48":{},"85":{},"87":{},"93":{},"94":{},"131":{},"133":{},"195":{},"197":{},"207":{},"209":{},"219":{},"221":{}},"component":{}}],["resum",{"_index":1040,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["return",{"_index":744,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["reus",{"_index":541,"title":{},"name":{},"text":{"15":{},"61":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["revers",{"_index":230,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["right",{"_index":70,"title":{},"name":{},"text":{"1":{},"23":{},"47":{},"69":{},"93":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["rm",{"_index":792,"title":{},"name":{},"text":{"24":{},"70":{},"116":{},"148":{},"164":{},"180":{}},"component":{}}],["roadmap",{"_index":74,"title":{"8":{},"54":{},"100":{},"8-3":{},"54-3":{},"100-3":{}},"name":{"8":{},"54":{},"100":{}},"text":{"1":{},"8":{},"47":{},"54":{},"93":{},"100":{}},"component":{}}],["role",{"_index":709,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["room",{"_index":591,"title":{},"name":{},"text":{"18":{},"23":{},"26":{},"27":{},"38":{},"64":{},"69":{},"72":{},"73":{},"84":{},"110":{},"115":{},"118":{},"119":{},"130":{},"142":{},"147":{},"150":{},"151":{},"158":{},"163":{},"166":{},"167":{},"174":{},"179":{},"182":{},"183":{},"194":{},"206":{},"218":{}},"component":{}}],["room(inod",{"_index":768,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["room.this.getinod",{"_index":745,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["roomref",{"_index":844,"title":{},"name":{},"text":{"26":{},"27":{},"72":{},"73":{},"118":{},"119":{},"150":{},"151":{},"166":{},"167":{},"182":{},"183":{}},"component":{}}],["rooms.children.rooms.foreach",{"_index":699,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["root",{"_index":692,"title":{},"name":{},"text":{"23":{},"24":{},"29":{},"34":{},"69":{},"70":{},"75":{},"80":{},"115":{},"116":{},"121":{},"126":{},"147":{},"148":{},"153":{},"163":{},"164":{},"169":{},"179":{},"180":{},"185":{},"190":{},"202":{},"214":{}},"component":{}}],["rootnod",{"_index":1085,"title":{},"name":{},"text":{"34":{},"80":{},"126":{},"190":{},"202":{},"214":{}},"component":{}}],["rootnode.getchildren(\"modul",{"_index":1088,"title":{},"name":{},"text":{"34":{},"80":{},"126":{},"190":{},"202":{},"214":{}},"component":{}}],["rootproject",{"_index":1109,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["run",{"_index":184,"title":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{},"22-1":{},"22-4":{},"68-1":{},"68-4":{},"114-1":{},"114-4":{},"146-1":{},"146-4":{},"162-1":{},"162-4":{},"178-1":{},"178-4":{}},"name":{},"text":{"2":{},"17":{},"18":{},"21":{},"22":{},"24":{},"26":{},"27":{},"28":{},"29":{},"36":{},"37":{},"41":{},"48":{},"63":{},"64":{},"67":{},"68":{},"70":{},"72":{},"73":{},"74":{},"75":{},"82":{},"83":{},"87":{},"94":{},"109":{},"110":{},"113":{},"114":{},"116":{},"118":{},"119":{},"120":{},"121":{},"128":{},"129":{},"133":{},"141":{},"142":{},"145":{},"146":{},"148":{},"150":{},"151":{},"152":{},"153":{},"157":{},"158":{},"161":{},"162":{},"164":{},"166":{},"167":{},"168":{},"169":{},"173":{},"174":{},"177":{},"178":{},"180":{},"182":{},"183":{},"184":{},"185":{},"192":{},"193":{},"197":{},"204":{},"205":{},"209":{},"216":{},"217":{},"221":{}},"component":{}}],["runner",{"_index":453,"title":{},"name":{},"text":{"10":{},"56":{},"102":{}},"component":{}}],["runread",{"_index":1082,"title":{},"name":{},"text":{"34":{},"80":{},"126":{},"190":{},"202":{},"214":{}},"component":{}}],["runtim",{"_index":440,"title":{},"name":{},"text":{"10":{},"28":{},"29":{},"56":{},"74":{},"75":{},"102":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["runtime.j",{"_index":946,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["runwrit",{"_index":1083,"title":{},"name":{},"text":{"34":{},"80":{},"126":{},"190":{},"202":{},"214":{}},"component":{}}],["s",{"_index":837,"title":{},"name":{},"text":{"26":{},"27":{},"72":{},"73":{},"118":{},"119":{},"150":{},"151":{},"166":{},"167":{},"182":{},"183":{}},"component":{}}],["safe",{"_index":702,"title":{},"name":{},"text":{"23":{},"29":{},"69":{},"75":{},"115":{},"121":{},"147":{},"153":{},"163":{},"169":{},"179":{},"185":{}},"component":{}}],["same",{"_index":211,"title":{},"name":{},"text":{"2":{},"15":{},"23":{},"41":{},"48":{},"61":{},"69":{},"87":{},"94":{},"107":{},"115":{},"133":{},"139":{},"147":{},"155":{},"163":{},"171":{},"179":{},"197":{},"209":{},"221":{}},"component":{}}],["sampl",{"_index":77,"title":{"15":{},"17":{},"20":{},"61":{},"63":{},"66":{},"107":{},"109":{},"112":{},"139":{},"141":{},"144":{},"155":{},"157":{},"160":{},"171":{},"173":{},"176":{},"12-4":{},"58-4":{},"104-4":{}},"name":{},"text":{"1":{},"10":{},"12":{},"15":{},"17":{},"20":{},"21":{},"22":{},"23":{},"28":{},"34":{},"35":{},"36":{},"47":{},"56":{},"58":{},"61":{},"63":{},"66":{},"67":{},"68":{},"69":{},"74":{},"80":{},"81":{},"82":{},"93":{},"102":{},"104":{},"107":{},"109":{},"112":{},"113":{},"114":{},"115":{},"120":{},"126":{},"127":{},"128":{},"139":{},"141":{},"144":{},"145":{},"146":{},"147":{},"152":{},"155":{},"157":{},"160":{},"161":{},"162":{},"163":{},"168":{},"171":{},"173":{},"176":{},"177":{},"178":{},"179":{},"184":{},"190":{},"191":{},"192":{},"202":{},"203":{},"204":{},"214":{},"215":{},"216":{}},"component":{"139":{},"140":{},"141":{},"142":{},"143":{},"144":{},"145":{},"146":{},"147":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"154":{},"155":{},"156":{},"157":{},"158":{},"159":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"170":{},"171":{},"172":{},"173":{},"174":{},"175":{},"176":{},"177":{},"178":{},"179":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"186":{}}}],["sample/model",{"_index":1021,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["samples:tutorial/startup",{"_index":563,"title":{},"name":{},"text":{"15":{},"61":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["scalabl",{"_index":224,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["scale",{"_index":170,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["scenario",{"_index":584,"title":{},"name":{},"text":{"18":{},"64":{},"110":{},"142":{},"158":{},"174":{}},"component":{}}],["schedul",{"_index":604,"title":{"19":{},"65":{},"111":{},"143":{},"159":{},"175":{}},"name":{},"text":{"18":{},"20":{},"23":{},"38":{},"64":{},"66":{},"69":{},"84":{},"110":{},"112":{},"115":{},"130":{},"142":{},"144":{},"147":{},"158":{},"160":{},"163":{},"174":{},"176":{},"179":{},"194":{},"206":{},"218":{}},"component":{}}],["schema",{"_index":1018,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["scheme",{"_index":385,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["schrödinger",{"_index":853,"title":{},"name":{},"text":{"26":{},"27":{},"72":{},"73":{},"118":{},"119":{},"150":{},"151":{},"166":{},"167":{},"182":{},"183":{}},"component":{}}],["second",{"_index":198,"title":{},"name":{},"text":{"2":{},"28":{},"29":{},"39":{},"48":{},"74":{},"75":{},"85":{},"94":{},"120":{},"121":{},"131":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{},"195":{},"207":{},"219":{}},"component":{}}],["secret",{"_index":1015,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["secrets/modelsecret/modelsecret.txt",{"_index":1016,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["section",{"_index":80,"title":{},"name":{},"text":{"1":{},"20":{},"21":{},"45":{},"47":{},"66":{},"67":{},"91":{},"93":{},"112":{},"113":{},"137":{},"144":{},"145":{},"160":{},"161":{},"176":{},"177":{},"225":{},"229":{},"233":{}},"component":{}}],["see",{"_index":174,"title":{},"name":{},"text":{"1":{},"3":{},"21":{},"22":{},"26":{},"28":{},"29":{},"38":{},"47":{},"49":{},"67":{},"68":{},"72":{},"74":{},"75":{},"84":{},"93":{},"95":{},"113":{},"114":{},"118":{},"120":{},"121":{},"130":{},"145":{},"146":{},"150":{},"152":{},"153":{},"161":{},"162":{},"166":{},"168":{},"169":{},"177":{},"178":{},"182":{},"184":{},"185":{},"194":{},"206":{},"218":{}},"component":{}}],["select",{"_index":101,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["semant",{"_index":384,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["semest",{"_index":689,"title":{},"name":{},"text":{"23":{},"38":{},"69":{},"84":{},"115":{},"130":{},"147":{},"163":{},"179":{},"194":{},"206":{},"218":{}},"component":{}}],["sent",{"_index":887,"title":{},"name":{},"text":{"27":{},"73":{},"119":{},"151":{},"167":{},"183":{}},"component":{}}],["separ",{"_index":106,"title":{},"name":{},"text":{"1":{},"2":{},"25":{},"47":{},"48":{},"71":{},"93":{},"94":{},"117":{},"149":{},"165":{},"181":{}},"component":{}}],["seri",{"_index":118,"title":{},"name":{},"text":{"1":{},"14":{},"47":{},"60":{},"93":{},"106":{}},"component":{}}],["serializ",{"_index":1164,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["serv",{"_index":81,"title":{},"name":{},"text":{"1":{},"12":{},"18":{},"25":{},"28":{},"29":{},"47":{},"58":{},"64":{},"71":{},"74":{},"75":{},"93":{},"104":{},"110":{},"117":{},"120":{},"121":{},"142":{},"149":{},"152":{},"153":{},"158":{},"165":{},"168":{},"169":{},"174":{},"181":{},"184":{},"185":{}},"component":{}}],["server",{"_index":187,"title":{"24":{},"27":{},"36":{},"41":{},"70":{},"73":{},"82":{},"87":{},"116":{},"119":{},"128":{},"133":{},"148":{},"151":{},"164":{},"167":{},"180":{},"183":{},"192":{},"197":{},"204":{},"209":{},"216":{},"221":{},"41-2":{},"87-2":{},"133-2":{},"197-2":{},"209-2":{},"221-2":{}},"name":{"24":{},"27":{},"36":{},"41":{},"70":{},"73":{},"82":{},"87":{},"116":{},"119":{},"128":{},"133":{},"148":{},"151":{},"164":{},"167":{},"180":{},"183":{},"192":{},"197":{},"204":{},"209":{},"216":{},"221":{}},"text":{"2":{},"8":{},"10":{},"12":{},"13":{},"15":{},"17":{},"20":{},"21":{},"22":{},"24":{},"25":{},"26":{},"27":{},"28":{},"29":{},"31":{},"34":{},"36":{},"37":{},"41":{},"43":{},"48":{},"54":{},"56":{},"58":{},"59":{},"61":{},"63":{},"66":{},"67":{},"68":{},"70":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"80":{},"82":{},"83":{},"87":{},"89":{},"94":{},"100":{},"102":{},"104":{},"105":{},"107":{},"109":{},"112":{},"113":{},"114":{},"116":{},"117":{},"118":{},"119":{},"120":{},"121":{},"123":{},"126":{},"128":{},"129":{},"133":{},"135":{},"139":{},"141":{},"144":{},"145":{},"146":{},"148":{},"149":{},"150":{},"151":{},"152":{},"153":{},"155":{},"157":{},"160":{},"161":{},"162":{},"164":{},"165":{},"166":{},"167":{},"168":{},"169":{},"171":{},"173":{},"176":{},"177":{},"178":{},"180":{},"181":{},"182":{},"183":{},"184":{},"185":{},"187":{},"190":{},"192":{},"193":{},"197":{},"199":{},"202":{},"204":{},"205":{},"209":{},"211":{},"214":{},"216":{},"217":{},"221":{},"223":{},"227":{},"231":{}},"component":{}}],["server.json",{"_index":1291,"title":{},"name":{},"text":{"41":{},"87":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["server/build/lib",{"_index":801,"title":{},"name":{},"text":{"24":{},"70":{},"116":{},"148":{},"164":{},"180":{}},"component":{}}],["server/courses.modelserver.dump",{"_index":1022,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["server:build",{"_index":878,"title":{},"name":{},"text":{"27":{},"73":{},"119":{},"151":{},"167":{},"183":{}},"component":{}}],["server:quarkusdev",{"_index":1031,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["server:run",{"_index":786,"title":{},"name":{},"text":{"24":{},"27":{},"29":{},"36":{},"70":{},"73":{},"75":{},"82":{},"116":{},"119":{},"121":{},"128":{},"148":{},"151":{},"153":{},"164":{},"167":{},"169":{},"180":{},"183":{},"185":{},"192":{},"204":{},"216":{}},"component":{}}],["set",{"_index":498,"title":{"13-3":{},"15-6":{},"31-6":{},"39-2":{},"43-6":{},"59-3":{},"61-6":{},"77-6":{},"85-2":{},"89-6":{},"105-3":{},"107-6":{},"123-6":{},"131-2":{},"135-6":{},"139-6":{},"155-6":{},"171-6":{},"187-6":{},"195-2":{},"199-6":{},"207-2":{},"211-6":{},"219-2":{},"223-6":{},"227-6":{},"231-6":{}},"name":{},"text":{"26":{},"29":{},"34":{},"35":{},"39":{},"72":{},"75":{},"80":{},"81":{},"85":{},"118":{},"121":{},"126":{},"127":{},"131":{},"150":{},"153":{},"166":{},"169":{},"182":{},"185":{},"190":{},"191":{},"195":{},"202":{},"203":{},"207":{},"214":{},"215":{},"219":{}},"component":{}}],["sethasremoteequipment(@nul",{"_index":760,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["setmaxplaces(integ",{"_index":754,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["settings.gradle.kt",{"_index":1095,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["setup",{"_index":511,"title":{},"name":{},"text":{"13":{},"15":{},"21":{},"28":{},"29":{},"31":{},"35":{},"43":{},"59":{},"61":{},"67":{},"74":{},"75":{},"77":{},"81":{},"89":{},"105":{},"107":{},"113":{},"120":{},"121":{},"123":{},"127":{},"135":{},"139":{},"145":{},"152":{},"153":{},"155":{},"161":{},"168":{},"169":{},"171":{},"177":{},"184":{},"185":{},"187":{},"191":{},"199":{},"203":{},"211":{},"215":{},"223":{},"227":{},"231":{}},"component":{}}],["sever",{"_index":966,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["share",{"_index":1131,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["ship",{"_index":542,"title":{},"name":{},"text":{"15":{},"61":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["short",{"_index":475,"title":{},"name":{},"text":{"12":{},"20":{},"21":{},"23":{},"37":{},"58":{},"66":{},"67":{},"69":{},"83":{},"104":{},"112":{},"113":{},"115":{},"129":{},"144":{},"145":{},"147":{},"160":{},"161":{},"163":{},"176":{},"177":{},"179":{},"193":{},"205":{},"217":{}},"component":{}}],["show",{"_index":182,"title":{},"name":{},"text":{"2":{},"12":{},"15":{},"18":{},"21":{},"22":{},"28":{},"48":{},"58":{},"61":{},"64":{},"67":{},"68":{},"74":{},"94":{},"104":{},"107":{},"110":{},"113":{},"114":{},"120":{},"139":{},"142":{},"145":{},"146":{},"152":{},"155":{},"158":{},"161":{},"162":{},"168":{},"171":{},"174":{},"177":{},"178":{},"184":{}},"component":{}}],["shown",{"_index":490,"title":{},"name":{},"text":{"12":{},"15":{},"58":{},"61":{},"104":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["side",{"_index":260,"title":{},"name":{},"text":{"2":{},"37":{},"48":{},"83":{},"94":{},"129":{},"193":{},"205":{},"217":{}},"component":{}}],["similar",{"_index":270,"title":{},"name":{},"text":{"2":{},"28":{},"29":{},"35":{},"41":{},"48":{},"74":{},"75":{},"81":{},"87":{},"94":{},"120":{},"121":{},"127":{},"133":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{},"191":{},"197":{},"203":{},"209":{},"215":{},"221":{}},"component":{}}],["simpl",{"_index":598,"title":{},"name":{},"text":{"18":{},"26":{},"27":{},"35":{},"64":{},"72":{},"73":{},"81":{},"110":{},"118":{},"119":{},"127":{},"142":{},"150":{},"151":{},"158":{},"166":{},"167":{},"174":{},"182":{},"183":{},"191":{},"203":{},"215":{}},"component":{}}],["simpli",{"_index":500,"title":{},"name":{},"text":{"13":{},"15":{},"18":{},"24":{},"28":{},"29":{},"31":{},"39":{},"43":{},"59":{},"61":{},"64":{},"70":{},"74":{},"75":{},"77":{},"85":{},"89":{},"105":{},"107":{},"110":{},"116":{},"120":{},"121":{},"123":{},"131":{},"135":{},"139":{},"142":{},"148":{},"152":{},"153":{},"155":{},"158":{},"164":{},"168":{},"169":{},"171":{},"174":{},"180":{},"184":{},"185":{},"187":{},"195":{},"199":{},"207":{},"211":{},"219":{},"223":{},"227":{},"231":{}},"component":{}}],["simplifi",{"_index":677,"title":{},"name":{},"text":{"23":{},"44":{},"69":{},"90":{},"115":{},"136":{},"147":{},"163":{},"179":{},"224":{},"228":{},"232":{}},"component":{}}],["singl",{"_index":404,"title":{"22":{},"68":{},"114":{},"146":{},"162":{},"178":{},"21-6":{},"67-6":{},"113-6":{},"145-6":{},"161-6":{},"177-6":{}},"name":{},"text":{"8":{},"17":{},"18":{},"22":{},"23":{},"25":{},"45":{},"54":{},"63":{},"64":{},"68":{},"69":{},"71":{},"91":{},"100":{},"109":{},"110":{},"114":{},"115":{},"117":{},"137":{},"141":{},"142":{},"146":{},"147":{},"149":{},"157":{},"158":{},"162":{},"163":{},"165":{},"173":{},"174":{},"178":{},"179":{},"181":{},"225":{},"229":{},"233":{}},"component":{}}],["size",{"_index":931,"title":{},"name":{},"text":{"28":{},"29":{},"39":{},"74":{},"75":{},"85":{},"120":{},"121":{},"131":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{},"195":{},"207":{},"219":{}},"component":{}}],["skip",{"_index":1224,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["slack",{"_index":154,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["small",{"_index":675,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["snapshot",{"_index":280,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["socket",{"_index":888,"title":{},"name":{},"text":{"27":{},"73":{},"119":{},"151":{},"167":{},"183":{}},"component":{}}],["softwar",{"_index":128,"title":{},"name":{},"text":{"1":{},"8":{},"47":{},"54":{},"93":{},"100":{}},"component":{}}],["solut",{"_index":452,"title":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"name":{},"text":{"10":{},"35":{},"38":{},"39":{},"56":{},"81":{},"84":{},"85":{},"102":{},"127":{},"130":{},"131":{},"191":{},"194":{},"195":{},"203":{},"206":{},"207":{},"215":{},"218":{},"219":{}},"component":{}}],["solv",{"_index":352,"title":{},"name":{},"text":{"7":{},"53":{},"99":{}},"component":{}}],["somebodi",{"_index":706,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["somehjtinghekjrekjrh",{"_index":850,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["somehow",{"_index":779,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["sometim",{"_index":1311,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["soulut",{"_index":631,"title":{},"name":{},"text":{"21":{},"67":{},"113":{},"145":{},"161":{},"177":{}},"component":{}}],["sourc",{"_index":12,"title":{},"name":{},"text":{"1":{},"4":{},"8":{},"21":{},"23":{},"35":{},"39":{},"40":{},"47":{},"50":{},"54":{},"67":{},"69":{},"81":{},"85":{},"86":{},"93":{},"96":{},"100":{},"113":{},"115":{},"127":{},"131":{},"132":{},"145":{},"147":{},"161":{},"163":{},"177":{},"179":{},"191":{},"195":{},"196":{},"203":{},"207":{},"208":{},"215":{},"219":{},"220":{}},"component":{}}],["spa",{"_index":558,"title":{"21-6":{},"22-2":{},"67-6":{},"68-2":{},"113-6":{},"114-2":{},"145-6":{},"146-2":{},"161-6":{},"162-2":{},"177-6":{},"178-2":{}},"name":{},"text":{"15":{},"17":{},"18":{},"22":{},"28":{},"29":{},"61":{},"63":{},"64":{},"68":{},"74":{},"75":{},"107":{},"109":{},"110":{},"114":{},"120":{},"121":{},"139":{},"141":{},"142":{},"146":{},"152":{},"153":{},"155":{},"157":{},"158":{},"162":{},"168":{},"169":{},"171":{},"173":{},"174":{},"178":{},"184":{},"185":{}},"component":{}}],["spec",{"_index":664,"title":{},"name":{},"text":{"22":{},"26":{},"27":{},"68":{},"72":{},"73":{},"114":{},"118":{},"119":{},"146":{},"150":{},"151":{},"162":{},"166":{},"167":{},"178":{},"182":{},"183":{}},"component":{}}],["special",{"_index":319,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["specif",{"_index":100,"title":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{},"21-4":{},"67-4":{},"113-4":{},"145-4":{},"161-4":{},"177-4":{}},"name":{},"text":{"1":{},"3":{},"17":{},"21":{},"22":{},"23":{},"25":{},"35":{},"39":{},"40":{},"45":{},"47":{},"49":{},"63":{},"67":{},"68":{},"69":{},"71":{},"81":{},"85":{},"86":{},"91":{},"93":{},"95":{},"109":{},"113":{},"114":{},"115":{},"117":{},"127":{},"131":{},"132":{},"137":{},"141":{},"145":{},"146":{},"147":{},"149":{},"157":{},"161":{},"162":{},"163":{},"165":{},"173":{},"177":{},"178":{},"179":{},"181":{},"191":{},"195":{},"196":{},"203":{},"207":{},"208":{},"215":{},"219":{},"220":{},"225":{},"229":{},"233":{}},"component":{}}],["specifi",{"_index":515,"title":{},"name":{},"text":{"13":{},"15":{},"31":{},"36":{},"39":{},"40":{},"43":{},"59":{},"61":{},"77":{},"82":{},"85":{},"86":{},"89":{},"105":{},"107":{},"123":{},"128":{},"131":{},"132":{},"135":{},"139":{},"155":{},"171":{},"187":{},"192":{},"195":{},"196":{},"199":{},"204":{},"207":{},"208":{},"211":{},"216":{},"219":{},"220":{},"223":{},"227":{},"231":{}},"component":{}}],["specification[1",{"_index":635,"title":{},"name":{},"text":{"21":{},"67":{},"113":{},"145":{},"161":{},"177":{}},"component":{}}],["spotlessappli",{"_index":1288,"title":{},"name":{},"text":{"41":{},"87":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["spring",{"_index":406,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["stabl",{"_index":53,"title":{},"name":{},"text":{"1":{},"8":{},"47":{},"54":{},"93":{},"100":{}},"component":{}}],["stage",{"_index":379,"title":{},"name":{},"text":{"8":{},"39":{},"54":{},"85":{},"100":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["start",{"_index":78,"title":{"24":{},"36":{},"70":{},"82":{},"116":{},"128":{},"148":{},"164":{},"180":{},"192":{},"204":{},"216":{},"15-2":{},"22-3":{},"28-1":{},"29-1":{},"29-2":{},"31-2":{},"43-2":{},"61-2":{},"68-3":{},"74-1":{},"75-1":{},"75-2":{},"77-2":{},"89-2":{},"107-2":{},"114-3":{},"120-1":{},"121-1":{},"121-2":{},"123-2":{},"135-2":{},"139-2":{},"146-3":{},"152-1":{},"153-1":{},"153-2":{},"155-2":{},"162-3":{},"168-1":{},"169-1":{},"169-2":{},"171-2":{},"178-3":{},"184-1":{},"185-1":{},"185-2":{},"187-2":{},"199-2":{},"211-2":{},"223-2":{},"227-2":{},"231-2":{}},"name":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"text":{"1":{},"8":{},"15":{},"22":{},"24":{},"26":{},"27":{},"28":{},"29":{},"34":{},"36":{},"41":{},"47":{},"54":{},"61":{},"68":{},"70":{},"72":{},"73":{},"74":{},"75":{},"80":{},"82":{},"87":{},"93":{},"100":{},"107":{},"114":{},"116":{},"118":{},"119":{},"120":{},"121":{},"126":{},"128":{},"133":{},"139":{},"146":{},"148":{},"150":{},"151":{},"152":{},"153":{},"155":{},"162":{},"164":{},"166":{},"167":{},"168":{},"169":{},"171":{},"178":{},"180":{},"182":{},"183":{},"184":{},"185":{},"190":{},"192":{},"197":{},"202":{},"204":{},"209":{},"214":{},"216":{},"221":{}},"component":{}}],["startup",{"_index":1069,"title":{},"name":{"30":{},"76":{},"122":{},"154":{},"170":{},"186":{}},"text":{"30":{},"76":{},"122":{},"154":{},"170":{},"186":{}},"component":{}}],["state",{"_index":60,"title":{},"name":{},"text":{"1":{},"2":{},"37":{},"47":{},"48":{},"83":{},"93":{},"94":{},"129":{},"193":{},"205":{},"217":{}},"component":{}}],["statu",{"_index":567,"title":{},"name":{},"text":{"17":{},"63":{},"109":{},"141":{},"157":{},"173":{}},"component":{}}],["stay",{"_index":204,"title":{},"name":{},"text":{"2":{},"48":{},"94":{}},"component":{}}],["step",{"_index":119,"title":{},"name":{},"text":{"1":{},"7":{},"14":{},"39":{},"47":{},"53":{},"60":{},"85":{},"93":{},"99":{},"106":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["storag",{"_index":272,"title":{},"name":{},"text":{"2":{},"36":{},"41":{},"48":{},"82":{},"87":{},"94":{},"128":{},"133":{},"192":{},"197":{},"204":{},"209":{},"216":{},"221":{}},"component":{}}],["storage/repositori",{"_index":1285,"title":{"41":{},"87":{},"133":{},"197":{},"209":{},"221":{}},"name":{},"text":{},"component":{}}],["store",{"_index":268,"title":{},"name":{},"text":{"2":{},"13":{},"15":{},"22":{},"28":{},"29":{},"31":{},"41":{},"43":{},"48":{},"59":{},"61":{},"68":{},"74":{},"75":{},"77":{},"87":{},"89":{},"94":{},"105":{},"107":{},"114":{},"120":{},"121":{},"123":{},"133":{},"135":{},"139":{},"146":{},"152":{},"153":{},"155":{},"162":{},"168":{},"169":{},"171":{},"178":{},"184":{},"185":{},"187":{},"197":{},"199":{},"209":{},"211":{},"221":{},"223":{},"227":{},"231":{}},"component":{}}],["streamlin",{"_index":1295,"title":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"name":{},"text":{},"component":{}}],["string",{"_index":748,"title":{},"name":{},"text":{"23":{},"35":{},"39":{},"45":{},"69":{},"81":{},"85":{},"91":{},"115":{},"127":{},"131":{},"137":{},"147":{},"163":{},"179":{},"191":{},"195":{},"203":{},"207":{},"215":{},"219":{},"225":{},"229":{},"233":{}},"component":{}}],["structur",{"_index":2,"title":{"17":{},"63":{},"109":{},"141":{},"157":{},"173":{},"1-3":{},"47-3":{},"93-3":{}},"name":{"17":{},"63":{},"109":{},"141":{},"157":{},"173":{}},"text":{"2":{},"8":{},"15":{},"17":{},"23":{},"35":{},"38":{},"39":{},"41":{},"48":{},"54":{},"61":{},"63":{},"69":{},"81":{},"84":{},"85":{},"87":{},"94":{},"100":{},"107":{},"109":{},"115":{},"127":{},"130":{},"131":{},"133":{},"139":{},"141":{},"147":{},"155":{},"157":{},"163":{},"171":{},"173":{},"179":{},"191":{},"194":{},"195":{},"197":{},"203":{},"206":{},"207":{},"209":{},"215":{},"218":{},"219":{},"221":{}},"component":{}}],["student",{"_index":685,"title":{},"name":{},"text":{"23":{},"26":{},"38":{},"69":{},"72":{},"84":{},"115":{},"118":{},"130":{},"147":{},"150":{},"163":{},"166":{},"179":{},"182":{},"194":{},"206":{},"218":{}},"component":{}}],["stuff",{"_index":864,"title":{},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["style",{"_index":942,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["styles.css",{"_index":940,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["styles.j",{"_index":941,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["sub",{"_index":556,"title":{},"name":{},"text":{"15":{},"17":{},"35":{},"61":{},"63":{},"81":{},"107":{},"109":{},"127":{},"139":{},"141":{},"155":{},"157":{},"171":{},"173":{},"191":{},"203":{},"215":{}},"component":{}}],["subproject",{"_index":661,"title":{},"name":{},"text":{"22":{},"26":{},"27":{},"68":{},"72":{},"73":{},"114":{},"118":{},"119":{},"146":{},"150":{},"151":{},"162":{},"166":{},"167":{},"178":{},"182":{},"183":{}},"component":{}}],["subset",{"_index":630,"title":{},"name":{},"text":{"21":{},"67":{},"113":{},"145":{},"161":{},"177":{}},"component":{}}],["success",{"_index":1057,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["successfulli",{"_index":783,"title":{},"name":{},"text":{"23":{},"28":{},"29":{},"69":{},"74":{},"75":{},"115":{},"120":{},"121":{},"147":{},"152":{},"153":{},"163":{},"168":{},"169":{},"179":{},"184":{},"185":{}},"component":{}}],["such",{"_index":333,"title":{},"name":{},"text":{"3":{},"18":{},"25":{},"26":{},"49":{},"64":{},"71":{},"72":{},"95":{},"110":{},"117":{},"118":{},"142":{},"149":{},"150":{},"158":{},"165":{},"166":{},"174":{},"181":{},"182":{}},"component":{}}],["suffici",{"_index":600,"title":{},"name":{},"text":{"18":{},"35":{},"64":{},"81":{},"110":{},"127":{},"142":{},"158":{},"174":{},"191":{},"203":{},"215":{}},"component":{}}],["suffix",{"_index":1255,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["super(nod",{"_index":769,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["suppli",{"_index":965,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["support",{"_index":210,"title":{},"name":{},"text":{"2":{},"9":{},"13":{},"15":{},"23":{},"31":{},"40":{},"41":{},"43":{},"48":{},"55":{},"59":{},"61":{},"69":{},"77":{},"86":{},"87":{},"89":{},"94":{},"101":{},"105":{},"107":{},"115":{},"123":{},"132":{},"133":{},"135":{},"139":{},"147":{},"155":{},"163":{},"171":{},"179":{},"187":{},"196":{},"197":{},"199":{},"208":{},"209":{},"211":{},"220":{},"221":{},"223":{},"227":{},"231":{}},"component":{}}],["sure",{"_index":666,"title":{},"name":{},"text":{"22":{},"68":{},"114":{},"146":{},"162":{},"178":{}},"component":{}}],["switch",{"_index":310,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["sync",{"_index":450,"title":{},"name":{},"text":{"10":{},"56":{},"102":{}},"component":{}}],["synchron",{"_index":205,"title":{},"name":{},"text":{"2":{},"28":{},"29":{},"41":{},"48":{},"74":{},"75":{},"87":{},"94":{},"120":{},"121":{},"133":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{},"197":{},"209":{},"221":{}},"component":{}}],["system",{"_index":165,"title":{"21":{},"67":{},"113":{},"145":{},"161":{},"177":{},"21-1":{},"67-1":{},"113-1":{},"145-1":{},"161-1":{},"177-1":{}},"name":{},"text":{"1":{},"2":{},"3":{},"12":{},"28":{},"29":{},"41":{},"47":{},"48":{},"49":{},"58":{},"74":{},"75":{},"87":{},"93":{},"94":{},"95":{},"104":{},"120":{},"121":{},"133":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{},"197":{},"209":{},"221":{}},"component":{}}],["system/servic",{"_index":656,"title":{},"name":{},"text":{"22":{},"68":{},"114":{},"146":{},"162":{},"178":{}},"component":{}}],["systemat",{"_index":103,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["tab",{"_index":1159,"title":{},"name":{},"text":{"37":{},"83":{},"129":{},"193":{},"205":{},"217":{}},"component":{}}],["tabl",{"_index":334,"title":{"10":{},"56":{},"102":{}},"name":{"10":{},"56":{},"102":{}},"text":{"3":{},"12":{},"49":{},"58":{},"95":{},"104":{}},"component":{}}],["tabular",{"_index":623,"title":{},"name":{},"text":{"20":{},"66":{},"112":{},"144":{},"160":{},"176":{}},"component":{}}],["take",{"_index":114,"title":{},"name":{},"text":{"1":{},"2":{},"7":{},"14":{},"47":{},"48":{},"53":{},"60":{},"93":{},"94":{},"99":{},"106":{}},"component":{}}],["talk",{"_index":151,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["target",{"_index":1134,"title":{},"name":{},"text":{"35":{},"39":{},"40":{},"81":{},"85":{},"86":{},"127":{},"131":{},"132":{},"191":{},"195":{},"196":{},"203":{},"207":{},"208":{},"215":{},"219":{},"220":{}},"component":{}}],["task",{"_index":909,"title":{},"name":{},"text":{"28":{},"29":{},"39":{},"74":{},"75":{},"85":{},"120":{},"121":{},"131":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{},"195":{},"207":{},"219":{}},"component":{}}],["taskdepend",{"_index":1241,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["tasks.registering(sync::class",{"_index":1118,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["tbd",{"_index":652,"title":{},"name":{},"text":{"21":{},"67":{},"113":{},"145":{},"161":{},"177":{}},"component":{}}],["team",{"_index":809,"title":{},"name":{},"text":{"25":{},"71":{},"117":{},"149":{},"165":{},"181":{}},"component":{}}],["tech",{"_index":431,"title":{},"name":{},"text":{"10":{},"56":{},"102":{}},"component":{}}],["technic",{"_index":4,"title":{"1-4":{},"47-4":{},"93-4":{}},"name":{},"text":{"1":{},"11":{},"47":{},"57":{},"93":{},"103":{}},"component":{}}],["technolog",{"_index":24,"title":{},"name":{},"text":{"1":{},"4":{},"17":{},"47":{},"50":{},"63":{},"93":{},"96":{},"109":{},"141":{},"157":{},"173":{}},"component":{}}],["tell",{"_index":427,"title":{},"name":{},"text":{"9":{},"23":{},"34":{},"55":{},"69":{},"80":{},"101":{},"115":{},"126":{},"147":{},"163":{},"179":{},"190":{},"202":{},"214":{}},"component":{}}],["termin",{"_index":905,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["test",{"_index":368,"title":{},"name":{},"text":{"8":{},"26":{},"27":{},"29":{},"36":{},"45":{},"54":{},"72":{},"73":{},"75":{},"82":{},"91":{},"100":{},"118":{},"119":{},"121":{},"128":{},"137":{},"150":{},"151":{},"153":{},"166":{},"167":{},"169":{},"182":{},"183":{},"185":{},"192":{},"204":{},"216":{},"225":{},"229":{},"233":{}},"component":{}}],["test.xml",{"_index":975,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["that’",{"_index":778,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["think",{"_index":547,"title":{},"name":{},"text":{"15":{},"61":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["this.children",{"_index":771,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["this.properti",{"_index":770,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["this.refer",{"_index":772,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["three",{"_index":810,"title":{},"name":{},"text":{"25":{},"28":{},"71":{},"74":{},"117":{},"120":{},"149":{},"152":{},"165":{},"168":{},"181":{},"184":{}},"component":{}}],["through",{"_index":117,"title":{},"name":{},"text":{"1":{},"7":{},"14":{},"21":{},"23":{},"47":{},"53":{},"60":{},"67":{},"69":{},"93":{},"99":{},"106":{},"113":{},"115":{},"145":{},"147":{},"161":{},"163":{},"177":{},"179":{}},"component":{}}],["throughout",{"_index":324,"title":{},"name":{},"text":{"3":{},"49":{},"95":{}},"component":{}}],["throw",{"_index":712,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["thrown",{"_index":1084,"title":{},"name":{},"text":{"34":{},"80":{},"126":{},"190":{},"202":{},"214":{}},"component":{}}],["thu",{"_index":587,"title":{},"name":{},"text":{"18":{},"21":{},"22":{},"25":{},"64":{},"67":{},"68":{},"71":{},"110":{},"113":{},"114":{},"117":{},"142":{},"145":{},"146":{},"149":{},"158":{},"161":{},"162":{},"165":{},"174":{},"177":{},"178":{},"181":{}},"component":{}}],["time",{"_index":212,"title":{"21-7":{},"41-1":{},"67-7":{},"87-1":{},"113-7":{},"133-1":{},"145-7":{},"161-7":{},"177-7":{},"197-1":{},"209-1":{},"221-1":{}},"name":{},"text":{"2":{},"18":{},"20":{},"23":{},"28":{},"29":{},"38":{},"41":{},"48":{},"64":{},"66":{},"69":{},"74":{},"75":{},"84":{},"87":{},"94":{},"110":{},"112":{},"115":{},"120":{},"121":{},"130":{},"133":{},"142":{},"144":{},"147":{},"152":{},"153":{},"158":{},"160":{},"163":{},"168":{},"169":{},"174":{},"176":{},"179":{},"184":{},"185":{},"194":{},"197":{},"206":{},"209":{},"218":{},"221":{}},"component":{}}],["todo",{"_index":350,"title":{"9":{},"55":{},"101":{}},"name":{"9":{},"55":{},"101":{}},"text":{"6":{},"9":{},"29":{},"30":{},"32":{},"33":{},"42":{},"46":{},"52":{},"55":{},"75":{},"76":{},"78":{},"79":{},"88":{},"92":{},"98":{},"101":{},"121":{},"122":{},"124":{},"125":{},"134":{},"138":{},"153":{},"154":{},"169":{},"170":{},"185":{},"186":{},"188":{},"189":{},"198":{},"200":{},"201":{},"210":{},"212":{},"213":{},"222":{},"226":{},"230":{},"234":{}},"component":{}}],["togeth",{"_index":96,"title":{},"name":{},"text":{"1":{},"12":{},"25":{},"47":{},"58":{},"71":{},"93":{},"104":{},"117":{},"149":{},"165":{},"181":{}},"component":{}}],["toggl",{"_index":1042,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["token",{"_index":517,"title":{},"name":{},"text":{"13":{},"15":{},"31":{},"43":{},"59":{},"61":{},"77":{},"89":{},"105":{},"107":{},"123":{},"135":{},"139":{},"155":{},"171":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["tool",{"_index":26,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"10":{},"12":{},"47":{},"49":{},"50":{},"56":{},"58":{},"93":{},"95":{},"96":{},"102":{},"104":{}},"component":{}}],["top",{"_index":221,"title":{},"name":{},"text":{"2":{},"13":{},"15":{},"28":{},"29":{},"31":{},"43":{},"48":{},"59":{},"61":{},"74":{},"75":{},"77":{},"89":{},"94":{},"105":{},"107":{},"120":{},"121":{},"123":{},"135":{},"139":{},"152":{},"153":{},"155":{},"168":{},"169":{},"171":{},"184":{},"185":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["topic",{"_index":345,"title":{},"name":{},"text":{"5":{},"51":{},"97":{}},"component":{}}],["total",{"_index":894,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["track",{"_index":362,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["tracker",{"_index":163,"title":{},"name":{},"text":{"1":{},"8":{},"47":{},"54":{},"93":{},"100":{}},"component":{}}],["transact",{"_index":1081,"title":{},"name":{},"text":{"34":{},"80":{},"126":{},"190":{},"202":{},"214":{}},"component":{}}],["transform",{"_index":288,"title":{"41-1":{},"87-1":{},"133-1":{},"197-1":{},"209-1":{},"221-1":{}},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["transport",{"_index":1032,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["trash",{"_index":1065,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["tri",{"_index":540,"title":{},"name":{},"text":{"15":{},"34":{},"61":{},"80":{},"107":{},"126":{},"139":{},"155":{},"171":{},"190":{},"202":{},"214":{}},"component":{}}],["trigger",{"_index":1146,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["trivial",{"_index":301,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["true",{"_index":312,"title":{},"name":{},"text":{"2":{},"26":{},"27":{},"29":{},"38":{},"41":{},"48":{},"72":{},"73":{},"75":{},"84":{},"87":{},"94":{},"118":{},"119":{},"121":{},"130":{},"133":{},"150":{},"151":{},"153":{},"166":{},"167":{},"169":{},"182":{},"183":{},"185":{},"194":{},"197":{},"206":{},"209":{},"218":{},"221":{}},"component":{}}],["ts",{"_index":454,"title":{},"name":{},"text":{"10":{},"35":{},"56":{},"81":{},"102":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["tutori",{"_index":110,"title":{"14":{},"42":{},"46":{},"60":{},"88":{},"92":{},"106":{},"134":{},"138":{},"198":{},"210":{},"222":{},"226":{},"230":{},"234":{}},"name":{},"text":{"1":{},"14":{},"28":{},"30":{},"47":{},"60":{},"74":{},"76":{},"93":{},"106":{},"120":{},"122":{},"152":{},"154":{},"168":{},"170":{},"184":{},"186":{}},"component":{}}],["twice",{"_index":402,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["two",{"_index":588,"title":{},"name":{},"text":{"18":{},"20":{},"21":{},"64":{},"66":{},"67":{},"110":{},"112":{},"113":{},"142":{},"144":{},"145":{},"158":{},"160":{},"161":{},"174":{},"176":{},"177":{}},"component":{}}],["type",{"_index":701,"title":{},"name":{},"text":{"23":{},"29":{},"38":{},"39":{},"69":{},"75":{},"84":{},"85":{},"115":{},"121":{},"130":{},"131":{},"147":{},"153":{},"163":{},"169":{},"179":{},"185":{},"194":{},"195":{},"206":{},"207":{},"218":{},"219":{}},"component":{}}],["typedconcept",{"_index":1269,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["typedconceptimpl",{"_index":1271,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["typednod",{"_index":1263,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["typednodeimpl",{"_index":1265,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["typescipt",{"_index":1283,"title":{},"name":{},"text":{"40":{},"86":{},"132":{},"196":{},"208":{},"220":{}},"component":{}}],["typescript",{"_index":1142,"title":{},"name":{},"text":{"35":{},"39":{},"81":{},"85":{},"127":{},"131":{},"191":{},"195":{},"203":{},"207":{},"215":{},"219":{}},"component":{}}],["typescriptdir",{"_index":1143,"title":{},"name":{},"text":{"35":{},"39":{},"81":{},"85":{},"127":{},"131":{},"191":{},"195":{},"203":{},"207":{},"215":{},"219":{}},"component":{}}],["uc",{"_index":893,"title":{"28-1":{},"29-1":{},"29-2":{},"74-1":{},"75-1":{},"75-2":{},"120-1":{},"121-1":{},"121-2":{},"152-1":{},"153-1":{},"153-2":{},"168-1":{},"169-1":{},"169-2":{},"184-1":{},"185-1":{},"185-2":{}},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["ui",{"_index":457,"title":{},"name":{},"text":{"10":{},"56":{},"102":{}},"component":{}}],["uid",{"_index":1170,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["unchang",{"_index":956,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["under",{"_index":358,"title":{},"name":{},"text":{"8":{},"41":{},"54":{},"87":{},"100":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["underli",{"_index":645,"title":{},"name":{},"text":{"21":{},"67":{},"113":{},"145":{},"161":{},"177":{}},"component":{}}],["understand",{"_index":346,"title":{},"name":{},"text":{"5":{},"15":{},"25":{},"51":{},"61":{},"71":{},"97":{},"107":{},"117":{},"139":{},"149":{},"155":{},"165":{},"171":{},"181":{}},"component":{}}],["unfold",{"_index":836,"title":{},"name":{},"text":{"26":{},"27":{},"28":{},"29":{},"38":{},"72":{},"73":{},"74":{},"75":{},"84":{},"118":{},"119":{},"120":{},"121":{},"130":{},"150":{},"151":{},"152":{},"153":{},"166":{},"167":{},"168":{},"169":{},"182":{},"183":{},"184":{},"185":{},"194":{},"206":{},"218":{}},"component":{}}],["university.schedul",{"_index":1176,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["university.schedule.assign",{"_index":1217,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["university.schedule.dateandtim",{"_index":1190,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["university.schedule.lectur",{"_index":1205,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["university.schedule.room",{"_index":1185,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["university.schedule.schedul",{"_index":1183,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["university.schedule.structur",{"_index":725,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["university.schedule.stud",{"_index":1214,"title":{},"name":{},"text":{"38":{},"84":{},"130":{},"194":{},"206":{},"218":{}},"component":{}}],["unsur",{"_index":148,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["untypedconcept",{"_index":1267,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["up",{"_index":296,"title":{"13-3":{},"15-6":{},"31-6":{},"43-6":{},"59-3":{},"61-6":{},"77-6":{},"89-6":{},"105-3":{},"107-6":{},"123-6":{},"135-6":{},"139-6":{},"155-6":{},"171-6":{},"187-6":{},"199-6":{},"211-6":{},"223-6":{},"227-6":{},"231-6":{}},"name":{},"text":{"2":{},"9":{},"12":{},"15":{},"26":{},"28":{},"29":{},"41":{},"48":{},"55":{},"58":{},"61":{},"72":{},"74":{},"75":{},"87":{},"94":{},"101":{},"104":{},"107":{},"118":{},"120":{},"121":{},"133":{},"139":{},"150":{},"152":{},"153":{},"155":{},"166":{},"168":{},"169":{},"171":{},"182":{},"184":{},"185":{},"197":{},"209":{},"221":{}},"component":{}}],["upcom",{"_index":593,"title":{},"name":{},"text":{"18":{},"64":{},"110":{},"142":{},"158":{},"174":{}},"component":{}}],["updat",{"_index":254,"title":{},"name":{},"text":{"2":{},"18":{},"27":{},"48":{},"64":{},"73":{},"94":{},"110":{},"119":{},"142":{},"151":{},"158":{},"167":{},"174":{},"183":{}},"component":{}}],["upload",{"_index":1286,"title":{},"name":{},"text":{"41":{},"87":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["uri(\"https://artifacts.itemis.cloud/repository/maven",{"_index":1107,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}],["url",{"_index":668,"title":{},"name":{},"text":{"22":{},"29":{},"35":{},"68":{},"75":{},"81":{},"114":{},"121":{},"127":{},"146":{},"153":{},"162":{},"169":{},"178":{},"185":{},"191":{},"203":{},"215":{}},"component":{}}],["url(\"ws://localhost/json/v2/test",{"_index":1075,"title":{},"name":{},"text":{"34":{},"80":{},"126":{},"190":{},"202":{},"214":{}},"component":{}}],["us",{"_index":56,"title":{"13":{},"18":{},"19":{},"20":{},"28":{},"29":{},"34":{},"35":{},"45":{},"59":{},"64":{},"65":{},"66":{},"74":{},"75":{},"80":{},"81":{},"91":{},"105":{},"110":{},"111":{},"112":{},"120":{},"121":{},"126":{},"127":{},"137":{},"142":{},"143":{},"144":{},"152":{},"153":{},"158":{},"159":{},"160":{},"168":{},"169":{},"174":{},"175":{},"176":{},"184":{},"185":{},"190":{},"191":{},"202":{},"203":{},"214":{},"215":{},"225":{},"229":{},"233":{},"15-3":{},"20-2":{},"31-3":{},"43-3":{},"61-3":{},"66-2":{},"77-3":{},"89-3":{},"107-3":{},"112-2":{},"123-3":{},"135-3":{},"139-3":{},"144-2":{},"155-3":{},"160-2":{},"171-3":{},"176-2":{},"187-3":{},"199-3":{},"211-3":{},"223-3":{},"227-3":{},"231-3":{}},"name":{},"text":{"1":{},"2":{},"3":{},"8":{},"12":{},"13":{},"15":{},"17":{},"18":{},"20":{},"21":{},"22":{},"23":{},"24":{},"25":{},"27":{},"28":{},"29":{},"31":{},"34":{},"35":{},"37":{},"38":{},"39":{},"40":{},"41":{},"43":{},"44":{},"45":{},"47":{},"48":{},"49":{},"54":{},"58":{},"59":{},"61":{},"63":{},"64":{},"66":{},"67":{},"68":{},"69":{},"70":{},"71":{},"73":{},"74":{},"75":{},"77":{},"80":{},"81":{},"83":{},"84":{},"85":{},"86":{},"87":{},"89":{},"90":{},"91":{},"93":{},"94":{},"95":{},"100":{},"104":{},"105":{},"107":{},"109":{},"110":{},"112":{},"113":{},"114":{},"115":{},"116":{},"117":{},"119":{},"120":{},"121":{},"123":{},"126":{},"127":{},"129":{},"130":{},"131":{},"132":{},"133":{},"135":{},"136":{},"137":{},"139":{},"141":{},"142":{},"144":{},"145":{},"146":{},"147":{},"148":{},"149":{},"151":{},"152":{},"153":{},"155":{},"157":{},"158":{},"160":{},"161":{},"162":{},"163":{},"164":{},"165":{},"167":{},"168":{},"169":{},"171":{},"173":{},"174":{},"176":{},"177":{},"178":{},"179":{},"180":{},"181":{},"183":{},"184":{},"185":{},"187":{},"190":{},"191":{},"193":{},"194":{},"195":{},"196":{},"197":{},"199":{},"202":{},"203":{},"205":{},"206":{},"207":{},"208":{},"209":{},"211":{},"214":{},"215":{},"217":{},"218":{},"219":{},"220":{},"221":{},"223":{},"224":{},"225":{},"227":{},"228":{},"229":{},"231":{},"232":{},"233":{}},"component":{}}],["usabl",{"_index":877,"title":{},"name":{},"text":{"27":{},"73":{},"119":{},"151":{},"167":{},"183":{}},"component":{}}],["usag",{"_index":815,"title":{"26-2":{},"27-2":{},"45-1":{},"72-2":{},"73-2":{},"91-1":{},"118-2":{},"119-2":{},"137-1":{},"150-2":{},"151-2":{},"166-2":{},"167-2":{},"182-2":{},"183-2":{},"225-1":{},"229-1":{},"233-1":{}},"name":{"34":{},"35":{},"36":{},"45":{},"80":{},"81":{},"82":{},"91":{},"126":{},"127":{},"128":{},"137":{},"190":{},"191":{},"192":{},"202":{},"203":{},"204":{},"214":{},"215":{},"216":{},"225":{},"229":{},"233":{}},"text":{"34":{},"35":{},"36":{},"80":{},"81":{},"82":{},"126":{},"127":{},"128":{},"190":{},"191":{},"192":{},"202":{},"203":{},"204":{},"214":{},"215":{},"216":{}},"component":{}}],["usecas",{"_index":581,"title":{},"name":{"18":{},"19":{},"20":{},"28":{},"29":{},"30":{},"64":{},"65":{},"66":{},"74":{},"75":{},"76":{},"110":{},"111":{},"112":{},"120":{},"121":{},"122":{},"142":{},"143":{},"144":{},"152":{},"153":{},"154":{},"158":{},"159":{},"160":{},"168":{},"169":{},"170":{},"174":{},"175":{},"176":{},"184":{},"185":{},"186":{}},"text":{},"component":{}}],["usecases.adoc",{"_index":564,"title":{},"name":{},"text":{"15":{},"61":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["user",{"_index":122,"title":{},"name":{},"text":{"1":{},"2":{},"3":{},"22":{},"47":{},"48":{},"49":{},"68":{},"93":{},"94":{},"95":{},"114":{},"146":{},"162":{},"178":{}},"component":{}}],["usernam",{"_index":519,"title":{},"name":{},"text":{"13":{},"15":{},"31":{},"43":{},"59":{},"61":{},"77":{},"89":{},"105":{},"107":{},"123":{},"135":{},"139":{},"155":{},"171":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["usual",{"_index":290,"title":{},"name":{},"text":{"2":{},"41":{},"48":{},"87":{},"94":{},"133":{},"197":{},"209":{},"221":{}},"component":{}}],["val",{"_index":1073,"title":{},"name":{},"text":{"34":{},"35":{},"80":{},"81":{},"126":{},"127":{},"190":{},"191":{},"202":{},"203":{},"214":{},"215":{}},"component":{}}],["valid",{"_index":1162,"title":{},"name":{},"text":{"37":{},"41":{},"83":{},"87":{},"129":{},"133":{},"193":{},"197":{},"205":{},"209":{},"217":{},"221":{}},"component":{}}],["valu",{"_index":277,"title":{"39-6":{},"85-6":{},"131-6":{},"195-6":{},"207-6":{},"219-6":{}},"name":{},"text":{"2":{},"13":{},"15":{},"23":{},"29":{},"31":{},"41":{},"43":{},"48":{},"59":{},"61":{},"69":{},"75":{},"77":{},"87":{},"89":{},"94":{},"105":{},"107":{},"115":{},"121":{},"123":{},"133":{},"135":{},"139":{},"147":{},"153":{},"155":{},"163":{},"169":{},"171":{},"179":{},"185":{},"187":{},"197":{},"199":{},"209":{},"211":{},"221":{},"223":{},"227":{},"231":{}},"component":{}}],["vararg",{"_index":1244,"title":{},"name":{},"text":{"39":{},"85":{},"131":{},"195":{},"207":{},"219":{}},"component":{}}],["variabl",{"_index":520,"title":{},"name":{},"text":{"13":{},"15":{},"31":{},"43":{},"45":{},"59":{},"61":{},"77":{},"89":{},"91":{},"105":{},"107":{},"123":{},"135":{},"137":{},"139":{},"155":{},"171":{},"187":{},"199":{},"211":{},"223":{},"225":{},"227":{},"229":{},"231":{},"233":{}},"component":{}}],["variant",{"_index":624,"title":{},"name":{},"text":{"20":{},"66":{},"112":{},"144":{},"160":{},"176":{}},"component":{}}],["variat",{"_index":589,"title":{},"name":{},"text":{"18":{},"28":{},"64":{},"74":{},"110":{},"120":{},"142":{},"152":{},"158":{},"168":{},"174":{},"184":{}},"component":{}}],["variou",{"_index":145,"title":{},"name":{},"text":{"1":{},"8":{},"12":{},"15":{},"17":{},"47":{},"54":{},"58":{},"61":{},"63":{},"93":{},"100":{},"104":{},"107":{},"109":{},"139":{},"141":{},"155":{},"157":{},"171":{},"173":{}},"component":{}}],["vendor",{"_index":933,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["vendor.j",{"_index":932,"title":{},"name":{},"text":{"28":{},"29":{},"74":{},"75":{},"120":{},"121":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{}},"component":{}}],["veri",{"_index":52,"title":{},"name":{},"text":{"1":{},"2":{},"23":{},"41":{},"47":{},"48":{},"69":{},"87":{},"93":{},"94":{},"115":{},"133":{},"147":{},"163":{},"179":{},"197":{},"209":{},"221":{}},"component":{}}],["version",{"_index":89,"title":{"45-2":{},"91-2":{},"137-2":{},"225-2":{},"229-2":{},"233-2":{}},"name":{},"text":{"1":{},"2":{},"8":{},"12":{},"35":{},"41":{},"43":{},"44":{},"45":{},"47":{},"48":{},"54":{},"58":{},"81":{},"87":{},"89":{},"90":{},"91":{},"93":{},"94":{},"100":{},"104":{},"127":{},"133":{},"135":{},"136":{},"137":{},"191":{},"197":{},"203":{},"209":{},"215":{},"221":{},"223":{},"224":{},"225":{},"227":{},"228":{},"229":{},"231":{},"232":{},"233":{}},"component":{}}],["via",{"_index":510,"title":{"26":{},"27":{},"72":{},"73":{},"118":{},"119":{},"150":{},"151":{},"166":{},"167":{},"182":{},"183":{}},"name":{},"text":{"13":{},"15":{},"17":{},"18":{},"21":{},"22":{},"25":{},"26":{},"27":{},"28":{},"29":{},"31":{},"35":{},"43":{},"59":{},"61":{},"63":{},"64":{},"67":{},"68":{},"71":{},"72":{},"73":{},"74":{},"75":{},"77":{},"81":{},"89":{},"105":{},"107":{},"109":{},"110":{},"113":{},"114":{},"117":{},"118":{},"119":{},"120":{},"121":{},"123":{},"127":{},"135":{},"139":{},"141":{},"142":{},"145":{},"146":{},"149":{},"150":{},"151":{},"152":{},"153":{},"155":{},"157":{},"158":{},"161":{},"162":{},"165":{},"166":{},"167":{},"168":{},"169":{},"171":{},"173":{},"174":{},"177":{},"178":{},"181":{},"182":{},"183":{},"184":{},"185":{},"187":{},"191":{},"199":{},"203":{},"211":{},"215":{},"223":{},"227":{},"231":{}},"component":{}}],["video",{"_index":175,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["view",{"_index":583,"title":{},"name":{},"text":{"18":{},"20":{},"22":{},"64":{},"66":{},"68":{},"110":{},"112":{},"114":{},"142":{},"144":{},"146":{},"158":{},"160":{},"162":{},"174":{},"176":{},"178":{}},"component":{}}],["vision",{"_index":50,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["vison",{"_index":338,"title":{"4-1":{},"50-1":{},"96-1":{}},"name":{},"text":{},"component":{}}],["want",{"_index":226,"title":{},"name":{},"text":{"2":{},"13":{},"15":{},"18":{},"27":{},"31":{},"35":{},"43":{},"45":{},"48":{},"59":{},"61":{},"64":{},"73":{},"77":{},"81":{},"89":{},"91":{},"94":{},"105":{},"107":{},"110":{},"119":{},"123":{},"127":{},"135":{},"137":{},"139":{},"142":{},"151":{},"155":{},"158":{},"167":{},"171":{},"174":{},"183":{},"187":{},"191":{},"199":{},"203":{},"211":{},"215":{},"223":{},"225":{},"227":{},"229":{},"231":{},"233":{}},"component":{}}],["way",{"_index":524,"title":{},"name":{},"text":{"13":{},"15":{},"31":{},"43":{},"59":{},"61":{},"77":{},"89":{},"105":{},"107":{},"123":{},"135":{},"139":{},"155":{},"171":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["web",{"_index":15,"title":{"21-7":{},"67-7":{},"113-7":{},"145-7":{},"161-7":{},"177-7":{}},"name":{},"text":{"1":{},"2":{},"4":{},"10":{},"12":{},"15":{},"21":{},"25":{},"27":{},"41":{},"47":{},"48":{},"50":{},"56":{},"58":{},"61":{},"67":{},"71":{},"73":{},"87":{},"93":{},"94":{},"96":{},"102":{},"104":{},"107":{},"113":{},"117":{},"119":{},"133":{},"139":{},"145":{},"149":{},"151":{},"155":{},"161":{},"165":{},"167":{},"171":{},"177":{},"181":{},"183":{},"197":{},"209":{},"221":{}},"component":{}}],["websit",{"_index":424,"title":{},"name":{},"text":{"8":{},"18":{},"54":{},"64":{},"100":{},"110":{},"142":{},"158":{},"174":{}},"component":{}}],["websocket",{"_index":647,"title":{"27-3":{},"73-3":{},"119-3":{},"151-3":{},"167-3":{},"183-3":{}},"name":{},"text":{"21":{},"67":{},"113":{},"145":{},"161":{},"177":{}},"component":{}}],["webstorm",{"_index":561,"title":{},"name":{},"text":{"15":{},"61":{},"107":{},"139":{},"155":{},"171":{}},"component":{}}],["welcom",{"_index":7,"title":{"1":{},"15":{},"31":{},"43":{},"47":{},"61":{},"77":{},"89":{},"93":{},"107":{},"123":{},"135":{},"139":{},"155":{},"171":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"name":{},"text":{"26":{},"72":{},"118":{},"150":{},"166":{},"182":{}},"component":{}}],["well",{"_index":361,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["whether",{"_index":660,"title":{},"name":{},"text":{"22":{},"68":{},"114":{},"146":{},"162":{},"178":{}},"component":{}}],["whilst",{"_index":32,"title":{},"name":{},"text":{"1":{},"4":{},"47":{},"50":{},"93":{},"96":{}},"component":{}}],["whitepaper[1",{"_index":40,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["whole",{"_index":688,"title":{},"name":{},"text":{"23":{},"69":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["wifi",{"_index":599,"title":{},"name":{},"text":{"18":{},"64":{},"110":{},"142":{},"158":{},"174":{}},"component":{}}],["window",{"_index":506,"title":{},"name":{},"text":{"13":{},"15":{},"31":{},"43":{},"59":{},"61":{},"77":{},"89":{},"105":{},"107":{},"123":{},"135":{},"139":{},"155":{},"171":{},"187":{},"199":{},"211":{},"223":{},"227":{},"231":{}},"component":{}}],["within",{"_index":130,"title":{},"name":{},"text":{"1":{},"9":{},"23":{},"47":{},"55":{},"69":{},"93":{},"101":{},"115":{},"147":{},"163":{},"179":{}},"component":{}}],["without",{"_index":207,"title":{},"name":{},"text":{"2":{},"28":{},"29":{},"34":{},"41":{},"45":{},"48":{},"74":{},"75":{},"80":{},"87":{},"91":{},"94":{},"120":{},"121":{},"126":{},"133":{},"137":{},"152":{},"153":{},"168":{},"169":{},"184":{},"185":{},"190":{},"197":{},"202":{},"209":{},"214":{},"221":{},"225":{},"229":{},"233":{}},"component":{}}],["word",{"_index":147,"title":{},"name":{},"text":{"1":{},"47":{},"93":{}},"component":{}}],["work",{"_index":536,"title":{},"name":{},"text":{"15":{},"21":{},"23":{},"61":{},"67":{},"69":{},"107":{},"113":{},"115":{},"139":{},"145":{},"147":{},"155":{},"161":{},"163":{},"171":{},"177":{},"179":{}},"component":{}}],["workbench",{"_index":31,"title":{},"name":{},"text":{"1":{},"3":{},"4":{},"47":{},"49":{},"50":{},"93":{},"95":{},"96":{}},"component":{}}],["worker",{"_index":826,"title":{},"name":{},"text":{"26":{},"28":{},"29":{},"72":{},"74":{},"75":{},"118":{},"120":{},"121":{},"150":{},"152":{},"153":{},"166":{},"168":{},"169":{},"182":{},"184":{},"185":{}},"component":{}}],["workspac",{"_index":157,"title":{},"name":{},"text":{"1":{},"10":{},"47":{},"56":{},"93":{},"102":{}},"component":{}}],["world",{"_index":354,"title":{},"name":{},"text":{"7":{},"53":{},"99":{}},"component":{}}],["wrap",{"_index":816,"title":{},"name":{},"text":{"26":{},"27":{},"39":{},"72":{},"73":{},"85":{},"118":{},"119":{},"131":{},"150":{},"151":{},"166":{},"167":{},"182":{},"183":{},"195":{},"207":{},"219":{}},"component":{}}],["write",{"_index":158,"title":{},"name":{},"text":{"1":{},"21":{},"23":{},"34":{},"47":{},"67":{},"69":{},"80":{},"93":{},"113":{},"115":{},"126":{},"145":{},"147":{},"161":{},"163":{},"177":{},"179":{},"190":{},"202":{},"214":{}},"component":{}}],["ws://127.0.0.1:8090/updat",{"_index":892,"title":{},"name":{},"text":{"27":{},"73":{},"119":{},"151":{},"167":{},"183":{}},"component":{}}],["ws://localhost:48302/w",{"_index":1055,"title":{},"name":{},"text":{"29":{},"75":{},"121":{},"153":{},"169":{},"185":{}},"component":{}}],["wscat",{"_index":889,"title":{},"name":{},"text":{"27":{},"73":{},"119":{},"151":{},"167":{},"183":{}},"component":{}}],["x",{"_index":838,"title":{},"name":{},"text":{"26":{},"27":{},"72":{},"73":{},"118":{},"119":{},"150":{},"151":{},"166":{},"167":{},"182":{},"183":{}},"component":{}}],["xx:maxrampercentage=85",{"_index":798,"title":{},"name":{},"text":{"24":{},"70":{},"116":{},"148":{},"164":{},"180":{}},"component":{}}],["year",{"_index":403,"title":{},"name":{},"text":{"8":{},"54":{},"100":{}},"component":{}}],["yourself",{"_index":1309,"title":{},"name":{},"text":{"45":{},"91":{},"137":{},"225":{},"229":{},"233":{}},"component":{}}],["ziptree(it",{"_index":1120,"title":{},"name":{},"text":{"35":{},"81":{},"127":{},"191":{},"203":{},"215":{}},"component":{}}]],"pipeline":["stemmer"]},"store":{"documents":{"1":{"id":1,"text":"We develop an open source platform for models on the web to reduce distributed modeling friction for domain experts We apply established web and cloud technologies to create a modeling tool in the browser which integrates with existing language workbenches whilst exploring new approaches The modelix project develops an open source platform for (meta-)models on the web. We are native to the web and the cloud, inspired by this whitepaper[1]. On the path to this final idea, we currently develop multiple interoperable components that implement parts of our vision. Consequently, some parts are very stable and already in productive use while others are in a more experimental and explorative state. To gain an overview over components, head over to the Components of modelix reference. Follow the 'Next' button in the bottom right to find out more details on our current roadmap, or dive directly into our sample project to get started! Otherwise, the How-To section serves as an implicit FAQ which might give answers to some of your immediate questions. This is the full modelix documentation for modelix version modelix-23.0. You can choose different versions at the bottom left of this page. This documentation brings together the documentation from all individual modelix components. If you are only intersted in one specific component, you can select it in the menu at the bottom left. We follow the systematic Diátaxis[2] approach in this documentation. As a result, we separate the documentation in the following four mayor categories: Tutorials (learning-oriented) Lessons that take the reader by the hand through a series of steps to complete a project of some kind. New users start here. How-To Guides Reference Explanation This documentation is built using the Antora framework. All individual software components contain their own documentation within their own repository but are aggregated here. The playbook for aggregation and central source source for this documentation can be found in the modelix/modelix.doc repository. If you find any bugs or errors in our documentation please add pull requests or issues in the corresponding repository. In this documentation we use various acronyms and domain-specific wording. Head over to the Glossary if you are unsure about what exactly we mean when talking about a model, meta-model, MPS, or others. To contact us join our #modelix Slack channel which is part of the JetBrains MPS workspace or write us an Email with your questions and feedback 📫. To report issues please use our issue tracker. 1. \"An open platform for systems and business engineering tools: collaborative modeling and analysis at scale\" http://voelter.de/data/pub/APlatformForSystemsAndBusinessModeling.pdf 2. \"A systematic framework for technical documentation authoring\", see this video for an in depth explanation of the motives of this framework","title":"Welcome to modelix!","component":"modelix","version":"modelix-23.0","name":"index","url":"/modelix/modelix-23.0/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"About this Documentation","hash":"_about_this_documentation","id":2},{"text":"Structure Framework","hash":"_structure_framework","id":3},{"text":"Technical Framework","hash":"_technical_framework","id":4},{"text":"Glossary","hash":"_glossary","id":5},{"text":"Contact","hash":"_contact","id":6}]},"2":{"id":2,"text":"The image above shows the components that modelix currently consists of. MPS is running in headless mode on the server with an HTTP server installed as a plugin. The browser connects to that server and receives the HTML and JavaScript code required for the interactive model editor. A second plugin connects to a model-server and replicates the data into MPS’ internal module repository. All MPS instances connected to that model server will stay synchronized. This can also be a local MPS instance without a web editor. Both options are supported at the same time. The next image gives an overview over the different docker images running in the kubernetes cluster. The model server uses an Apache Ignite cluster and just provides a REST API on top of it. A high load can be distributed over multiple instances. Running multiple MPS instances for scalability is possible, because the model has the same state on all instances. If you want to run MPS instances with different configurations (languages, plugins) or allow external instances to connect to the model server, a reverse proxy is used to forward the request to the correct instance. To access the web editor a user has to login in with a google account first. An OAuth proxy takes care of that and adds an HTTP header with the users e-mail address to the request. modelix provides an editor in the browser for the languages implemented in MPS. This can be an image based editor that renders the editor in MPS using the default editor definition or an HTML based editor that requires a separate editor definition in a language provided by modelix. Common to both approaches is that the user input (keyboard, mouse) is processed on the server and the update of the projection after a model change also happens on the server. Even in case of the HTML based editor the resulting HTML is computed on the server side. This removes the need to replicate the model into the browser, which would result in a bad performance in case of big models. Running MPS in the cloud requires an alternative to the file system for storing models. modelix implements a data structure that allows replication between all MPS instances connected to the same model server. It is very similar to the git storage format, but instead of files it stores nodes in its key-value data store. To support realtime collaboration, in addition to the snapshot of a version it also stores the operations that were applied on the previous version to produce the new version. Conflicts between concurrent modification are resolved using operational transformation (OT). The usually hard part of OT is to guarantee convergence, meaning that all clients end up with the same result indepent of the order in which they receive changes. This problem becomes trivial, because versions are identified by a hash over all the content. Any divergence will result in a different hash which can easily be detected. The remaining problem is what to do when a divergence is detected. From git we know that switching between versions is fast, because it only has to apply the difference between these versions. The same is true here. Fixing a divergence is as easy as switching to the correct version. If a client doesn’t have any local changes it doesn’t even need to apply the change operations itself. It can just switch to the new version. So in the rare case of a divergence fixing it is nothing special. It’s an operation that happens all the time.","title":"Architecture","component":"modelix","version":"modelix-23.0","name":"architecture","url":"/modelix/modelix-23.0/explanation/architecture.html","titles":[{"text":"An architectural overview of the modelix project","hash":"_an_architectural_overview_of_the_modelix_project","id":1},{"text":"Editor","hash":"_editor","id":2},{"text":"Model","hash":"_model","id":3}]},"3":{"id":3,"text":"This glossary is a lose collection of keywords used throughout the modelix documentation. MPS \"JetBrains MPS (Meta Programming System) is a language workbench developed by JetBrains. MPS is a tool to design domain-specific languages (DSL). It uses projectional editing which allows users to overcome the limits of language parsers, and build DSL editors, such as ones with tables and diagrams\" See https://www.jetbrains.com/mps/ for more details. — https://en.wikipedia.org/wiki/JetBrains_MPS","title":"Glossary","component":"modelix","version":"modelix-23.0","name":"glossary","url":"/modelix/modelix-23.0/explanation/glossary.html","titles":[]},"4":{"id":4,"text":"We develop an open source platform for models on the web to reduce modeling friction for domain experts We apply established web and cloud technologies to create a modeling tool in the browser which integrates with existing language workbenches whilst exploring new approaches","title":"Modelix Goals","component":"modelix","version":"modelix-23.0","name":"goals","url":"/modelix/modelix-23.0/explanation/goals.html","titles":[{"text":"Vison","hash":"_vison","id":1},{"text":"Mission","hash":"_mission","id":2},{"text":"What we provide","hash":"_what_we_provide","id":3}]},"5":{"id":5,"text":"\"Explanation is discussion that clarifies and illuminates a particular topic. Explanation is understanding-oriented.\" [1] 1. https://diataxis.fr/explanation/","title":"Explanation","component":"modelix","version":"modelix-23.0","name":"index","url":"/modelix/modelix-23.0/explanation/index.html","titles":[]},"6":{"id":6,"text":"TODO","title":"Frequently asked Questions","component":"modelix","version":"modelix-23.0","name":"faq","url":"/modelix/modelix-23.0/howto/faq.html","titles":[]},"7":{"id":7,"text":"\"How-to guides are directions that take the reader through the steps required to solve a real-world problem. How-to guides are goal-oriented.\" [1] 1. https://diataxis.fr/how-to-guides/","title":"How-To Guides","component":"modelix","version":"modelix-23.0","name":"index","url":"/modelix/modelix-23.0/howto/index.html","titles":[]},"8":{"id":8,"text":"The modelix project is developed open-source under the Apache-2.0 license. All components and software of the platform as well as issue tracking and project management are done in repositories in our GitHub organisation. Currently, we use GitHub actions to build, test, and publish the components. We deploy all relevant artifacts to the itemis Nexus server as well as GitHub Packages Issues are managed in our issue tracker over at https://issues.modelix.org. With many components being in various development stages - from stable to early and conceptual - they are released individually for each repository. Generally, we follow the Semantic versioning scheme for releases. However, anything based on JetBrains MPS (e.g. MPS plugins or extensions) are prefixed with the corresponding MPS major and minor version number followed by our own patch version number. For example, the org.modelix.mps-model-plugin version 2021.2.103 is the 103rd release which is compatible with MPS 2021.2.*. To make it easier for developers, the modelix platform is currently released twice a year as a single \"platform release\" which references compatible component versions. We aim to provide a Spring release R1 and an Autumn release R2. All development in-between is carried out as patches on the releases. This release cycle starts from 2023 with the first release on the MPS Community meetup in May: 2023.R1. To gain an overview over existing components, please refer to the list of components here We are currently in the process to further define our roadmap and core goals for each release. This roadmap will be closely aligned with the structure currently in the issue tracker. Once we have more dedicated information on this, we will publish it on our website and in this documentation.","title":"Development, Releases, and Roadmap","component":"modelix","version":"modelix-23.0","name":"roadmap","url":"/modelix/modelix-23.0/main/roadmap.html","titles":[{"text":"Development","hash":"_development","id":1},{"text":"Release Cycle","hash":"_release_cycle","id":2},{"text":"Roadmap","hash":"_roadmap","id":3}]},"9":{"id":9,"text":"This page represents a fallback page for open TODOs within the documentation. If you end up here please add an issue to modelix/modelix.docs and tell us where you found this link or consider supporting us by creating a corresponding pull request.","title":"TODO Fallback","component":"modelix","version":"modelix-23.0","name":"todo","url":"/modelix/modelix-23.0/main/todo.html","titles":[]},"10":{"id":10,"text":"Package Name Tech Docs Nexus GHP API Repo org.modelix model-api Kotlin 🔗 🔗 🔗 🔗 org.modelix metamodel-export MPS 🔗 🔗 🔗 🔗 org.modelix model-api-gen Kotlin 🔗 🔗 🔗 🔗 🔗 org.modelix model-api-gen-runtime Kotlin 🔗 🔗 🔗 🔗 org.modelix model-api-gen-gradle Gradle 🔗 🔗 🔗 🔗 🔗 --- org.modelix.model-api-gen.gradle.plugin Gradle 🔗 🔗 🔗 🔗 🔗 org.modelix incremental Kotlin 🔗 🔗 🔗 org.modelix model-server-lib MPS 🔗 🔗 🔗 🔗 org.modelix model-server-api Kotlin 🔗 🔗 🔗 🔗 org.modelix model-server Kotlin 🔗 🔗 🔗 🔗 🔗 org.modelix model-server-with-dependencies Kotlin 🔗 🔗 🔗 🔗 org.modelix model-client Kotlin 🔗 🔗 🔗 🔗 org.modelix light-model-client Kotlin 🔗 🔗 🔗 🔗 🔗 org.modelix model-download-gradle Gradle 🔗 🔗 --- org.modelix.mps.model-download Gradle 🔗 🔗 org.modelix.mps model-server-sync-plugin MPS 🔗 🔗 org.modelix.mps build-tools-lib Kotlin 🔗 🔗 🔗 org.modelix.mps build-tools-gradle Gradle 🔗 🔗 🔗 --- org.modelix.mps.build-tools Gradle 🔗 🔗 🔗 org.modelix.mps build-solution MPS 🔗 🔗 org.modelix.mps headless-runner MPS 🔗 🔗 org.modelix authorization Kotlin 🔗 🔗 🔗 org.modelix.mps web-editors-plugin MPS 🔗 🔗 ts-model-api TS 🔗 🔗 org.modelix workspace-client Kotlin 🔗 org.modelix workspace-manager Kotlin 🔗 org.modelix workspaces Kotlin 🔗 org.modelix instances-manager Kotlin 🔗 org.modelix gitui Kotlin 🔗 org.modelix keycloak-extensions Other 🔗 org.modelix ui-client Other 🔗 org.modelix ui-proxy Other 🔗 org.modelix ui-server Other 🔗 org.modelix modelix-samples MultiProject 🔗 🔗 org.modelix platform Gradle 🔗","title":"Table of modelix Components","component":"modelix","version":"modelix-23.0","name":"components-table","url":"/modelix/modelix-23.0/reference/components-table.html","titles":[]},"11":{"id":11,"text":"\"Reference guides are technical descriptions of the machinery and how to operate it. Reference material is information-oriented.\" [1] 1. https://diataxis.fr/reference/","title":"Reference","component":"modelix","version":"modelix-23.0","name":"index","url":"/modelix/modelix-23.0/reference/index.html","titles":[]},"12":{"id":12,"text":"The modelix platform is composed of multiple individual components which can be combined together to form a system bringing models to the web. Components are distributed across the following repositories: https://github.com/modelix/modelix.platform https://github.com/modelix/modelix.core https://github.com/modelix/modelix.mps-build-tools https://github.com/modelix/modelix https://github.com/modelix/incremental https://github.com/modelix/modelix.docs https://github.com/modelix/modelix.samples This page serves as an overview over all existing repositories, their components, and a short description. For more dense information about component, please navigate to the Table of modelix Components. The modelix.platform repository contains the Gradle platforms for modelix. It provides all modelix component versions for each modelix platform release. The modelix.core repository contains the core components of the modelix platform. These components include among others the model-server, model-api-gen, model-api-gen-gradle, and light-model-client. All components in this repository have no dependencies to JetBrains MPS. The modelix samples repository contains a couple of examples that show various aspects of the modelix platform. The primary focus of the samples is to show how you can apply modelix to bring languages and models defined in MPS into the web. On the basis of (meta-)models defined in MPS, external access is provided using JVM (Java/Kotlin) and web frameworks/tools. Everything shown in the samples is intended to enable you to come up with your own use-cases and architectures based on what is provided here. Not all features of modelix are shown here so this is not a complete demo of everything modelix can do.","title":"Components of modelix","component":"modelix","version":"modelix-23.0","name":"repositories-components","url":"/modelix/modelix-23.0/reference/repositories-components.html","titles":[{"text":"List of currently available components in modelix","hash":"_list_of_currently_available_components_in_modelix","id":1},{"text":"Modelix platform (modelix-23.1)","hash":"_modelix_platform_modelix_23_1","id":2},{"text":"Modelix core (modelix-23.1)","hash":"_modelix_core_modelix_23_1","id":3},{"text":"Modelix samples (modelix-23.1)","hash":"_modelix_samples_modelix_23_1","id":4}]},"13":{"id":13,"text":"The modelix project uses Gradle to build the individual components. Simply call the following in the top level folder of a repository: ./gradlew build # mac/linux or if you are on windows use: gradlew.bat build # windows At the moment most modelix artifacts are stored on the itemis nexus with no access restriction. As a consequence, when you build modelix or use modelix components via Gradle there is no repository access setup required. This is optional when you want to obtain modelix artifacts from GitHub packages rather than the itemis nexus server. Most packages are also published to GitHub packages for which a GithHub account and credentials are required. To access GitHub packaged you need to specify your credentials. First of all you will need to generate a personal access token with access to GitHub Packages. The project assumes that your username is available as the variable gpr.user and the token as gpr.key. The easiest way to configure the credentials is copy the example below, paste it into the gradle.properties file in the repository and replace the values with your credentials: gpr.user= gpr.key= Gradle also supports other locations for specifying these properties.","title":"Build components using Gradle","component":"modelix","version":"modelix-23.0","name":"build-component","url":"/modelix/modelix-23.0/tutorial/build-component.html","titles":[{"text":"Build from console","hash":"_build_from_console","id":1},{"text":"modelix Artifact Publication","hash":"_modelix_artifact_publication","id":2},{"text":"How to set up GitHub packages authentication","hash":"_how_to_set_up_github_packages_authentication","id":3}]},"14":{"id":14,"text":"\"Tutorials are lessons that take the reader by the hand through a series of steps to complete a project of some kind. Tutorials are learning-oriented.\" [1] 1. https://diataxis.fr/tutorials/","title":"Tutorials","component":"modelix","version":"modelix-23.0","name":"index","url":"/modelix/modelix-23.0/tutorial/index.html","titles":[]},"15":{"id":15,"text":"The examples are currently work in progress and are develop alongside the modelix platform development. The modelix samples repository contains a couple of examples that show various aspects of the modelix platform. The primary focus of the samples is to show how you can apply modelix to bring languages and models defined in MPS into the web. On the basis of (meta-)models defined in MPS, external access is provided using JVM (Java/Kotlin) and web frameworks/tools. Everything shown in the samples is intended to enable you to come up with your own use-cases and architectures based on what is provided here. Not all features of modelix are shown here so this is not a complete demo of everything modelix can do. None of the examples try to reuse editors defined in MPS. If your goal is to reuse MPS editors as is then modelix itself ships with a projector integration to achieve this. While all the examples use the same language defined in MPS they are not meant as one complete example but rather as individual parts. The purpose of the examples is to give inspiration of what is possible with modelix and make you think and envision your own use-cases. The modelix project uses Gradle to build the individual components. Simply call the following in the top level folder of a repository: ./gradlew build # mac/linux or if you are on windows use: gradlew.bat build # windows At the moment most modelix artifacts are stored on the itemis nexus with no access restriction. As a consequence, when you build modelix or use modelix components via Gradle there is no repository access setup required. This is optional when you want to obtain modelix artifacts from GitHub packages rather than the itemis nexus server. Most packages are also published to GitHub packages for which a GithHub account and credentials are required. To access GitHub packaged you need to specify your credentials. First of all you will need to generate a personal access token with access to GitHub Packages. The project assumes that your username is available as the variable gpr.user and the token as gpr.key. The easiest way to configure the credentials is copy the example below, paste it into the gradle.properties file in the repository and replace the values with your credentials: gpr.user= gpr.key= Gradle also supports other locations for specifying these properties. Once the initial build has completes you can dive in with the following: Read explanations in the Courses Domain: MPS Language and Model Read the use-cases these samples cover in the Use Cases of the Sample project Understand the repository in the Sample Repository Structure Inspect and edit the project with the code editor of your choice. The top folder in the repository provides IntelliJ configurations, the mps folder is a sub-project can be opened using MPS 2021.2.6, and the spa-dashboard-angular folder is a WebStorm project. Start sample components which realize use case samples:tutorial/startup-usecases.adoc","title":"Welcome to the modelix samples!","component":"modelix","version":"modelix-23.0","name":"index","url":"/modelix/modelix-23.0/samples/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Getting Started","hash":"_getting_started","id":2},{"text":"Build components using Gradle","hash":"_build_components_using_gradle","id":3},{"text":"Build from console","hash":"_build_from_console","id":4},{"text":"modelix Artifact Publication","hash":"_modelix_artifact_publication","id":5},{"text":"How to set up GitHub packages authentication","hash":"_how_to_set_up_github_packages_authentication","id":6},{"text":"Entry Points","hash":"_entry_points","id":7}]},"16":{"id":16,"text":"","title":"Courses Domain: MPS Language and Model","component":"modelix","version":"modelix-23.0","name":"courses-domain","url":"/modelix/modelix-23.0/samples/explanation/courses-domain.html","titles":[]},"17":{"id":17,"text":"The repository of the modelix samples is a single gradle project to make building everything at once easy. The examples are organized by the technology they use into the various sub-folders: Components/Tech Description Status Folder MPS + cloud-plugin MPS language definition that is used by all examples. The MPS language structure is used to generate a Java API consumed by all examples. ✅ mps MPS, metamodel-generator Generated Kotlin API from the MPS language. ✅ mps/metamodel OpenAPI A hand-crafted OpenAPI specification that defines domain-specific REST endpoints which expose the model contents. ✅ openapi model-server + Quarkus An implementation of the OpenAPI that exposes the model contents REST. Obtains model data from a running model-server. ✅ rest-api-model-server ligh-model-server+ ModelQL + Ktor An implementation of the OpenAPI that exposes the model contents REST. Obtains model data from a running the light-model-server MPS plugin. ✅ rest-api-model-ql Angular via REST A single page app that realizes a read-only dashboard. Can connect to either of the OpenAPI implementations. ✅ spa-dashboard-angular Each component documentation with component specific content.","title":"Sample Repository Structure","component":"modelix","version":"modelix-23.0","name":"structure","url":"/modelix/modelix-23.0/samples/explanation/structure.html","titles":[]},"18":{"id":18,"text":"The imaginary domain use-case represents a dashboard like view on model content. This use-case envisions a scenario where an independent client (outside of MPS) wants to consume the content of models defined in MPS, thus requiring read only access. There are two different variations of this use-case: Use Case 1a: Dashboard view next to Room In this variation, we envision a display next to each room that shows the upcoming lectures in that room. A low power display such as an low power e-ink with showing a simple website via wifi would be sufficient for this scenario. Use Case 1b: Dashboard View in the Main Hall In this variation, we envision a display in the main hall shows the full schedule of all the lectures of the current day. A large display would be used for this scenario, showing a website via wifi which contains the complete schedule. In both variations, the clients do not need to edit these models and are not capable to run a full MPS instance to show the model content. While the e-ink display does not require automatic updates (the display simply refreshes periodically every 15 minutes), the display in the main hall will require automatic updates (having more power and being a central display it would want to show the newest information at all times). The dashboard component, an angular app that serves the content of a model, implements such a simple single page application (SPA) for this use-case.","title":"Use-Case 1: Dashboard","component":"modelix","version":"modelix-23.0","name":"usecase-1","url":"/modelix/modelix-23.0/samples/explanation/usecase-1.html","titles":[]},"19":{"id":19,"text":"","title":"Use-Case 2: Manual Schedule Creation","component":"modelix","version":"modelix-23.0","name":"usecase-2","url":"/modelix/modelix-23.0/samples/explanation/usecase-2.html","titles":[]},"20":{"id":20,"text":"Given the courses domain and its meta-model explained here, the samples project covers two use-cases: Use-Case 1: Dashboard Use-Case 2: Manual Schedule Creation To illustrate how the different use-cases and component architecture relate, this section provides a short tabular description. Use Case Variant Backend MPS Backend model-server Use Case 1: Dashboard view 1a. light-model-server-client + rest-api-model-ql light-model-server-client + rest-api-model-ql 1b. json-bulk-model-access + rest-api-json-bulk ❌ Use Case 2: Real-time collaboration 🏗️ 🏗️","title":"Use Cases of the Sample project","component":"modelix","version":"modelix-23.0","name":"usecases","url":"/modelix/modelix-23.0/samples/explanation/usecases.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Use-Case Architecture Mapping","hash":"_use_case_architecture_mapping","id":2}]},"21":{"id":21,"text":"This samples implementations allow to run different use-cases in different setups - thus showing the flexibility of the modelix platform. Depending on the chosen use-case, only a subset of the components in this repository are used. The full architecture includes components used for multiple use-cases. One does not need all components to realize individual use-cases. In the following a short overview is given on each component. The meta-model (language) of the courses domain and a model (soulution) with sample data in JetBrains MPS on which everything in this sample is based. ▶️ For more details, see the Language section in the MPS component documentation An API based on the meta-model generated with the metamodel-generator component from modelix. ▶️ For more details, see the 'Generated API' section in the MPS component documentation In this example project, an extra domain-specific API layer is added which is defined in the OpenAPI specification[1]. This layer is meant educational as no noteworthy abstractions from the language itself happen in this definition. It intends to show how one introduces a clearly defined domain-specific abstraction decoupling the language engineering (meta-modeling) and the web development. We provide two backends (i.e. implementations of the API layer): The API via modelQL and API via model-server components. ▶️ For more details, see the OpenAPI component documentation. This project provides two implementations of the openapi domain abstraction. MPS as a source This backend provides access to the model by obtaining the model knowledge directly from a running MPS instance. It is implemented using ktor and connects to a model-client plugin running inside of MPS. This component can only provide read and write access. ▶️ For more details, see the API via modelQL for details. model-server as a source This backend provides access to the model by connecting to a running model-server. It is implemented using Quarkus and can provide read access to the underlying model. Additionally, a websocket for push notifications about ongoing model changes is provided. This is realized using websockets exposed by the model-server. ▶️ For more details, also see the API via model-server component for details. The dashboard provides access to model knowledge through a browser. As it is conforming to the OpenAPI specification, the dashboard is able to obtain the model content from both backend implementations. However, the dashboard is consequently limited by the chosen backend. This components requires running any of the available OpenAPI implementations to obtain model knowledge from. ▶️ For more details, also see the Dashboard for details. ⚠️ TBD ⚠️ TBD 1. See https://www.openapis.org/ for details on how OpenAPI works.","title":"System architecture and components in this repository","component":"modelix","version":"modelix-23.0","name":"architecture","url":"/modelix/modelix-23.0/samples/reference/architecture.html","titles":[{"text":"Full system architecture","hash":"_full_system_architecture","id":1},{"text":"The MPS Language","hash":"_the_mps_language","id":2},{"text":"Generated model API (domain API","hash":"_generated_model_api_domain_api","id":3},{"text":"Domain-specific OpenAPI","hash":"_domain_specific_openapi","id":4},{"text":"OpenAPI implementation","hash":"_openapi_implementation","id":5},{"text":"Single-page application (SPA) Dashboard","hash":"_single_page_application_spa_dashboard","id":6},{"text":"Real-time' collaboration web application","hash":"_real_time_collaboration_web_application","id":7},{"text":"Deploying to Docker / Kubernetes","hash":"_deploying_to_docker_kubernetes","id":8}]},"22":{"id":22,"text":"Figure 1. The SPA Dashboard Figure 2. View on a single Lecture in the Dashboard This component provides a single page application which accesses an implementation of the sample OpenAPI specification. The idea here is to illustrate a read only use-case where a system/service outside of MPS wants to consume the content of models previously defined in MPS. This dashboard is a single-page app showing content obtained from the intermediate REST APIs. A user cannot edit these models from the browser. It does not matter whether MPS is used to store the model information (e.g. by running an MPS instance in the cloud), or alternatively the modelix model-server is used. You can build this subproject individually from the parent folder via via Gradle: ./gradlew spa-dashboard-angular:build To run this application you will need a component which provides an API implementation conforming to the OpenAPI spec. Thus, you need to start one of the available OpenAPI implementations in this project: Either start the rest-api-model-ql implementation, or alternatively you can start the rest-api-model-server implementation. Check the documentation of the corresponding project parts on how to start them. Make sure you have the correct ports defined in the API URLs. This app expects 8090 by default. Next run this single page application via: ./gradlew spa-dashboard-angular:npmRun You can then go to http://localhost:4200 to see a dashboard with the courses model content.","title":"Single page application: An Angular based dashboard","component":"modelix","version":"modelix-23.0","name":"dashboard","url":"/modelix/modelix-23.0/samples/reference/dashboard.html","titles":[{"text":"Building & Running","hash":"_building_running","id":1},{"text":"1. Build spa-dashboard-angular","hash":"_1_build_spa_dashboard_angular","id":2},{"text":"2. Start an OpenAPI implementation","hash":"_2_start_an_openapi_implementation","id":3},{"text":"3. Run the angular app","hash":"_3_run_the_angular_app","id":4}]},"23":{"id":23,"text":"The language used in all examples is the same. The language itself is fairly small: It describes a very simplified lecture schedule. The language intentionally does not use expressions, creating editors for expressions by hand is very cumbersome and at the time where these samples were created modelix has no support for generating these editors for you. The main concepts of the language are: Room: where lecture are held. Each room has a maximum capacity of students, a name and some additional properties. Lecture: Have a name, some description and reference a room where they are held. And also have a schedule which determines when they are held and if they repeat through the whole semester or are a one time lecture. Student: A student with a name and birthday. Assignment: Lecture assignments for a single student. Some concepts are contained a root node like a Rooms container to make structuring the editors in MPS easier: classDiagram class Rooms { > } class Courses { > } class Students { > } class LectureAssignments { > } Rooms *-- Room : 0..n Courses *-- Lecture: 0..n Lecture .. Room: 1 Lecture *-- Schedule: 1 OneOff (iNode) rooms.children.rooms.forEach { it.properties.name } The code generator has exported the language definition, and we can use to write type safe code that works with the models. For properties and children we now have attributes in the generated classes and if somebody renames a property or child-role the compiler will tell us. Of course the MPSLanguageRegistry.getInstance would throw an exception if our iNode instance isn’t a Rooms instance. The generate class for a Room concept: concept Room extends BaseConcept implements INamedConcept instance can be root: false alias: short description: properties: maxPlaces : integer hasRemoteEquipment : boolean children: > references: > Will look like this: java package University.Schedule.structure; /*Generated by MPS */ import jetbrains.mps.lang.core.structure.BaseConcept; import jetbrains.mps.lang.core.structure.INamedConcept; import org.modelix.mps.apigen.runtime.INodeHolder; import org.jetbrains.annotations.NotNull; import org.modelix.model.api.INode; import org.jetbrains.annotations.Nullable; /** * Generated for http://127.0.0.1:63320/node?ref=r%3Adfa26643-4653-44bc-9dfe-5a6581bcd381%28University.Schedule.structure%29%2F4128798754188010580 */ public class Room extends BaseConcept implements INamedConcept { public class Properties extends BaseConcept.Properties implements INodeHolder, INamedConcept.Properties { @NotNull @Override public INode getINode() { return Room.this.getINode(); } @Nullable public Integer getMaxPlaces() { String propertyValue = getINode().getPropertyValue(\"maxPlaces\"); if (propertyValue != null && !(propertyValue.isEmpty())) { return Integer.parseInt(propertyValue); } return null; } @Nullable public Integer setMaxPlaces(Integer value) { if (value != null) { getINode().setPropertyValue(\"maxPlaces\", Integer.toString(value)); } else { getINode().setPropertyValue(\"maxPlaces\", null); } return value; } @Nullable public Boolean getHasRemoteEquipment() { String propertyValue = getINode().getPropertyValue(\"hasRemoteEquipment\"); if (propertyValue != null && !(propertyValue.isEmpty())) { return Boolean.parseBoolean(propertyValue); } return null; } @Nullable public Boolean setHasRemoteEquipment(@Nullable Boolean value) { if (value != null) { getINode().setPropertyValue(\"hasRemoteEquipment\", Boolean.toString(value)); } else { getINode().setPropertyValue(\"hasRemoteEquipment\", null); } return value; } } public class Children extends BaseConcept.Children implements INodeHolder, INamedConcept.Children { @NotNull @Override public INode getINode() { return Room.this.getINode(); } } public class References extends BaseConcept.References implements INodeHolder, INamedConcept.References { @NotNull @Override public INode getINode() { return Room.this.getINode(); } } private final Properties properties; private final Children children; private final References references; public Room(INode node) { super(node); this.properties = new Properties(); this.children = new Children(); this.references = new References(); } public Properties getProperties() { return this.properties; } public Children getChildren() { return this.children; } public References getReferences() { return this.references; } } At the moment it’s not possible to regenerate the API as part of the CI/gradle build, that’s why the generated sources are checked into the repository. This limitation is specific this example and is somehow caused by the MPS build failing to load the right languages during the build. Other projects are successfully using the api-gen code generator within their CI/gradle build. The limitation will get fixed in the future but for now the generated Java code is checked into the repository.","title":"Meta-model and the Generated Domain-Specific Model API","component":"modelix","version":"modelix-23.0","name":"meta-model-model-api","url":"/modelix/modelix-23.0/samples/reference/meta-model-model-api.html","titles":[{"text":"Language","hash":"_language","id":1},{"text":"Generated API","hash":"_generated_api","id":2},{"text":"Limitations","hash":"_limitations","id":3}]},"24":{"id":24,"text":"This 'component' is not a real component but rather a start helper - the model-server is started using the Gradle application plugin. To start the model-server, simply call the following in the repository root: ./gradlew model-server:run --args=\"-inmemory -dumpin courses.modelserver.dump\" As an alternative, you can also use Docker to run an in instance of model-server using the following command: docker run --rm -p 28101:28101 -d modelix/modelix-model:1.3.2 java -XX:MaxRAMPercentage=85 -Djdbc.url=$jdbc_url -cp \"model-server/build/libs/*\" org.modelix.model.server.Main -inmemory","title":"model-server start helper","component":"modelix","version":"modelix-23.0","name":"model-server","url":"/modelix/modelix-23.0/samples/reference/model-server.html","titles":[]},"25":{"id":25,"text":"This component of a single openapi.yml file which provides the OpenAPI specification of the REST API implementations serving as examples in this project. The described API provides an additional domain-specific abstraction of the courses domain[1]. The intention of this abstraction is to provide an example on how the use of modelix can be abstracted for eventual consumer apps, such as the Angular based dashboard. The development process thus can follow a API-first approach. Consequently, this openAPI provides a contract of the API behaviour for web teams and a language engineers. There are currently three implementations of this OpenAPI specification: API via model-server API via modelQL 1. This additional abstraction admittedly does not really provide fancy abstractions for this domain. Its purpose is rather educational for you to understand the option to add an additional layer separating web development from language engineering. You do not have to do this. Of course one does not necessarily need such an abstraction layer - any dashboard or web app can directly communicate with the API provided by the model-server together with the generated model API","title":"Intermediate OpenAPI of the Courses domain","component":"modelix","version":"modelix-23.0","name":"openapi","url":"/modelix/modelix-23.0/samples/reference/openapi.html","titles":[]},"26":{"id":26,"text":"This project provides a REST API that wraps the functionality of the light-model-server MPS plugin running inside an MPS instance. The provided REST API conforms to the API spec in the openapi.yaml. You can build this subproject individually from the parent folder via all gradle: ./gradlew rest-api-model-ql:build Before running the API provider you need to open the MPS project in the mps folder. The initial gradle build will automatically have set up MPS with the light-model-server plugin and expose the models via query language called ModelQL. This API is then accessed from this openAPI abstraction implementation to load the models. Once your MPS project is opened you can run: ./gradlew rest-api-model-ql:run Once you see a log message like: [DefaultDispatcher-worker-8] INFO ktor.application - Responding at http://0.0.0.0:8090 Your openAPI implementation is ready. Settings such as ports and hosts are defined in the application.conf file. For simple testing you can curl the data provided by the API for example: 🧾 Unfold for examples ```console $ curl -s -X GET \"http://localhost:8090/rooms\" -H \"accept: application/json\" | jq { \"rooms\": [ { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\", \"name\": \"somehjtinghekjrekjrhe\", \"maxPlaces\": 32232121, \"hasRemoteEquipment\": false }, { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\", \"name\": \"Schrödinger\", \"maxPlaces\": 420, \"hasRemoteEquipment\": true } ] } $ curl -s -X GET \"http://localhost:8090/rooms/mps-node%253Ar%253Ace161c54-ea76-40a6-a31d-9d7cd01febe2%2528University.Schedule.sandbox%2529%252F4128798754188058349\" -H \"accept: application/json\" | jq { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\", \"name\": \"Schrödinger\", \"maxPlaces\": 420, \"hasRemoteEquipment\": true } $ curl -s -X GET \"http://localhost:8090/rooms/mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\" -H \"accept: application/json\" | jq { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\", \"name\": \"somehjtinghekjrekjrhe\", \"maxPlaces\": 32232121, \"hasRemoteEquipment\": false } $ curl -s -X GET \"http://localhost:8090/rooms/trash\" -H \"accept: application/json\" | jq \"Can not load Room: null $ curl -s -X GET \"http://localhost:8090/lectures\" -H \"accept: application/json\" | jq curl -s -X GET \"http://localhost:8090/lectures\" -H \"accept: application/json\" | jq { \"lectures\": [ { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058353\", \"name\": \"Physics 101\", \"description\": \"You learn about stuff\", \"maxParticipants\": 42, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\" }, { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F1305729863392535677\", \"name\": \"Physics 102\", \"description\": \"You learn about stuff\", \"maxParticipants\": 42, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\" }, { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188060854\", \"name\": \"New Students Welcome\", \"description\": \"Hello everyone\", \"maxParticipants\": 69, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\" } ] } $ curl -s -X GET \"http://localhost:8090/lectures/mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058353\" -H \"accept: application/json\" | jq { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058353\", \"name\": \"Physics 101\", \"description\": \"You learn about stuff\", \"maxParticipants\": 42, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\" } $ curl -s -X GET \"http://localhost:8090/lectures/trash\" -H \"accept: application/json\" | jq \"Can not load Lecture: null\" Alternatively you can now start the Dashboard to consume this API endpoint.","title":"API via modelQL","component":"modelix","version":"modelix-23.0","name":"rest-api-model-ql","url":"/modelix/modelix-23.0/samples/reference/rest-api-model-ql.html","titles":[{"text":"Building","hash":"_building","id":1},{"text":"Usage","hash":"_usage","id":2}]},"27":{"id":27,"text":"This project provides a custom REST API implemented in Quarkus that wraps a model-server instance. The REST API abstracts the generic model-server API for providing the dashboard example with usable data. The provided REST API conforms to the API spec in the openapi.yaml. You can build this subproject individually from the parent folder via all gradle: ./gradlew rest-api-model-server:build Before starting the REST API, a model-server instance needs to be running. The example from the MPS folder has to be deployed on this instance in a repository call courses. Once these preconditions are met, the REST API can be launched with: ./gradlew rest-api-model-server:run For simple testing you can curl the data provided by the API for example: 🧾 Unfold for examples $ curl -s -X GET \"http://localhost:8090/rooms\" -H \"accept: application/json\" | jq { \"rooms\": [ { \"roomRef\": \"r:ce161c54-ea76-40a6-a31d-9d7cd01febe2(unused)/4128798754188058347\", \"name\": \"Einstein\", \"maxPlaces\": 42, \"hasRemoteEquipment\": true }, { \"roomRef\": \"r:ce161c54-ea76-40a6-a31d-9d7cd01febe2(unused)/4128798754188058349\", \"name\": \"Schrödinger\", \"maxPlaces\": 420, \"hasRemoteEquipment\": true } ] } Alternatively you can now start the Dashboard to consume this API. If you want to observe the updates sent on the web socket, you can use wscat to get some insights when updates are sent. wscat -c ws://127.0.0.1:8090/updates","title":"API via model-server","component":"modelix","version":"modelix-23.0","name":"rest-api-model-server","url":"/modelix/modelix-23.0/samples/reference/rest-api-model-server.html","titles":[{"text":"Building","hash":"_building","id":1},{"text":"Usage","hash":"_usage","id":2},{"text":"Introspecting the websocket communication","hash":"_introspecting_the_websocket_communication","id":3}]},"28":{"id":28,"text":"This Tutorial shows how to start up a system that implements Use-Case 1: Dashboard The samples provide a total of three architectural variation of this use case: Using the more complex rest-api-model-server backend and the model-server. Using the rest-api-model-ql backend and the light-model-server MPS plugin rest-api-model-server (legacy) + model-server All gradle commands assume you are in the top level folder of the samples repository. To start up the system as described in UC 1a, you first have to have built the entire project: ./gradlew Once done, you need to start all components involved, these are: MPS: Start MPS 2021.2.6 without any global plugins and open the project in the mps/project-mps-backend folder. This MPS project stores the model content using MPS persistence. The gradle build process will have downloaded all plugins needed to mps/project-mps-backend/build/dependencies and declare this folder as a global library. This includes the json-bulk-model-access and the light-model-client. API layer: The rest-api-json-bulk provides the models from the running MPS instance, simply run in a new terminal (it will be a blocking call): $ ./gradlew rest-api-json-bulk:run 🧾 You can expect output similar to this (unfold to see details) > Task :rest-api-json-bulk:run 2022-12-07 10:12:38.874 [DefaultDispatcher-worker-11] INFO ktor.application - Autoreload is disabled because the development mode is off. 2022-12-07 10:12:39.009 [DefaultDispatcher-worker-11] INFO ktor.application - Application started in 0.14 seconds. 2022-12-07 10:12:39.131 [DefaultDispatcher-worker-1] INFO ktor.application - Responding at http://0.0.0.0:8090 91% EXECUTING [2m 20s] > :rest-api-json-bulk:run Dashboard: The dashboard itself is a node application which can be run via in a new terminal (it will be a blocking call): $ ./gradlew spa-dashboard-angular:npmRun 🧾 You can expect output similar to this (unfold to see details) > Task :spa-dashboard-angular:npmRun > angular.io-example@0.0.0 ng > ng serve - Generating browser application bundles (phase: setup)... ✔ Browser application bundle generation complete. Initial Chunk Files | Names | Raw Size vendor.js | vendor | 2.47 MB | polyfills.js | polyfills | 318.03 kB | styles.css, styles.js | styles | 211.31 kB | main.js | main | 86.71 kB | runtime.js | runtime | 6.53 kB | | Initial Total | 3.08 MB Build at: 2022-12-07T09:18:02.345Z - Hash: 186b24edf20c1c4a - Time: 13776ms ** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ ** ✔ Compiled successfully. ✔ Browser application bundle generation complete. 5 unchanged chunks Build at: 2022-12-07T09:18:02.740Z - Hash: 186b24edf20c1c4a - Time: 324ms ✔ Compiled successfully. 95% EXECUTING [29s] > :spa-dashboard-angular:npmRun Explore the dashboard at http://localhost:4200/ Changes to the model in MPS will not automatically synchronize to the dashboard, you will have to manually reload the model.","title":"Run Use-Case 1 Implementation","component":"modelix","version":"modelix-23.0","name":"start-usecase-1-a","url":"/modelix/modelix-23.0/samples/tutorial/start-usecase-1-a.html","titles":[{"text":"How to start UC 1a","hash":"_how_to_start_uc_1a","id":1}]},"29":{"id":29,"text":"TODO using the rest-api-model-ql backend and the light-model-server MPS plugin All gradle commands assume you are in the top level folder of this repository. To start up the system as described in UC 1b, you first have to have build the entire project: ./gradlew Once done, you need to start all components involved, these are: modelix model-server: Model knowledge is supplied by the model-sever in this use case. To avoid complicated setups, we simply start the model-server in memory and load the model content from the included dump file, all using gradle: ./gradlew model-server:run --args=\"-inmemory -dumpin courses.modelserver.dump\" 🧾 You can expect output similar to this (unfold to see details) ./gradlew model-server:run --args=\"-inmemory -dumpin courses.modelserver.dump\" > Task :model-server:run 18:33:16,185 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml] 18:33:16,186 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy] 18:33:16,186 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [jar:file:/home/nkoester/.gradle/caches/modules-2/files-2.1/org.modelix/model-server-fatjar/1.3.2/1e6502c0e8282b1fe2c06824ad43f4d7270f20d7/model-server-fatjar-1.3.2.jar!/logback.xml] 18:33:16,194 |-INFO in ch.qos.logback.core.joran.spi.ConfigurationWatchList@f4168b8 - URL [jar:file:/home/nkoester/.gradle/caches/modules-2/files-2.1/org.modelix/model-server-fatjar/1.3.2/1e6502c0e8282b1fe2c06824ad43f4d7270f20d7/model-server-fatjar-1.3.2.jar!/logback.xml] is not of type file 18:33:16,269 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender] 18:33:16,270 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [console] 18:33:16,272 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property 18:33:16,282 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.modelix] to DEBUG 18:33:16,282 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [console] to Logger[org.modelix] 18:33:16,282 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to INFO 18:33:16,282 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [console] to Logger[ROOT] 18:33:16,282 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration. 18:33:16,283 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@7ff95560 - Registering current configuration as safe fallback point 18:33:16.295 [main] INFO org.modelix.model.server.Main - Max memory (bytes): 32178700288 18:33:16.295 [main] INFO org.modelix.model.server.Main - Max memory (bytes): 32178700288 18:33:16.295 [main] INFO org.modelix.model.server.Main - Server process started 18:33:16.295 [main] INFO org.modelix.model.server.Main - Server process started 18:33:16.295 [main] INFO org.modelix.model.server.Main - In memory: true 18:33:16.295 [main] INFO org.modelix.model.server.Main - In memory: true 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to secret file: /secrets/modelsecret/modelsecret.txt 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to secret file: /secrets/modelsecret/modelsecret.txt 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to JDBC configuration file: null 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to JDBC configuration file: null 18:33:16.296 [main] INFO org.modelix.model.server.Main - Schema initialization: false 18:33:16.296 [main] INFO org.modelix.model.server.Main - Schema initialization: false 18:33:16.296 [main] INFO org.modelix.model.server.Main - Set values: [] 18:33:16.296 [main] INFO org.modelix.model.server.Main - Set values: [] 18:33:16.296 [main] INFO org.modelix.model.server.Main - Port: 28101 18:33:16.296 [main] INFO org.modelix.model.server.Main - Port: 28101 Values loaded from /home/nkoester/git/modelix/modelix-sample/model-server/courses.modelserver.dump (73) 18:33:16.364 [main] INFO ktor.application - Autoreload is disabled because the development mode is off. 18:33:16.428 [main] INFO ktor.application - Application started in 0.088 seconds. 18:33:16.518 [DefaultDispatcher-worker-1] INFO ktor.application - Responding at http://0.0.0.0:28101 85% EXECUTING [7s] > :model-server:run API layer: The rest-api-model-server provides an abstraction of the model from the previously started model-server, simply run in a new terminal (it will be a blocking call): $ ./gradlew rest-api-model-server:quarkusDev 🧾 You can expect output similar to this (unfold to see details) $ ./gradlew rest-api-model-server:quarkusDev > Task :rest-api-model-server:quarkusDev Listening for transport dt_socket at address: 5005 Press [h] for more options>NG [8s] Tests paused Press [r] to resume testing, [h] for more options> Press [r] to resume testing, [o] Toggle test output, [h] for more options> __ ____ __ _____ ___ __ ____ ______ --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/ -/ /_/ / /_/ / __ |/ , _/ , 95% EXECUTING [16s] > :rest-api-model-server:quarkusDev Dashboard: The dashboard itself is a node application which can be run via in a new terminal (it will be a blocking call): $ ./gradlew spa-dashboard-angular:npmRun 🧾 You can expect output similar to this (unfold to see details) > Task :spa-dashboard-angular:npmRun > angular.io-example@0.0.0 ng > ng serve - Generating browser application bundles (phase: setup)... ✔ Browser application bundle generation complete. Initial Chunk Files | Names | Raw Size vendor.js | vendor | 2.47 MB | polyfills.js | polyfills | 318.03 kB | styles.css, styles.js | styles | 211.31 kB | main.js | main | 86.71 kB | runtime.js | runtime | 6.53 kB | | Initial Total | 3.08 MB Build at: 2022-12-07T09:18:02.345Z - Hash: 186b24edf20c1c4a - Time: 13776ms ** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ ** ✔ Compiled successfully. ✔ Browser application bundle generation complete. 5 unchanged chunks Build at: 2022-12-07T09:18:02.740Z - Hash: 186b24edf20c1c4a - Time: 324ms ✔ Compiled successfully. 95% EXECUTING [29s] > :spa-dashboard-angular:npmRun MPS: Start MPS 2021.2.6 without any global plugins and open the project in the mps/project-modelserver-backend folder. This MPS project does not store the model locally and instead obtains them from the model-server via the cloud-access plugin. The gradle build process will have downloaded all plugins needed to mps/project-modelserver-backend/build/dependencies and declare this folder as a global library. This includes the cloud-access plugin. Explore the dashboard at http://localhost:4200/ Changes to the model in MPS will automatically synchronize to the dashboard All gradle commands assume you are in the top level folder of this repository. To start up the system as described in UC 1c, you first have to have built the entire project: ./gradlew Once done, you need to start all components involved, these are: MPS: Start MPS 2021.2.6 without any global plugins and open the project in the mps/project-mps-backend folder. This MPS project stores the model content using MPS persistence. The gradle build process will have downloaded all plugins needed to mps/project-mps-backend/build/dependencies and declare this folder as a global library. This includes the light-model-server plugin used in this example UC. API layer: The light-model-server provides the models from the running MPS instance, simply run in a new terminal (it will be a blocking call): $ ./gradlew rest-api-model-ql:run 🧾 You can expect output similar to this (unfold to see details) > Task :rest-api-model-ql:run 2023-01-25 18:46:48.977 [main] INFO o.m.s.r.ModelServerLightWrapper - Connecting to light model-server at ws://localhost:48302/ws 2023-01-25 18:46:49.044 [main] INFO o.m.s.r.ModelServerLightWrapper - Connection successful 2023-01-25 18:46:49.070 [main] INFO ktor.application - Autoreload is disabled because the development mode is off. 2023-01-25 18:46:49.346 [main] INFO ktor.application - Application started in 0.286 seconds. 2023-01-25 18:46:49.455 [DefaultDispatcher-worker-4] INFO ktor.application - Responding at http://0.0.0.0:8090 2023-01-25 18:46:50.806 [eventLoopGroupProxy-4-1] INFO o.m.s.r.ModelServerLightWrapper - Resolving node trash 94% EXECUTING [26m 13s] > :rest-api-model-ql:run Dashboard: The dashboard itself is a node application which can be run via in a new terminal (it will be a blocking call): `$ ./gradlew spa-dashboard-angular:npmRun ` 🧾 You can expect output similar to this (unfold to see details) > Task :spa-dashboard-angular:npmRun > angular.io-example@0.0.0 ng > ng serve - Generating browser application bundles (phase: setup)... ✔ Browser application bundle generation complete. Initial Chunk Files | Names | Raw Size vendor.js | vendor | 2.47 MB | polyfills.js | polyfills | 318.03 kB | styles.css, styles.js | styles | 211.31 kB | main.js | main | 86.71 kB | runtime.js | runtime | 6.53 kB | | Initial Total | 3.08 MB Build at: 2022-12-07T09:18:02.345Z - Hash: 186b24edf20c1c4a - Time: 13776ms ** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ ** ✔ Compiled successfully. ✔ Browser application bundle generation complete. 5 unchanged chunks Build at: 2022-12-07T09:18:02.740Z - Hash: 186b24edf20c1c4a - Time: 324ms ✔ Compiled successfully. 95% EXECUTING [29s] > :spa-dashboard-angular:npmRun Explore the dashboard at http://localhost:4200/ Changes to the model in MPS will not automatically synchronize to the dashboard, you will have to manually reload the model.","title":"Run Use-Case 2a Implementation","component":"modelix","version":"modelix-23.0","name":"start-usecase-1-b","url":"/modelix/modelix-23.0/samples/tutorial/start-usecase-1-b.html","titles":[{"text":"How to start UC 1b","hash":"_how_to_start_uc_1b","id":1},{"text":"How to start UC 1c","hash":"_how_to_start_uc_1c","id":2}]},"30":{"id":30,"text":"TODO startup tutorial","title":"","component":"modelix","version":"modelix-23.0","name":"startup-usecases","url":"/modelix/modelix-23.0/samples/tutorial/startup-usecases.html","titles":[]},"31":{"id":31,"text":"The modelix.core repository contains the core components of the modelix platform. These components include among others the model-server, model-api-gen, model-api-gen-gradle, and light-model-client. All components in this repository have no dependencies to JetBrains MPS. The modelix project uses Gradle to build the individual components. Simply call the following in the top level folder of a repository: ./gradlew build # mac/linux or if you are on windows use: gradlew.bat build # windows At the moment most modelix artifacts are stored on the itemis nexus with no access restriction. As a consequence, when you build modelix or use modelix components via Gradle there is no repository access setup required. This is optional when you want to obtain modelix artifacts from GitHub packages rather than the itemis nexus server. Most packages are also published to GitHub packages for which a GithHub account and credentials are required. To access GitHub packaged you need to specify your credentials. First of all you will need to generate a personal access token with access to GitHub Packages. The project assumes that your username is available as the variable gpr.user and the token as gpr.key. The easiest way to configure the credentials is copy the example below, paste it into the gradle.properties file in the repository and replace the values with your credentials: gpr.user= gpr.key= Gradle also supports other locations for specifying these properties.","title":"Welcome to modelix.core!","component":"modelix","version":"modelix-23.0","name":"index","url":"/modelix/modelix-23.0/core/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Getting Started","hash":"_getting_started","id":2},{"text":"Build components using Gradle","hash":"_build_components_using_gradle","id":3},{"text":"Build from console","hash":"_build_from_console","id":4},{"text":"modelix Artifact Publication","hash":"_modelix_artifact_publication","id":5},{"text":"How to set up GitHub packages authentication","hash":"_how_to_set_up_github_packages_authentication","id":6}]},"32":{"id":32,"text":"TODO","title":"modelix.core Explanation","component":"modelix","version":"modelix-23.0","name":"index","url":"/modelix/modelix-23.0/core/explanation/index.html","titles":[]},"33":{"id":33,"text":"TODO","title":"modelix.core How-To","component":"modelix","version":"modelix-23.0","name":"index","url":"/modelix/modelix-23.0/core/howto/index.html","titles":[]},"34":{"id":34,"text":"If you are interested in a more practical usage of what is presented here, check out the samples project Creating an instance that loads the entire model from the server can be done like this: val client = LightModelClient.builder() .url(\"ws://localhost/json/v2/test-repo/ws\") // optional, by default it connects to the MPS plugin .build() You have to set a model query using changeQuery() to tell the server in what data you are interested in. Without a query the client will not receive any data. client.changeQuery(buildModelQuery { root { descendants { } } }) To read or write any nodes you have to start a read/write transaction by using runRead {}/runWrite {}. An exception is thrown when you try to access a node outside a transaction. val rootNode = client.waitForRootNode()!! client.runRead { val modules = rootNode.getChildren(\"modules\") // ... } If you try to access a node that is not included in your model query an exception is thrown. You can use INode.isLoaded() to check if a node was loaded on the client to prevent this exception. You can also filter a list of nodes like this: node.getChildren(\"modules\").filterLoaded(), to iterate only over the nodes that are included in your query.","title":"How-To use the light-model-client","component":"modelix","version":"modelix-23.0","name":"usage-light-model-client","url":"/modelix/modelix-23.0/core/howto/usage-light-model-client.html","titles":[]},"35":{"id":35,"text":"If you are interested in a more practical usage of what is presented here, check out the samples project To apply model-api-gen to an existing JetBrains MPS language, it is necessary to build the project via Gradle. This How-To assumes a folder structure as follows . ├── mps │ ├── build │ ├── metamodel │ │ └── [kotlin gradle sub-project] │ │ │ ├── languages │ │ └── [your MPS languages] │ └── solutions │ └── [your MPS solutions] │ ├── settings.gradle.kts ├── gradle.properties ├── gradle.properties ├── build.gradle.kts └── [...] Once you have your Gradle setup done, add the following lines the respective files. gradle.properties file: modelixCoreVersion=1.4.10 mpsVersion=2021.3.2 [...] The versions listed here are not the latest versions, refer to the repositories or use our latest release. settings.gradle.kts file: pluginManagement { val modelixCoreVersion: String by settings plugins { // the gradle plugin that provides easy access to the meta-model generator id(\"org.modelix.model-api-gen.gradle\") version modelixCoreVersion [...] } repositories { maven { url = uri(\"https://artifacts.itemis.cloud/repository/maven-mps/\") } [...] } } [...] build.gradle.kts file: plugins { id(\"org.modelix.model-api-gen\") } val mpsVersion: String by rootProject val modelixCoreVersion: String by rootProject // ensure that the MPS directory name is correct val mpsDir = buildDir.resolve(\"mps\") val mps by configurations.creating val mpsDependencies by configurations.creating dependencies { mps(\"com.jetbrains:mps:$mpsVersion\") [...] } // you might already have this if you use Gradle to build your MPS languages val resolveMps by tasks.registering(Sync::class) { from(mps.resolve().map { zipTree(it) }) into(mpsDir) } // the specific addition of the meta-model generator Gradle helper metamodel { dependsOn(resolveMps) mpsHome = mpsDir // Source // ensure that your languages and solutions you want to generate are listed here modulesFrom(projectDir.resolve(\"languages\")) modulesFrom(projectDir.resolve(\"solutions\")) // further restrictions can be made to filter namespaces, languages or concepts includeNamespace(\"org.example\") includeLanguage(\"language.fq.name\") includeConcept(\"concept.fq.name\") // this example imports dependencies from the shared dependencies folder modulesFrom(projectDir.resolve(\"build/dependencies\")) // and specifically adds repository related concepts includeLanguage(\"org.modelix.model.repositoryconcepts\") // Target // Kotlin // the target project into which the kotlin API will be build (requires the project to exist in the gradle setup) kotlinDir = project(\":mps:metamodel\").projectDir.resolve(\"src/main/kotlin\") // an alternative to the line above // kotlinProject = project(\":my-kotlin-project\") // you can set the name of the registration helper class here registrationHelperName = \"org.example.MyLanguages\" // TypeScript // similar to the Kotlin API above, the typescript directory can be set to enable TS API generation typescriptDir = project(\":my-typescript-project\").projectDir.resolve(\"src/gen\") } [...] The org.modelix.model-api-gen.gradle Gradle helper provides an additional target which will integrate into your build, so a simple re-build of your Gradle project should be sufficient. Alternatively, you can directly trigger the API generation via ./gradlew mps:metamodel:build Done. You can now use the generated Classes in your code Kotlin (or TypeScript) project in the mps/metamodel sub-project.","title":"How-To apply the Model API Generator using the Gradle Plugin","component":"modelix","version":"modelix-23.0","name":"usage-model-api-gen-gradle","url":"/modelix/modelix-23.0/core/howto/usage-model-api-gen-gradle.html","titles":[]},"36":{"id":36,"text":"If you are interested in a more practical usage of what is presented here, check out the samples project To run the model-server with default configuration run: [modelix.core] $ ./gradlew model-server:run To specify a different jdbc configuration, you can add the -jdbcconf arguement: [modelix.core] $ ./gradlew model-server:run --args='-jdbcconf path-to-my-database.properties' During development or to perform tests it is recommended to start the model-server with in-memory storage: [modelix.core] $ ./gradlew model-server:run --args='-inmemory'","title":"How-To start a local model-server","component":"modelix","version":"modelix-23.0","name":"usage-model-server","url":"/modelix/modelix-23.0/core/howto/usage-model-server.html","titles":[]},"37":{"id":37,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The light-model-client is designed to connect to either an MPS instance or a Modelix model-server. It is implemented in Kotlin multi-platform so that it can also be run in the browser. While the alternative \"advanced model client\" provides more features and should be used for long-running processes, the light-model-client is optimized for a lower resource consumption and short living processes like in a browser tab. The server is responsible for resolving conflicts and to keep the client side model in a valid state.","title":"Accessing models: The light-model-client","component":"modelix","version":"modelix-23.0","name":"component-light-model-client","url":"/modelix/modelix-23.0/core/reference/component-light-model-client.html","titles":[]},"38":{"id":38,"text":"Repository | buildfile | Artifacts: Nexus GitHub Packages In order to export a meta-model (i.e. the structure aspect of a langauge) from MPS, modelix uses the MPS solution metamodel-export. This solution maps the structure of a language to corresponding serializable data classes of the model-api (e.g. LanguageData and ConcepData). Further, the metamodel-expor provides a command line interface to export these data classes to a JSON file from outside of MPS. Unfold to see an exemplary JSON file which is generated from the export { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca\", \"name\": \"University.Schedule\", \"concepts\": [ { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560\", \"name\": \"Lecture\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188010563\", \"name\": \"description\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188010565\", \"name\": \"maxParticipants\", \"type\": \"INT\" } ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188058355\", \"name\": \"schedule\", \"type\": \"University.Schedule.Schedule\", \"optional\": false } ], \"references\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188058364\", \"name\": \"room\", \"type\": \"University.Schedule.Room\", \"optional\": false } ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\", \"jetbrains.mps.lang.core.INamedConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010568\", \"name\": \"Schedule\", \"abstract\": true, \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010568/4128798754188010578\", \"name\": \"at\", \"type\": \"University.Schedule.DateAndTime\", \"optional\": false } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010569\", \"name\": \"Recurring\", \"properties\": [ ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"University.Schedule.Schedule\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010570\", \"name\": \"DateAndTime\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010570/4128798754188010571\", \"name\": \"date\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010570/4128798754188010573\", \"name\": \"time\" } ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010580\", \"name\": \"Room\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010580/4128798754188010583\", \"name\": \"maxPlaces\", \"type\": \"INT\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010580/4128798754188010585\", \"name\": \"hasRemoteEquipment\", \"type\": \"BOOLEAN\" } ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\", \"jetbrains.mps.lang.core.INamedConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010588\", \"name\": \"Rooms\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010588/4128798754188010589\", \"name\": \"rooms\", \"type\": \"University.Schedule.Room\", \"multiple\": true } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188057192\", \"name\": \"Courses\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188057192/4128798754188057193\", \"name\": \"lectures\", \"type\": \"University.Schedule.Lecture\", \"multiple\": true } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188059567\", \"name\": \"OneOff\", \"properties\": [ ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"University.Schedule.Schedule\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449\", \"name\": \"Student\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449/1648392019017048450\", \"name\": \"name\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449/1648392019017048454\", \"name\": \"semester\", \"type\": \"INT\" } ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449/1648392019017048452\", \"name\": \"born\", \"type\": \"University.Schedule.DateAndTime\", \"optional\": false } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048457\", \"name\": \"Students\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048457/1648392019017048458\", \"name\": \"students\", \"type\": \"University.Schedule.Student\", \"multiple\": true } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048460\", \"name\": \"LectureAssignments\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048460/1648392019017048466\", \"name\": \"lectures\", \"type\": \"University.Schedule.Assignment\", \"multiple\": true } ], \"references\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048460/1648392019017048461\", \"name\": \"student\", \"type\": \"University.Schedule.Student\", \"optional\": false } ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048463\", \"name\": \"Assignment\", \"properties\": [ ], \"children\": [ ], \"references\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048463/1648392019017048464\", \"name\": \"lecture\", \"type\": \"University.Schedule.Lecture\", \"optional\": false } ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] } ] } The metamodel-export is primarily intended to be used by the Model API Generator.","title":"MPS solution for metamodel-export","component":"modelix","version":"modelix-23.0","name":"component-metamodel-export","url":"/modelix/modelix-23.0/core/reference/component-metamodel-export.html","titles":[{"text":"Overview","hash":"_overview","id":1}]},"39":{"id":39,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The model-api-gen.gradle.plugin is a Gradle plugin that wraps the functionality of the MPS solution for metamodel-export and Model API Generator. It provides an additional Gradle task which will apply a 2-staged process: MPS metamodel export to JSON (optional) In the first step the metamodel-export MPS solution is executed by the plugin to export the MPS structure aspect (i.e. the metamodel) to JSON files. In case your metamodel comes from another source this is an external entry point: As long as you can export your metamodel to JSON, you can use model-api-gen. To use JSON from another source or JSON files from a previous export, you can skip this step by simply specifying a directory, which contains the JSON files, in the configuration of the gradle task: metamodel { //... jsonDir = File(\"path/to/json/dir\") } As a result, all MPS-specific configuration settings will be ignored and the specified directory will be used for the next step. JSON to model API generation In the second step, the previously generated JSON files containing the metamodel are being used to generate the typed API using the Kotlin/TypeScript generator in model-api-gen. Inside of the metamodel block the following settings can be configured. setting type description javaExecutable File Location of the Java executable moduleFolders ArrayList Directories, that contain the language modules mpsHome File Home directory of MPS mpsHeapSize String MPS heap size specified as a String, e.g. \"2g\" for 2GB includedLanguages Set Set of languages, for which an API should be generated includedLanguageNamespaces Set Set of language namespaces, for which an API should be generated includedConcepts Set Set of concepts, for which an API should be generated includedModules Set Set of modules, for which an API should be generated jsonDir File Directory containing JSON files, which represent a metamodel. Will be used as input for the generation. Specifying this will skip the export from MPS and all MPS-specific configurations will be ignored. kotlinDir File Target Kotlin directory of the generator kotlinProject Project Target Kotlin project of the generator typescriptDir File Target TypeScript directory of the generator registrationHelperName String Name of the registration helper taskDependencies List List of tasks, on which the generation process depends method parameter type description names Action Block used to set a name configuration. dependsOn vararg Any Adds a dependency to taskDependencies javaExecutable File Sets the java executable. modulesFrom File Adds a directory to `moduleFolders includeLanguage String Adds the language specified by this fully qualified name to ìncludedLanguages includeNamespace String Adds the namespace specified by this languagePrefix to includedNamespaces includeConcept String Adds the concept specified by this fully qualified name to includedConcepts exportModules String Adds the module specified by this name prefix to includedModules Inside the metamodel block a names block can be declared to configure prefix, suffix, and baseNameConversion of generated Kotlin/TypeScript elements. This is achieved by setting the attributes of the NameConfig object accordingly. attribute default prefix default suffix languageClass \"L_\" \"\" typedNode \"N_\" \"\" typedNodeImpl` \"_N_TypedImpl_\" \"\" untypedConcept \"_C_UntypedImpl_\" \"\" typedConcept` \"C_\" \"\" typedConceptImpl` \"_C_TypedImpl_\" \"\" metamodel { mpsHome = file(\"path/to/mps/home\") mpsHeapSize = \"2g\" kotlinDir = file(\"build/kotlin_gen\") registrationHelperName = \"org.modelix.Languages\" typescriptDir = file(\"build/ts_gen\") includeNamespace(\"jetbrains.mps.baseLanguage\") exportModules(\"jetbrains.mps.runtime\") names { languageClass.prefix = \"MyLanguagePrefix\" languageClass.suffix = \"MyLanguageSuffix\" } }","title":"Gradle Plugin for the Model API Generator","component":"modelix","version":"modelix-23.0","name":"component-model-api-gen-gradle","url":"/modelix/modelix-23.0/core/reference/component-model-api-gen-gradle.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Configuration settings","hash":"_configuration_settings","id":2},{"text":"Configurable Attributes","hash":"_configurable_attributes","id":3},{"text":"Configuration Methods","hash":"_configuration_methods","id":4},{"text":"Name Configuration","hash":"_name_configuration","id":5},{"text":"Default Values","hash":"_default_values","id":6},{"text":"Example","hash":"_example","id":7}]},"40":{"id":40,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The Model API Generator (model-api-gen) is a Kotlin component which generates a domain-specific model API. Currently, the generator supports either Kotlin and TypeScipt as target languages. As a source for the generated API, model-api-gen consumes a given metamodel specified by JSON files. The Model API Generator is mainly used in the corresponding gradle plugin model-api-gen-gradle.","title":"Model API Generator","component":"modelix","version":"modelix-23.0","name":"component-model-api-gen","url":"/modelix/modelix-23.0/core/reference/component-model-api-gen.html","titles":[]},"41":{"id":41,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The model-server component provides a storage for models. Bringing models to the cloud requires an alternative to the file system (and git) based storage of models. Modelix implements a data structure that allows replication between all MPS instances connected to the same model-server. It is very similar to the git storage format, but instead of files it stores nodes in its key-value data store. To support real-time collaboration, in addition to the snapshot of a version, the model-server also stores the operations that were applied on the previous version to produce the new version. Conflicts between concurrent modification are resolved using operational transformation (OT). The usually hard part of OT is to guarantee convergence, meaning that all clients end up with the same result independent of the order in which they receive changes. This problem becomes trivial, because versions are identified by a hash over all the content. Any divergence will result in a different hash which can easily be detected. The remaining problem is what to do when a divergence is detected. From git we know that switching between versions is fast, because it only has to apply the difference between these versions. The same is true here: Fixing a divergence is as easy as switching to the correct version. If a client does not have any local changes it does not even need to apply the change operations itself - it can just switch to the new version. So in the rare case of a divergence fixing it is nothing special and is an operation that happens all the time. While this component is independent of MPS, it is possible to replicates the data of the MPS internal module repository into a running model-server. This can be achieved using the modelix MPS plugin: One can connect an MPS instances to a model-server, upload the current module repository, and keep it synchronized. This can also be a local MPS instance without a web editor - both options are supported at the same time. To reformat and add license header to all files run: ../gradlew spotlessApply Valid keys are keys starting with the PROTECTED_PREFIX ($$$). For details please refer to the OpenAPI documentation under doc/model-server.json.","title":"A Cloud Model Storage/Repository: The modelix model-server","component":"modelix","version":"modelix-23.0","name":"component-model-server","url":"/modelix/modelix-23.0/core/reference/component-model-server.html","titles":[{"text":"Real-Time Collaboration and Operational Transformation","hash":"_real_time_collaboration_and_operational_transformation","id":1},{"text":"MPS and the model-server","hash":"_mps_and_the_model_server","id":2},{"text":"Development","hash":"_development","id":3},{"text":"APIs","hash":"_apis","id":4}]},"42":{"id":42,"text":"TODO","title":"modelix.core Tutorials","component":"modelix","version":"modelix-23.0","name":"index","url":"/modelix/modelix-23.0/core/tutorial/index.html","titles":[]},"43":{"id":43,"text":"The modelix.platform repository contains the Gradle platforms for modelix. It provides all modelix component versions for each modelix platform release. The modelix project uses Gradle to build the individual components. Simply call the following in the top level folder of a repository: ./gradlew build # mac/linux or if you are on windows use: gradlew.bat build # windows At the moment most modelix artifacts are stored on the itemis nexus with no access restriction. As a consequence, when you build modelix or use modelix components via Gradle there is no repository access setup required. This is optional when you want to obtain modelix artifacts from GitHub packages rather than the itemis nexus server. Most packages are also published to GitHub packages for which a GithHub account and credentials are required. To access GitHub packaged you need to specify your credentials. First of all you will need to generate a personal access token with access to GitHub Packages. The project assumes that your username is available as the variable gpr.user and the token as gpr.key. The easiest way to configure the credentials is copy the example below, paste it into the gradle.properties file in the repository and replace the values with your credentials: gpr.user= gpr.key= Gradle also supports other locations for specifying these properties.","title":"Welcome to modelix.platform!","component":"modelix","version":"modelix-23.0","name":"index","url":"/modelix/modelix-23.0/platform/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Getting Started","hash":"_getting_started","id":2},{"text":"Build components using Gradle","hash":"_build_components_using_gradle","id":3},{"text":"Build from console","hash":"_build_from_console","id":4},{"text":"modelix Artifact Publication","hash":"_modelix_artifact_publication","id":5},{"text":"How to set up GitHub packages authentication","hash":"_how_to_set_up_github_packages_authentication","id":6}]},"44":{"id":44,"text":"The modelix platform is a Gradle platform built using Gradle’s Java Platform Plugin. It aggregates the versions of individual modelix components. Furthermore, the platform simplifies versioning by mapping the modelix release version to the versions of the individual components. These are curated for each release so that compatibility between them is ensured.","title":"The modelix Gradle platform","component":"modelix","version":"modelix-23.0","name":"index","url":"/modelix/modelix-23.0/platform/explanation/index.html","titles":[]},"45":{"id":45,"text":"The modelix platform provides component versions. To enforce these versions in your project’s build you can add the platform as an enforcedPlatform. We make the following assumptions: the string variable mps_version contains the mps version that is used in your project, e.g. 2021-1 the string variable modelix_platform_version contains the version of the modelix platform you want to use, e. g. 23.1.0 To enforce the versions provided by the platform in your Gradle build, you can use enforcedPlatform inside of a dependencies block like this: dependencies { implementation(enforcedPlatform(\"org.modelix:platform-mps-$mps_version:$modelix_platform_version\")) } Dependencies to modelix components can then be declared without a version number (as the version declared in the platform will be used). For example: dependencies { implementation(enforcedPlatform(\"org.modelix:platform-mps-$mps_version:$modelix_platform_version\")) implementation(\"org.modelix:model-client\") } If you want to handle dependencies to MPS version-specific modelix components yourself, you can use org.modelix:platform instead, which does not contain these dependencies. However, sometimes it might be necessary to pick a specific version of a single component, e.g. when one wants to test new features. Overriding versions may lead to incompatibilities between individual modelix components. In order to override versions inside the platform during dependency resolution, platform can be used instead of enforcedPlatform: dependencies { implementation(platform(\"org.modelix:platform-mps-$mps_version:$modelix_platform_version\")) implementation(\"org.modelix:model-client:2.4.0\") } If you want to learn more about the difference between platform and enforcedPlatform, you can check out this section in the Gradle documentation.","title":"How-to use the platform to streamline modelix dependencies","component":"modelix","version":"modelix-23.0","name":"usage-platform","url":"/modelix/modelix-23.0/platform/howto/usage-platform.html","titles":[{"text":"General Usage","hash":"_general_usage","id":1},{"text":"Overriding versions","hash":"_overriding_versions","id":2}]},"46":{"id":46,"text":"TODO","title":"modelix.platform Tutorials","component":"modelix","version":"modelix-23.0","name":"index","url":"/modelix/modelix-23.0/platform/tutorial/index.html","titles":[]},"47":{"id":47,"text":"We develop an open source platform for models on the web to reduce distributed modeling friction for domain experts We apply established web and cloud technologies to create a modeling tool in the browser which integrates with existing language workbenches whilst exploring new approaches The modelix project develops an open source platform for (meta-)models on the web. We are native to the web and the cloud, inspired by this whitepaper[1]. On the path to this final idea, we currently develop multiple interoperable components that implement parts of our vision. Consequently, some parts are very stable and already in productive use while others are in a more experimental and explorative state. To gain an overview over components, head over to the Components of modelix reference. Follow the 'Next' button in the bottom right to find out more details on our current roadmap, or dive directly into our sample project to get started! Otherwise, the How-To section serves as an implicit FAQ which might give answers to some of your immediate questions. This is the full modelix documentation for modelix version modelix-23.1. You can choose different versions at the bottom left of this page. This documentation brings together the documentation from all individual modelix components. If you are only intersted in one specific component, you can select it in the menu at the bottom left. We follow the systematic Diátaxis[2] approach in this documentation. As a result, we separate the documentation in the following four mayor categories: Tutorials (learning-oriented) Lessons that take the reader by the hand through a series of steps to complete a project of some kind. New users start here. How-To Guides Reference Explanation This documentation is built using the Antora framework. All individual software components contain their own documentation within their own repository but are aggregated here. The playbook for aggregation and central source source for this documentation can be found in the modelix/modelix.doc repository. If you find any bugs or errors in our documentation please add pull requests or issues in the corresponding repository. In this documentation we use various acronyms and domain-specific wording. Head over to the Glossary if you are unsure about what exactly we mean when talking about a model, meta-model, MPS, or others. To contact us join our #modelix Slack channel which is part of the JetBrains MPS workspace or write us an Email with your questions and feedback 📫. To report issues please use our issue tracker. 1. \"An open platform for systems and business engineering tools: collaborative modeling and analysis at scale\" http://voelter.de/data/pub/APlatformForSystemsAndBusinessModeling.pdf 2. \"A systematic framework for technical documentation authoring\", see this video for an in depth explanation of the motives of this framework","title":"Welcome to modelix!","component":"modelix","version":"modelix-23.1","name":"index","url":"/modelix/latest/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"About this Documentation","hash":"_about_this_documentation","id":2},{"text":"Structure Framework","hash":"_structure_framework","id":3},{"text":"Technical Framework","hash":"_technical_framework","id":4},{"text":"Glossary","hash":"_glossary","id":5},{"text":"Contact","hash":"_contact","id":6}]},"48":{"id":48,"text":"The image above shows the components that modelix currently consists of. MPS is running in headless mode on the server with an HTTP server installed as a plugin. The browser connects to that server and receives the HTML and JavaScript code required for the interactive model editor. A second plugin connects to a model-server and replicates the data into MPS’ internal module repository. All MPS instances connected to that model server will stay synchronized. This can also be a local MPS instance without a web editor. Both options are supported at the same time. The next image gives an overview over the different docker images running in the kubernetes cluster. The model server uses an Apache Ignite cluster and just provides a REST API on top of it. A high load can be distributed over multiple instances. Running multiple MPS instances for scalability is possible, because the model has the same state on all instances. If you want to run MPS instances with different configurations (languages, plugins) or allow external instances to connect to the model server, a reverse proxy is used to forward the request to the correct instance. To access the web editor a user has to login in with a google account first. An OAuth proxy takes care of that and adds an HTTP header with the users e-mail address to the request. modelix provides an editor in the browser for the languages implemented in MPS. This can be an image based editor that renders the editor in MPS using the default editor definition or an HTML based editor that requires a separate editor definition in a language provided by modelix. Common to both approaches is that the user input (keyboard, mouse) is processed on the server and the update of the projection after a model change also happens on the server. Even in case of the HTML based editor the resulting HTML is computed on the server side. This removes the need to replicate the model into the browser, which would result in a bad performance in case of big models. Running MPS in the cloud requires an alternative to the file system for storing models. modelix implements a data structure that allows replication between all MPS instances connected to the same model server. It is very similar to the git storage format, but instead of files it stores nodes in its key-value data store. To support realtime collaboration, in addition to the snapshot of a version it also stores the operations that were applied on the previous version to produce the new version. Conflicts between concurrent modification are resolved using operational transformation (OT). The usually hard part of OT is to guarantee convergence, meaning that all clients end up with the same result indepent of the order in which they receive changes. This problem becomes trivial, because versions are identified by a hash over all the content. Any divergence will result in a different hash which can easily be detected. The remaining problem is what to do when a divergence is detected. From git we know that switching between versions is fast, because it only has to apply the difference between these versions. The same is true here. Fixing a divergence is as easy as switching to the correct version. If a client doesn’t have any local changes it doesn’t even need to apply the change operations itself. It can just switch to the new version. So in the rare case of a divergence fixing it is nothing special. It’s an operation that happens all the time.","title":"Architecture","component":"modelix","version":"modelix-23.1","name":"architecture","url":"/modelix/latest/explanation/architecture.html","titles":[{"text":"An architectural overview of the modelix project","hash":"_an_architectural_overview_of_the_modelix_project","id":1},{"text":"Editor","hash":"_editor","id":2},{"text":"Model","hash":"_model","id":3}]},"49":{"id":49,"text":"This glossary is a lose collection of keywords used throughout the modelix documentation. MPS \"JetBrains MPS (Meta Programming System) is a language workbench developed by JetBrains. MPS is a tool to design domain-specific languages (DSL). It uses projectional editing which allows users to overcome the limits of language parsers, and build DSL editors, such as ones with tables and diagrams\" See https://www.jetbrains.com/mps/ for more details. — https://en.wikipedia.org/wiki/JetBrains_MPS","title":"Glossary","component":"modelix","version":"modelix-23.1","name":"glossary","url":"/modelix/latest/explanation/glossary.html","titles":[]},"50":{"id":50,"text":"We develop an open source platform for models on the web to reduce modeling friction for domain experts We apply established web and cloud technologies to create a modeling tool in the browser which integrates with existing language workbenches whilst exploring new approaches","title":"Modelix Goals","component":"modelix","version":"modelix-23.1","name":"goals","url":"/modelix/latest/explanation/goals.html","titles":[{"text":"Vison","hash":"_vison","id":1},{"text":"Mission","hash":"_mission","id":2},{"text":"What we provide","hash":"_what_we_provide","id":3}]},"51":{"id":51,"text":"\"Explanation is discussion that clarifies and illuminates a particular topic. Explanation is understanding-oriented.\" [1] 1. https://diataxis.fr/explanation/","title":"Explanation","component":"modelix","version":"modelix-23.1","name":"index","url":"/modelix/latest/explanation/index.html","titles":[]},"52":{"id":52,"text":"TODO","title":"Frequently asked Questions","component":"modelix","version":"modelix-23.1","name":"faq","url":"/modelix/latest/howto/faq.html","titles":[]},"53":{"id":53,"text":"\"How-to guides are directions that take the reader through the steps required to solve a real-world problem. How-to guides are goal-oriented.\" [1] 1. https://diataxis.fr/how-to-guides/","title":"How-To Guides","component":"modelix","version":"modelix-23.1","name":"index","url":"/modelix/latest/howto/index.html","titles":[]},"54":{"id":54,"text":"The modelix project is developed open-source under the Apache-2.0 license. All components and software of the platform as well as issue tracking and project management are done in repositories in our GitHub organisation. Currently, we use GitHub actions to build, test, and publish the components. We deploy all relevant artifacts to the itemis Nexus server as well as GitHub Packages Issues are managed in our issue tracker over at https://issues.modelix.org. With many components being in various development stages - from stable to early and conceptual - they are released individually for each repository. Generally, we follow the Semantic versioning scheme for releases. However, anything based on JetBrains MPS (e.g. MPS plugins or extensions) are prefixed with the corresponding MPS major and minor version number followed by our own patch version number. For example, the org.modelix.mps-model-plugin version 2021.2.103 is the 103rd release which is compatible with MPS 2021.2.*. To make it easier for developers, the modelix platform is currently released twice a year as a single \"platform release\" which references compatible component versions. We aim to provide a Spring release R1 and an Autumn release R2. All development in-between is carried out as patches on the releases. This release cycle starts from 2023 with the first release on the MPS Community meetup in May: 2023.R1. To gain an overview over existing components, please refer to the list of components here We are currently in the process to further define our roadmap and core goals for each release. This roadmap will be closely aligned with the structure currently in the issue tracker. Once we have more dedicated information on this, we will publish it on our website and in this documentation.","title":"Development, Releases, and Roadmap","component":"modelix","version":"modelix-23.1","name":"roadmap","url":"/modelix/latest/main/roadmap.html","titles":[{"text":"Development","hash":"_development","id":1},{"text":"Release Cycle","hash":"_release_cycle","id":2},{"text":"Roadmap","hash":"_roadmap","id":3}]},"55":{"id":55,"text":"This page represents a fallback page for open TODOs within the documentation. If you end up here please add an issue to modelix/modelix.docs and tell us where you found this link or consider supporting us by creating a corresponding pull request.","title":"TODO Fallback","component":"modelix","version":"modelix-23.1","name":"todo","url":"/modelix/latest/main/todo.html","titles":[]},"56":{"id":56,"text":"Package Name Tech Docs Nexus GHP API Repo org.modelix model-api Kotlin 🔗 🔗 🔗 🔗 org.modelix metamodel-export MPS 🔗 🔗 🔗 🔗 org.modelix model-api-gen Kotlin 🔗 🔗 🔗 🔗 🔗 org.modelix model-api-gen-runtime Kotlin 🔗 🔗 🔗 🔗 org.modelix model-api-gen-gradle Gradle 🔗 🔗 🔗 🔗 🔗 --- org.modelix.model-api-gen.gradle.plugin Gradle 🔗 🔗 🔗 🔗 🔗 org.modelix incremental Kotlin 🔗 🔗 🔗 org.modelix model-server-lib MPS 🔗 🔗 🔗 🔗 org.modelix model-server-api Kotlin 🔗 🔗 🔗 🔗 org.modelix model-server Kotlin 🔗 🔗 🔗 🔗 🔗 org.modelix model-server-with-dependencies Kotlin 🔗 🔗 🔗 🔗 org.modelix model-client Kotlin 🔗 🔗 🔗 🔗 org.modelix light-model-client Kotlin 🔗 🔗 🔗 🔗 🔗 org.modelix model-download-gradle Gradle 🔗 🔗 --- org.modelix.mps.model-download Gradle 🔗 🔗 org.modelix.mps model-server-sync-plugin MPS 🔗 🔗 org.modelix.mps build-tools-lib Kotlin 🔗 🔗 🔗 org.modelix.mps build-tools-gradle Gradle 🔗 🔗 🔗 --- org.modelix.mps.build-tools Gradle 🔗 🔗 🔗 org.modelix.mps build-solution MPS 🔗 🔗 org.modelix.mps headless-runner MPS 🔗 🔗 org.modelix authorization Kotlin 🔗 🔗 🔗 org.modelix.mps web-editors-plugin MPS 🔗 🔗 ts-model-api TS 🔗 🔗 org.modelix workspace-client Kotlin 🔗 org.modelix workspace-manager Kotlin 🔗 org.modelix workspaces Kotlin 🔗 org.modelix instances-manager Kotlin 🔗 org.modelix gitui Kotlin 🔗 org.modelix keycloak-extensions Other 🔗 org.modelix ui-client Other 🔗 org.modelix ui-proxy Other 🔗 org.modelix ui-server Other 🔗 org.modelix modelix-samples MultiProject 🔗 🔗 org.modelix platform Gradle 🔗","title":"Table of modelix Components","component":"modelix","version":"modelix-23.1","name":"components-table","url":"/modelix/latest/reference/components-table.html","titles":[]},"57":{"id":57,"text":"\"Reference guides are technical descriptions of the machinery and how to operate it. Reference material is information-oriented.\" [1] 1. https://diataxis.fr/reference/","title":"Reference","component":"modelix","version":"modelix-23.1","name":"index","url":"/modelix/latest/reference/index.html","titles":[]},"58":{"id":58,"text":"The modelix platform is composed of multiple individual components which can be combined together to form a system bringing models to the web. Components are distributed across the following repositories: https://github.com/modelix/modelix.platform https://github.com/modelix/modelix.core https://github.com/modelix/modelix.mps-build-tools https://github.com/modelix/modelix https://github.com/modelix/incremental https://github.com/modelix/modelix.docs https://github.com/modelix/modelix.samples This page serves as an overview over all existing repositories, their components, and a short description. For more dense information about component, please navigate to the Table of modelix Components. The modelix.platform repository contains the Gradle platforms for modelix. It provides all modelix component versions for each modelix platform release. The modelix.core repository contains the core components of the modelix platform. These components include among others the model-server, model-api-gen, model-api-gen-gradle, and light-model-client. All components in this repository have no dependencies to JetBrains MPS. The modelix samples repository contains a couple of examples that show various aspects of the modelix platform. The primary focus of the samples is to show how you can apply modelix to bring languages and models defined in MPS into the web. On the basis of (meta-)models defined in MPS, external access is provided using JVM (Java/Kotlin) and web frameworks/tools. Everything shown in the samples is intended to enable you to come up with your own use-cases and architectures based on what is provided here. Not all features of modelix are shown here so this is not a complete demo of everything modelix can do.","title":"Components of modelix","component":"modelix","version":"modelix-23.1","name":"repositories-components","url":"/modelix/latest/reference/repositories-components.html","titles":[{"text":"List of currently available components in modelix","hash":"_list_of_currently_available_components_in_modelix","id":1},{"text":"Modelix platform (modelix-23.1)","hash":"_modelix_platform_modelix_23_1","id":2},{"text":"Modelix core (modelix-23.1)","hash":"_modelix_core_modelix_23_1","id":3},{"text":"Modelix samples (modelix-23.1)","hash":"_modelix_samples_modelix_23_1","id":4}]},"59":{"id":59,"text":"The modelix project uses Gradle to build the individual components. Simply call the following in the top level folder of a repository: ./gradlew build # mac/linux or if you are on windows use: gradlew.bat build # windows At the moment most modelix artifacts are stored on the itemis nexus with no access restriction. As a consequence, when you build modelix or use modelix components via Gradle there is no repository access setup required. This is optional when you want to obtain modelix artifacts from GitHub packages rather than the itemis nexus server. Most packages are also published to GitHub packages for which a GithHub account and credentials are required. To access GitHub packaged you need to specify your credentials. First of all you will need to generate a personal access token with access to GitHub Packages. The project assumes that your username is available as the variable gpr.user and the token as gpr.key. The easiest way to configure the credentials is copy the example below, paste it into the gradle.properties file in the repository and replace the values with your credentials: gpr.user= gpr.key= Gradle also supports other locations for specifying these properties.","title":"Build components using Gradle","component":"modelix","version":"modelix-23.1","name":"build-component","url":"/modelix/latest/tutorial/build-component.html","titles":[{"text":"Build from console","hash":"_build_from_console","id":1},{"text":"modelix Artifact Publication","hash":"_modelix_artifact_publication","id":2},{"text":"How to set up GitHub packages authentication","hash":"_how_to_set_up_github_packages_authentication","id":3}]},"60":{"id":60,"text":"\"Tutorials are lessons that take the reader by the hand through a series of steps to complete a project of some kind. Tutorials are learning-oriented.\" [1] 1. https://diataxis.fr/tutorials/","title":"Tutorials","component":"modelix","version":"modelix-23.1","name":"index","url":"/modelix/latest/tutorial/index.html","titles":[]},"61":{"id":61,"text":"The examples are currently work in progress and are develop alongside the modelix platform development. The modelix samples repository contains a couple of examples that show various aspects of the modelix platform. The primary focus of the samples is to show how you can apply modelix to bring languages and models defined in MPS into the web. On the basis of (meta-)models defined in MPS, external access is provided using JVM (Java/Kotlin) and web frameworks/tools. Everything shown in the samples is intended to enable you to come up with your own use-cases and architectures based on what is provided here. Not all features of modelix are shown here so this is not a complete demo of everything modelix can do. None of the examples try to reuse editors defined in MPS. If your goal is to reuse MPS editors as is then modelix itself ships with a projector integration to achieve this. While all the examples use the same language defined in MPS they are not meant as one complete example but rather as individual parts. The purpose of the examples is to give inspiration of what is possible with modelix and make you think and envision your own use-cases. The modelix project uses Gradle to build the individual components. Simply call the following in the top level folder of a repository: ./gradlew build # mac/linux or if you are on windows use: gradlew.bat build # windows At the moment most modelix artifacts are stored on the itemis nexus with no access restriction. As a consequence, when you build modelix or use modelix components via Gradle there is no repository access setup required. This is optional when you want to obtain modelix artifacts from GitHub packages rather than the itemis nexus server. Most packages are also published to GitHub packages for which a GithHub account and credentials are required. To access GitHub packaged you need to specify your credentials. First of all you will need to generate a personal access token with access to GitHub Packages. The project assumes that your username is available as the variable gpr.user and the token as gpr.key. The easiest way to configure the credentials is copy the example below, paste it into the gradle.properties file in the repository and replace the values with your credentials: gpr.user= gpr.key= Gradle also supports other locations for specifying these properties. Once the initial build has completes you can dive in with the following: Read explanations in the Courses Domain: MPS Language and Model Read the use-cases these samples cover in the Use Cases of the Sample project Understand the repository in the Sample Repository Structure Inspect and edit the project with the code editor of your choice. The top folder in the repository provides IntelliJ configurations, the mps folder is a sub-project can be opened using MPS 2021.2.6, and the spa-dashboard-angular folder is a WebStorm project. Start sample components which realize use case samples:tutorial/startup-usecases.adoc","title":"Welcome to the modelix samples!","component":"modelix","version":"modelix-23.1","name":"index","url":"/modelix/latest/samples/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Getting Started","hash":"_getting_started","id":2},{"text":"Build components using Gradle","hash":"_build_components_using_gradle","id":3},{"text":"Build from console","hash":"_build_from_console","id":4},{"text":"modelix Artifact Publication","hash":"_modelix_artifact_publication","id":5},{"text":"How to set up GitHub packages authentication","hash":"_how_to_set_up_github_packages_authentication","id":6},{"text":"Entry Points","hash":"_entry_points","id":7}]},"62":{"id":62,"text":"","title":"Courses Domain: MPS Language and Model","component":"modelix","version":"modelix-23.1","name":"courses-domain","url":"/modelix/latest/samples/explanation/courses-domain.html","titles":[]},"63":{"id":63,"text":"The repository of the modelix samples is a single gradle project to make building everything at once easy. The examples are organized by the technology they use into the various sub-folders: Components/Tech Description Status Folder MPS + cloud-plugin MPS language definition that is used by all examples. The MPS language structure is used to generate a Java API consumed by all examples. ✅ mps MPS, metamodel-generator Generated Kotlin API from the MPS language. ✅ mps/metamodel OpenAPI A hand-crafted OpenAPI specification that defines domain-specific REST endpoints which expose the model contents. ✅ openapi model-server + Quarkus An implementation of the OpenAPI that exposes the model contents REST. Obtains model data from a running model-server. ✅ rest-api-model-server ligh-model-server+ ModelQL + Ktor An implementation of the OpenAPI that exposes the model contents REST. Obtains model data from a running the light-model-server MPS plugin. ✅ rest-api-model-ql Angular via REST A single page app that realizes a read-only dashboard. Can connect to either of the OpenAPI implementations. ✅ spa-dashboard-angular Each component documentation with component specific content.","title":"Sample Repository Structure","component":"modelix","version":"modelix-23.1","name":"structure","url":"/modelix/latest/samples/explanation/structure.html","titles":[]},"64":{"id":64,"text":"The imaginary domain use-case represents a dashboard like view on model content. This use-case envisions a scenario where an independent client (outside of MPS) wants to consume the content of models defined in MPS, thus requiring read only access. There are two different variations of this use-case: Use Case 1a: Dashboard view next to Room In this variation, we envision a display next to each room that shows the upcoming lectures in that room. A low power display such as an low power e-ink with showing a simple website via wifi would be sufficient for this scenario. Use Case 1b: Dashboard View in the Main Hall In this variation, we envision a display in the main hall shows the full schedule of all the lectures of the current day. A large display would be used for this scenario, showing a website via wifi which contains the complete schedule. In both variations, the clients do not need to edit these models and are not capable to run a full MPS instance to show the model content. While the e-ink display does not require automatic updates (the display simply refreshes periodically every 15 minutes), the display in the main hall will require automatic updates (having more power and being a central display it would want to show the newest information at all times). The dashboard component, an angular app that serves the content of a model, implements such a simple single page application (SPA) for this use-case.","title":"Use-Case 1: Dashboard","component":"modelix","version":"modelix-23.1","name":"usecase-1","url":"/modelix/latest/samples/explanation/usecase-1.html","titles":[]},"65":{"id":65,"text":"","title":"Use-Case 2: Manual Schedule Creation","component":"modelix","version":"modelix-23.1","name":"usecase-2","url":"/modelix/latest/samples/explanation/usecase-2.html","titles":[]},"66":{"id":66,"text":"Given the courses domain and its meta-model explained here, the samples project covers two use-cases: Use-Case 1: Dashboard Use-Case 2: Manual Schedule Creation To illustrate how the different use-cases and component architecture relate, this section provides a short tabular description. Use Case Variant Backend MPS Backend model-server Use Case 1: Dashboard view 1a. light-model-server-client + rest-api-model-ql light-model-server-client + rest-api-model-ql 1b. json-bulk-model-access + rest-api-json-bulk ❌ Use Case 2: Real-time collaboration 🏗️ 🏗️","title":"Use Cases of the Sample project","component":"modelix","version":"modelix-23.1","name":"usecases","url":"/modelix/latest/samples/explanation/usecases.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Use-Case Architecture Mapping","hash":"_use_case_architecture_mapping","id":2}]},"67":{"id":67,"text":"This samples implementations allow to run different use-cases in different setups - thus showing the flexibility of the modelix platform. Depending on the chosen use-case, only a subset of the components in this repository are used. The full architecture includes components used for multiple use-cases. One does not need all components to realize individual use-cases. In the following a short overview is given on each component. The meta-model (language) of the courses domain and a model (soulution) with sample data in JetBrains MPS on which everything in this sample is based. ▶️ For more details, see the Language section in the MPS component documentation An API based on the meta-model generated with the metamodel-generator component from modelix. ▶️ For more details, see the 'Generated API' section in the MPS component documentation In this example project, an extra domain-specific API layer is added which is defined in the OpenAPI specification[1]. This layer is meant educational as no noteworthy abstractions from the language itself happen in this definition. It intends to show how one introduces a clearly defined domain-specific abstraction decoupling the language engineering (meta-modeling) and the web development. We provide two backends (i.e. implementations of the API layer): The API via modelQL and API via model-server components. ▶️ For more details, see the OpenAPI component documentation. This project provides two implementations of the openapi domain abstraction. MPS as a source This backend provides access to the model by obtaining the model knowledge directly from a running MPS instance. It is implemented using ktor and connects to a model-client plugin running inside of MPS. This component can only provide read and write access. ▶️ For more details, see the API via modelQL for details. model-server as a source This backend provides access to the model by connecting to a running model-server. It is implemented using Quarkus and can provide read access to the underlying model. Additionally, a websocket for push notifications about ongoing model changes is provided. This is realized using websockets exposed by the model-server. ▶️ For more details, also see the API via model-server component for details. The dashboard provides access to model knowledge through a browser. As it is conforming to the OpenAPI specification, the dashboard is able to obtain the model content from both backend implementations. However, the dashboard is consequently limited by the chosen backend. This components requires running any of the available OpenAPI implementations to obtain model knowledge from. ▶️ For more details, also see the Dashboard for details. ⚠️ TBD ⚠️ TBD 1. See https://www.openapis.org/ for details on how OpenAPI works.","title":"System architecture and components in this repository","component":"modelix","version":"modelix-23.1","name":"architecture","url":"/modelix/latest/samples/reference/architecture.html","titles":[{"text":"Full system architecture","hash":"_full_system_architecture","id":1},{"text":"The MPS Language","hash":"_the_mps_language","id":2},{"text":"Generated model API (domain API","hash":"_generated_model_api_domain_api","id":3},{"text":"Domain-specific OpenAPI","hash":"_domain_specific_openapi","id":4},{"text":"OpenAPI implementation","hash":"_openapi_implementation","id":5},{"text":"Single-page application (SPA) Dashboard","hash":"_single_page_application_spa_dashboard","id":6},{"text":"Real-time' collaboration web application","hash":"_real_time_collaboration_web_application","id":7},{"text":"Deploying to Docker / Kubernetes","hash":"_deploying_to_docker_kubernetes","id":8}]},"68":{"id":68,"text":"Figure 1. The SPA Dashboard Figure 2. View on a single Lecture in the Dashboard This component provides a single page application which accesses an implementation of the sample OpenAPI specification. The idea here is to illustrate a read only use-case where a system/service outside of MPS wants to consume the content of models previously defined in MPS. This dashboard is a single-page app showing content obtained from the intermediate REST APIs. A user cannot edit these models from the browser. It does not matter whether MPS is used to store the model information (e.g. by running an MPS instance in the cloud), or alternatively the modelix model-server is used. You can build this subproject individually from the parent folder via via Gradle: ./gradlew spa-dashboard-angular:build To run this application you will need a component which provides an API implementation conforming to the OpenAPI spec. Thus, you need to start one of the available OpenAPI implementations in this project: Either start the rest-api-model-ql implementation, or alternatively you can start the rest-api-model-server implementation. Check the documentation of the corresponding project parts on how to start them. Make sure you have the correct ports defined in the API URLs. This app expects 8090 by default. Next run this single page application via: ./gradlew spa-dashboard-angular:npmRun You can then go to http://localhost:4200 to see a dashboard with the courses model content.","title":"Single page application: An Angular based dashboard","component":"modelix","version":"modelix-23.1","name":"dashboard","url":"/modelix/latest/samples/reference/dashboard.html","titles":[{"text":"Building & Running","hash":"_building_running","id":1},{"text":"1. Build spa-dashboard-angular","hash":"_1_build_spa_dashboard_angular","id":2},{"text":"2. Start an OpenAPI implementation","hash":"_2_start_an_openapi_implementation","id":3},{"text":"3. Run the angular app","hash":"_3_run_the_angular_app","id":4}]},"69":{"id":69,"text":"The language used in all examples is the same. The language itself is fairly small: It describes a very simplified lecture schedule. The language intentionally does not use expressions, creating editors for expressions by hand is very cumbersome and at the time where these samples were created modelix has no support for generating these editors for you. The main concepts of the language are: Room: where lecture are held. Each room has a maximum capacity of students, a name and some additional properties. Lecture: Have a name, some description and reference a room where they are held. And also have a schedule which determines when they are held and if they repeat through the whole semester or are a one time lecture. Student: A student with a name and birthday. Assignment: Lecture assignments for a single student. Some concepts are contained a root node like a Rooms container to make structuring the editors in MPS easier: classDiagram class Rooms { > } class Courses { > } class Students { > } class LectureAssignments { > } Rooms *-- Room : 0..n Courses *-- Lecture: 0..n Lecture .. Room: 1 Lecture *-- Schedule: 1 OneOff (iNode) rooms.children.rooms.forEach { it.properties.name } The code generator has exported the language definition, and we can use to write type safe code that works with the models. For properties and children we now have attributes in the generated classes and if somebody renames a property or child-role the compiler will tell us. Of course the MPSLanguageRegistry.getInstance would throw an exception if our iNode instance isn’t a Rooms instance. The generate class for a Room concept: concept Room extends BaseConcept implements INamedConcept instance can be root: false alias: short description: properties: maxPlaces : integer hasRemoteEquipment : boolean children: > references: > Will look like this: java package University.Schedule.structure; /*Generated by MPS */ import jetbrains.mps.lang.core.structure.BaseConcept; import jetbrains.mps.lang.core.structure.INamedConcept; import org.modelix.mps.apigen.runtime.INodeHolder; import org.jetbrains.annotations.NotNull; import org.modelix.model.api.INode; import org.jetbrains.annotations.Nullable; /** * Generated for http://127.0.0.1:63320/node?ref=r%3Adfa26643-4653-44bc-9dfe-5a6581bcd381%28University.Schedule.structure%29%2F4128798754188010580 */ public class Room extends BaseConcept implements INamedConcept { public class Properties extends BaseConcept.Properties implements INodeHolder, INamedConcept.Properties { @NotNull @Override public INode getINode() { return Room.this.getINode(); } @Nullable public Integer getMaxPlaces() { String propertyValue = getINode().getPropertyValue(\"maxPlaces\"); if (propertyValue != null && !(propertyValue.isEmpty())) { return Integer.parseInt(propertyValue); } return null; } @Nullable public Integer setMaxPlaces(Integer value) { if (value != null) { getINode().setPropertyValue(\"maxPlaces\", Integer.toString(value)); } else { getINode().setPropertyValue(\"maxPlaces\", null); } return value; } @Nullable public Boolean getHasRemoteEquipment() { String propertyValue = getINode().getPropertyValue(\"hasRemoteEquipment\"); if (propertyValue != null && !(propertyValue.isEmpty())) { return Boolean.parseBoolean(propertyValue); } return null; } @Nullable public Boolean setHasRemoteEquipment(@Nullable Boolean value) { if (value != null) { getINode().setPropertyValue(\"hasRemoteEquipment\", Boolean.toString(value)); } else { getINode().setPropertyValue(\"hasRemoteEquipment\", null); } return value; } } public class Children extends BaseConcept.Children implements INodeHolder, INamedConcept.Children { @NotNull @Override public INode getINode() { return Room.this.getINode(); } } public class References extends BaseConcept.References implements INodeHolder, INamedConcept.References { @NotNull @Override public INode getINode() { return Room.this.getINode(); } } private final Properties properties; private final Children children; private final References references; public Room(INode node) { super(node); this.properties = new Properties(); this.children = new Children(); this.references = new References(); } public Properties getProperties() { return this.properties; } public Children getChildren() { return this.children; } public References getReferences() { return this.references; } } At the moment it’s not possible to regenerate the API as part of the CI/gradle build, that’s why the generated sources are checked into the repository. This limitation is specific this example and is somehow caused by the MPS build failing to load the right languages during the build. Other projects are successfully using the api-gen code generator within their CI/gradle build. The limitation will get fixed in the future but for now the generated Java code is checked into the repository.","title":"Meta-model and the Generated Domain-Specific Model API","component":"modelix","version":"modelix-23.1","name":"meta-model-model-api","url":"/modelix/latest/samples/reference/meta-model-model-api.html","titles":[{"text":"Language","hash":"_language","id":1},{"text":"Generated API","hash":"_generated_api","id":2},{"text":"Limitations","hash":"_limitations","id":3}]},"70":{"id":70,"text":"This 'component' is not a real component but rather a start helper - the model-server is started using the Gradle application plugin. To start the model-server, simply call the following in the repository root: ./gradlew model-server:run --args=\"-inmemory -dumpin courses.modelserver.dump\" As an alternative, you can also use Docker to run an in instance of model-server using the following command: docker run --rm -p 28101:28101 -d modelix/modelix-model:1.3.2 java -XX:MaxRAMPercentage=85 -Djdbc.url=$jdbc_url -cp \"model-server/build/libs/*\" org.modelix.model.server.Main -inmemory","title":"model-server start helper","component":"modelix","version":"modelix-23.1","name":"model-server","url":"/modelix/latest/samples/reference/model-server.html","titles":[]},"71":{"id":71,"text":"This component of a single openapi.yml file which provides the OpenAPI specification of the REST API implementations serving as examples in this project. The described API provides an additional domain-specific abstraction of the courses domain[1]. The intention of this abstraction is to provide an example on how the use of modelix can be abstracted for eventual consumer apps, such as the Angular based dashboard. The development process thus can follow a API-first approach. Consequently, this openAPI provides a contract of the API behaviour for web teams and a language engineers. There are currently three implementations of this OpenAPI specification: API via model-server API via modelQL 1. This additional abstraction admittedly does not really provide fancy abstractions for this domain. Its purpose is rather educational for you to understand the option to add an additional layer separating web development from language engineering. You do not have to do this. Of course one does not necessarily need such an abstraction layer - any dashboard or web app can directly communicate with the API provided by the model-server together with the generated model API","title":"Intermediate OpenAPI of the Courses domain","component":"modelix","version":"modelix-23.1","name":"openapi","url":"/modelix/latest/samples/reference/openapi.html","titles":[]},"72":{"id":72,"text":"This project provides a REST API that wraps the functionality of the light-model-server MPS plugin running inside an MPS instance. The provided REST API conforms to the API spec in the openapi.yaml. You can build this subproject individually from the parent folder via all gradle: ./gradlew rest-api-model-ql:build Before running the API provider you need to open the MPS project in the mps folder. The initial gradle build will automatically have set up MPS with the light-model-server plugin and expose the models via query language called ModelQL. This API is then accessed from this openAPI abstraction implementation to load the models. Once your MPS project is opened you can run: ./gradlew rest-api-model-ql:run Once you see a log message like: [DefaultDispatcher-worker-8] INFO ktor.application - Responding at http://0.0.0.0:8090 Your openAPI implementation is ready. Settings such as ports and hosts are defined in the application.conf file. For simple testing you can curl the data provided by the API for example: 🧾 Unfold for examples ```console $ curl -s -X GET \"http://localhost:8090/rooms\" -H \"accept: application/json\" | jq { \"rooms\": [ { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\", \"name\": \"somehjtinghekjrekjrhe\", \"maxPlaces\": 32232121, \"hasRemoteEquipment\": false }, { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\", \"name\": \"Schrödinger\", \"maxPlaces\": 420, \"hasRemoteEquipment\": true } ] } $ curl -s -X GET \"http://localhost:8090/rooms/mps-node%253Ar%253Ace161c54-ea76-40a6-a31d-9d7cd01febe2%2528University.Schedule.sandbox%2529%252F4128798754188058349\" -H \"accept: application/json\" | jq { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\", \"name\": \"Schrödinger\", \"maxPlaces\": 420, \"hasRemoteEquipment\": true } $ curl -s -X GET \"http://localhost:8090/rooms/mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\" -H \"accept: application/json\" | jq { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\", \"name\": \"somehjtinghekjrekjrhe\", \"maxPlaces\": 32232121, \"hasRemoteEquipment\": false } $ curl -s -X GET \"http://localhost:8090/rooms/trash\" -H \"accept: application/json\" | jq \"Can not load Room: null $ curl -s -X GET \"http://localhost:8090/lectures\" -H \"accept: application/json\" | jq curl -s -X GET \"http://localhost:8090/lectures\" -H \"accept: application/json\" | jq { \"lectures\": [ { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058353\", \"name\": \"Physics 101\", \"description\": \"You learn about stuff\", \"maxParticipants\": 42, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\" }, { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F1305729863392535677\", \"name\": \"Physics 102\", \"description\": \"You learn about stuff\", \"maxParticipants\": 42, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\" }, { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188060854\", \"name\": \"New Students Welcome\", \"description\": \"Hello everyone\", \"maxParticipants\": 69, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\" } ] } $ curl -s -X GET \"http://localhost:8090/lectures/mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058353\" -H \"accept: application/json\" | jq { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058353\", \"name\": \"Physics 101\", \"description\": \"You learn about stuff\", \"maxParticipants\": 42, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\" } $ curl -s -X GET \"http://localhost:8090/lectures/trash\" -H \"accept: application/json\" | jq \"Can not load Lecture: null\" Alternatively you can now start the Dashboard to consume this API endpoint.","title":"API via modelQL","component":"modelix","version":"modelix-23.1","name":"rest-api-model-ql","url":"/modelix/latest/samples/reference/rest-api-model-ql.html","titles":[{"text":"Building","hash":"_building","id":1},{"text":"Usage","hash":"_usage","id":2}]},"73":{"id":73,"text":"This project provides a custom REST API implemented in Quarkus that wraps a model-server instance. The REST API abstracts the generic model-server API for providing the dashboard example with usable data. The provided REST API conforms to the API spec in the openapi.yaml. You can build this subproject individually from the parent folder via all gradle: ./gradlew rest-api-model-server:build Before starting the REST API, a model-server instance needs to be running. The example from the MPS folder has to be deployed on this instance in a repository call courses. Once these preconditions are met, the REST API can be launched with: ./gradlew rest-api-model-server:run For simple testing you can curl the data provided by the API for example: 🧾 Unfold for examples $ curl -s -X GET \"http://localhost:8090/rooms\" -H \"accept: application/json\" | jq { \"rooms\": [ { \"roomRef\": \"r:ce161c54-ea76-40a6-a31d-9d7cd01febe2(unused)/4128798754188058347\", \"name\": \"Einstein\", \"maxPlaces\": 42, \"hasRemoteEquipment\": true }, { \"roomRef\": \"r:ce161c54-ea76-40a6-a31d-9d7cd01febe2(unused)/4128798754188058349\", \"name\": \"Schrödinger\", \"maxPlaces\": 420, \"hasRemoteEquipment\": true } ] } Alternatively you can now start the Dashboard to consume this API. If you want to observe the updates sent on the web socket, you can use wscat to get some insights when updates are sent. wscat -c ws://127.0.0.1:8090/updates","title":"API via model-server","component":"modelix","version":"modelix-23.1","name":"rest-api-model-server","url":"/modelix/latest/samples/reference/rest-api-model-server.html","titles":[{"text":"Building","hash":"_building","id":1},{"text":"Usage","hash":"_usage","id":2},{"text":"Introspecting the websocket communication","hash":"_introspecting_the_websocket_communication","id":3}]},"74":{"id":74,"text":"This Tutorial shows how to start up a system that implements Use-Case 1: Dashboard The samples provide a total of three architectural variation of this use case: Using the more complex rest-api-model-server backend and the model-server. Using the rest-api-model-ql backend and the light-model-server MPS plugin rest-api-model-server (legacy) + model-server All gradle commands assume you are in the top level folder of the samples repository. To start up the system as described in UC 1a, you first have to have built the entire project: ./gradlew Once done, you need to start all components involved, these are: MPS: Start MPS 2021.2.6 without any global plugins and open the project in the mps/project-mps-backend folder. This MPS project stores the model content using MPS persistence. The gradle build process will have downloaded all plugins needed to mps/project-mps-backend/build/dependencies and declare this folder as a global library. This includes the json-bulk-model-access and the light-model-client. API layer: The rest-api-json-bulk provides the models from the running MPS instance, simply run in a new terminal (it will be a blocking call): $ ./gradlew rest-api-json-bulk:run 🧾 You can expect output similar to this (unfold to see details) > Task :rest-api-json-bulk:run 2022-12-07 10:12:38.874 [DefaultDispatcher-worker-11] INFO ktor.application - Autoreload is disabled because the development mode is off. 2022-12-07 10:12:39.009 [DefaultDispatcher-worker-11] INFO ktor.application - Application started in 0.14 seconds. 2022-12-07 10:12:39.131 [DefaultDispatcher-worker-1] INFO ktor.application - Responding at http://0.0.0.0:8090 91% EXECUTING [2m 20s] > :rest-api-json-bulk:run Dashboard: The dashboard itself is a node application which can be run via in a new terminal (it will be a blocking call): $ ./gradlew spa-dashboard-angular:npmRun 🧾 You can expect output similar to this (unfold to see details) > Task :spa-dashboard-angular:npmRun > angular.io-example@0.0.0 ng > ng serve - Generating browser application bundles (phase: setup)... ✔ Browser application bundle generation complete. Initial Chunk Files | Names | Raw Size vendor.js | vendor | 2.47 MB | polyfills.js | polyfills | 318.03 kB | styles.css, styles.js | styles | 211.31 kB | main.js | main | 86.71 kB | runtime.js | runtime | 6.53 kB | | Initial Total | 3.08 MB Build at: 2022-12-07T09:18:02.345Z - Hash: 186b24edf20c1c4a - Time: 13776ms ** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ ** ✔ Compiled successfully. ✔ Browser application bundle generation complete. 5 unchanged chunks Build at: 2022-12-07T09:18:02.740Z - Hash: 186b24edf20c1c4a - Time: 324ms ✔ Compiled successfully. 95% EXECUTING [29s] > :spa-dashboard-angular:npmRun Explore the dashboard at http://localhost:4200/ Changes to the model in MPS will not automatically synchronize to the dashboard, you will have to manually reload the model.","title":"Run Use-Case 1 Implementation","component":"modelix","version":"modelix-23.1","name":"start-usecase-1-a","url":"/modelix/latest/samples/tutorial/start-usecase-1-a.html","titles":[{"text":"How to start UC 1a","hash":"_how_to_start_uc_1a","id":1}]},"75":{"id":75,"text":"TODO using the rest-api-model-ql backend and the light-model-server MPS plugin All gradle commands assume you are in the top level folder of this repository. To start up the system as described in UC 1b, you first have to have build the entire project: ./gradlew Once done, you need to start all components involved, these are: modelix model-server: Model knowledge is supplied by the model-sever in this use case. To avoid complicated setups, we simply start the model-server in memory and load the model content from the included dump file, all using gradle: ./gradlew model-server:run --args=\"-inmemory -dumpin courses.modelserver.dump\" 🧾 You can expect output similar to this (unfold to see details) ./gradlew model-server:run --args=\"-inmemory -dumpin courses.modelserver.dump\" > Task :model-server:run 18:33:16,185 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml] 18:33:16,186 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy] 18:33:16,186 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [jar:file:/home/nkoester/.gradle/caches/modules-2/files-2.1/org.modelix/model-server-fatjar/1.3.2/1e6502c0e8282b1fe2c06824ad43f4d7270f20d7/model-server-fatjar-1.3.2.jar!/logback.xml] 18:33:16,194 |-INFO in ch.qos.logback.core.joran.spi.ConfigurationWatchList@f4168b8 - URL [jar:file:/home/nkoester/.gradle/caches/modules-2/files-2.1/org.modelix/model-server-fatjar/1.3.2/1e6502c0e8282b1fe2c06824ad43f4d7270f20d7/model-server-fatjar-1.3.2.jar!/logback.xml] is not of type file 18:33:16,269 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender] 18:33:16,270 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [console] 18:33:16,272 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property 18:33:16,282 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.modelix] to DEBUG 18:33:16,282 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [console] to Logger[org.modelix] 18:33:16,282 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to INFO 18:33:16,282 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [console] to Logger[ROOT] 18:33:16,282 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration. 18:33:16,283 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@7ff95560 - Registering current configuration as safe fallback point 18:33:16.295 [main] INFO org.modelix.model.server.Main - Max memory (bytes): 32178700288 18:33:16.295 [main] INFO org.modelix.model.server.Main - Max memory (bytes): 32178700288 18:33:16.295 [main] INFO org.modelix.model.server.Main - Server process started 18:33:16.295 [main] INFO org.modelix.model.server.Main - Server process started 18:33:16.295 [main] INFO org.modelix.model.server.Main - In memory: true 18:33:16.295 [main] INFO org.modelix.model.server.Main - In memory: true 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to secret file: /secrets/modelsecret/modelsecret.txt 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to secret file: /secrets/modelsecret/modelsecret.txt 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to JDBC configuration file: null 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to JDBC configuration file: null 18:33:16.296 [main] INFO org.modelix.model.server.Main - Schema initialization: false 18:33:16.296 [main] INFO org.modelix.model.server.Main - Schema initialization: false 18:33:16.296 [main] INFO org.modelix.model.server.Main - Set values: [] 18:33:16.296 [main] INFO org.modelix.model.server.Main - Set values: [] 18:33:16.296 [main] INFO org.modelix.model.server.Main - Port: 28101 18:33:16.296 [main] INFO org.modelix.model.server.Main - Port: 28101 Values loaded from /home/nkoester/git/modelix/modelix-sample/model-server/courses.modelserver.dump (73) 18:33:16.364 [main] INFO ktor.application - Autoreload is disabled because the development mode is off. 18:33:16.428 [main] INFO ktor.application - Application started in 0.088 seconds. 18:33:16.518 [DefaultDispatcher-worker-1] INFO ktor.application - Responding at http://0.0.0.0:28101 85% EXECUTING [7s] > :model-server:run API layer: The rest-api-model-server provides an abstraction of the model from the previously started model-server, simply run in a new terminal (it will be a blocking call): $ ./gradlew rest-api-model-server:quarkusDev 🧾 You can expect output similar to this (unfold to see details) $ ./gradlew rest-api-model-server:quarkusDev > Task :rest-api-model-server:quarkusDev Listening for transport dt_socket at address: 5005 Press [h] for more options>NG [8s] Tests paused Press [r] to resume testing, [h] for more options> Press [r] to resume testing, [o] Toggle test output, [h] for more options> __ ____ __ _____ ___ __ ____ ______ --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/ -/ /_/ / /_/ / __ |/ , _/ , 95% EXECUTING [16s] > :rest-api-model-server:quarkusDev Dashboard: The dashboard itself is a node application which can be run via in a new terminal (it will be a blocking call): $ ./gradlew spa-dashboard-angular:npmRun 🧾 You can expect output similar to this (unfold to see details) > Task :spa-dashboard-angular:npmRun > angular.io-example@0.0.0 ng > ng serve - Generating browser application bundles (phase: setup)... ✔ Browser application bundle generation complete. Initial Chunk Files | Names | Raw Size vendor.js | vendor | 2.47 MB | polyfills.js | polyfills | 318.03 kB | styles.css, styles.js | styles | 211.31 kB | main.js | main | 86.71 kB | runtime.js | runtime | 6.53 kB | | Initial Total | 3.08 MB Build at: 2022-12-07T09:18:02.345Z - Hash: 186b24edf20c1c4a - Time: 13776ms ** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ ** ✔ Compiled successfully. ✔ Browser application bundle generation complete. 5 unchanged chunks Build at: 2022-12-07T09:18:02.740Z - Hash: 186b24edf20c1c4a - Time: 324ms ✔ Compiled successfully. 95% EXECUTING [29s] > :spa-dashboard-angular:npmRun MPS: Start MPS 2021.2.6 without any global plugins and open the project in the mps/project-modelserver-backend folder. This MPS project does not store the model locally and instead obtains them from the model-server via the cloud-access plugin. The gradle build process will have downloaded all plugins needed to mps/project-modelserver-backend/build/dependencies and declare this folder as a global library. This includes the cloud-access plugin. Explore the dashboard at http://localhost:4200/ Changes to the model in MPS will automatically synchronize to the dashboard All gradle commands assume you are in the top level folder of this repository. To start up the system as described in UC 1c, you first have to have built the entire project: ./gradlew Once done, you need to start all components involved, these are: MPS: Start MPS 2021.2.6 without any global plugins and open the project in the mps/project-mps-backend folder. This MPS project stores the model content using MPS persistence. The gradle build process will have downloaded all plugins needed to mps/project-mps-backend/build/dependencies and declare this folder as a global library. This includes the light-model-server plugin used in this example UC. API layer: The light-model-server provides the models from the running MPS instance, simply run in a new terminal (it will be a blocking call): $ ./gradlew rest-api-model-ql:run 🧾 You can expect output similar to this (unfold to see details) > Task :rest-api-model-ql:run 2023-01-25 18:46:48.977 [main] INFO o.m.s.r.ModelServerLightWrapper - Connecting to light model-server at ws://localhost:48302/ws 2023-01-25 18:46:49.044 [main] INFO o.m.s.r.ModelServerLightWrapper - Connection successful 2023-01-25 18:46:49.070 [main] INFO ktor.application - Autoreload is disabled because the development mode is off. 2023-01-25 18:46:49.346 [main] INFO ktor.application - Application started in 0.286 seconds. 2023-01-25 18:46:49.455 [DefaultDispatcher-worker-4] INFO ktor.application - Responding at http://0.0.0.0:8090 2023-01-25 18:46:50.806 [eventLoopGroupProxy-4-1] INFO o.m.s.r.ModelServerLightWrapper - Resolving node trash 94% EXECUTING [26m 13s] > :rest-api-model-ql:run Dashboard: The dashboard itself is a node application which can be run via in a new terminal (it will be a blocking call): `$ ./gradlew spa-dashboard-angular:npmRun ` 🧾 You can expect output similar to this (unfold to see details) > Task :spa-dashboard-angular:npmRun > angular.io-example@0.0.0 ng > ng serve - Generating browser application bundles (phase: setup)... ✔ Browser application bundle generation complete. Initial Chunk Files | Names | Raw Size vendor.js | vendor | 2.47 MB | polyfills.js | polyfills | 318.03 kB | styles.css, styles.js | styles | 211.31 kB | main.js | main | 86.71 kB | runtime.js | runtime | 6.53 kB | | Initial Total | 3.08 MB Build at: 2022-12-07T09:18:02.345Z - Hash: 186b24edf20c1c4a - Time: 13776ms ** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ ** ✔ Compiled successfully. ✔ Browser application bundle generation complete. 5 unchanged chunks Build at: 2022-12-07T09:18:02.740Z - Hash: 186b24edf20c1c4a - Time: 324ms ✔ Compiled successfully. 95% EXECUTING [29s] > :spa-dashboard-angular:npmRun Explore the dashboard at http://localhost:4200/ Changes to the model in MPS will not automatically synchronize to the dashboard, you will have to manually reload the model.","title":"Run Use-Case 2a Implementation","component":"modelix","version":"modelix-23.1","name":"start-usecase-1-b","url":"/modelix/latest/samples/tutorial/start-usecase-1-b.html","titles":[{"text":"How to start UC 1b","hash":"_how_to_start_uc_1b","id":1},{"text":"How to start UC 1c","hash":"_how_to_start_uc_1c","id":2}]},"76":{"id":76,"text":"TODO startup tutorial","title":"","component":"modelix","version":"modelix-23.1","name":"startup-usecases","url":"/modelix/latest/samples/tutorial/startup-usecases.html","titles":[]},"77":{"id":77,"text":"The modelix.core repository contains the core components of the modelix platform. These components include among others the model-server, model-api-gen, model-api-gen-gradle, and light-model-client. All components in this repository have no dependencies to JetBrains MPS. The modelix project uses Gradle to build the individual components. Simply call the following in the top level folder of a repository: ./gradlew build # mac/linux or if you are on windows use: gradlew.bat build # windows At the moment most modelix artifacts are stored on the itemis nexus with no access restriction. As a consequence, when you build modelix or use modelix components via Gradle there is no repository access setup required. This is optional when you want to obtain modelix artifacts from GitHub packages rather than the itemis nexus server. Most packages are also published to GitHub packages for which a GithHub account and credentials are required. To access GitHub packaged you need to specify your credentials. First of all you will need to generate a personal access token with access to GitHub Packages. The project assumes that your username is available as the variable gpr.user and the token as gpr.key. The easiest way to configure the credentials is copy the example below, paste it into the gradle.properties file in the repository and replace the values with your credentials: gpr.user= gpr.key= Gradle also supports other locations for specifying these properties.","title":"Welcome to modelix.core!","component":"modelix","version":"modelix-23.1","name":"index","url":"/modelix/latest/core/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Getting Started","hash":"_getting_started","id":2},{"text":"Build components using Gradle","hash":"_build_components_using_gradle","id":3},{"text":"Build from console","hash":"_build_from_console","id":4},{"text":"modelix Artifact Publication","hash":"_modelix_artifact_publication","id":5},{"text":"How to set up GitHub packages authentication","hash":"_how_to_set_up_github_packages_authentication","id":6}]},"78":{"id":78,"text":"TODO","title":"modelix.core Explanation","component":"modelix","version":"modelix-23.1","name":"index","url":"/modelix/latest/core/explanation/index.html","titles":[]},"79":{"id":79,"text":"TODO","title":"modelix.core How-To","component":"modelix","version":"modelix-23.1","name":"index","url":"/modelix/latest/core/howto/index.html","titles":[]},"80":{"id":80,"text":"If you are interested in a more practical usage of what is presented here, check out the samples project Creating an instance that loads the entire model from the server can be done like this: val client = LightModelClient.builder() .url(\"ws://localhost/json/v2/test-repo/ws\") // optional, by default it connects to the MPS plugin .build() You have to set a model query using changeQuery() to tell the server in what data you are interested in. Without a query the client will not receive any data. client.changeQuery(buildModelQuery { root { descendants { } } }) To read or write any nodes you have to start a read/write transaction by using runRead {}/runWrite {}. An exception is thrown when you try to access a node outside a transaction. val rootNode = client.waitForRootNode()!! client.runRead { val modules = rootNode.getChildren(\"modules\") // ... } If you try to access a node that is not included in your model query an exception is thrown. You can use INode.isLoaded() to check if a node was loaded on the client to prevent this exception. You can also filter a list of nodes like this: node.getChildren(\"modules\").filterLoaded(), to iterate only over the nodes that are included in your query.","title":"How-To use the light-model-client","component":"modelix","version":"modelix-23.1","name":"usage-light-model-client","url":"/modelix/latest/core/howto/usage-light-model-client.html","titles":[]},"81":{"id":81,"text":"If you are interested in a more practical usage of what is presented here, check out the samples project To apply model-api-gen to an existing JetBrains MPS language, it is necessary to build the project via Gradle. This How-To assumes a folder structure as follows . ├── mps │ ├── build │ ├── metamodel │ │ └── [kotlin gradle sub-project] │ │ │ ├── languages │ │ └── [your MPS languages] │ └── solutions │ └── [your MPS solutions] │ ├── settings.gradle.kts ├── gradle.properties ├── gradle.properties ├── build.gradle.kts └── [...] Once you have your Gradle setup done, add the following lines the respective files. gradle.properties file: modelixCoreVersion=1.4.10 mpsVersion=2021.3.2 [...] The versions listed here are not the latest versions, refer to the repositories or use our latest release. settings.gradle.kts file: pluginManagement { val modelixCoreVersion: String by settings plugins { // the gradle plugin that provides easy access to the meta-model generator id(\"org.modelix.model-api-gen.gradle\") version modelixCoreVersion [...] } repositories { maven { url = uri(\"https://artifacts.itemis.cloud/repository/maven-mps/\") } [...] } } [...] build.gradle.kts file: plugins { id(\"org.modelix.model-api-gen\") } val mpsVersion: String by rootProject val modelixCoreVersion: String by rootProject // ensure that the MPS directory name is correct val mpsDir = buildDir.resolve(\"mps\") val mps by configurations.creating val mpsDependencies by configurations.creating dependencies { mps(\"com.jetbrains:mps:$mpsVersion\") [...] } // you might already have this if you use Gradle to build your MPS languages val resolveMps by tasks.registering(Sync::class) { from(mps.resolve().map { zipTree(it) }) into(mpsDir) } // the specific addition of the meta-model generator Gradle helper metamodel { dependsOn(resolveMps) mpsHome = mpsDir // Source // ensure that your languages and solutions you want to generate are listed here modulesFrom(projectDir.resolve(\"languages\")) modulesFrom(projectDir.resolve(\"solutions\")) // further restrictions can be made to filter namespaces, languages or concepts includeNamespace(\"org.example\") includeLanguage(\"language.fq.name\") includeConcept(\"concept.fq.name\") // this example imports dependencies from the shared dependencies folder modulesFrom(projectDir.resolve(\"build/dependencies\")) // and specifically adds repository related concepts includeLanguage(\"org.modelix.model.repositoryconcepts\") // Target // Kotlin // the target project into which the kotlin API will be build (requires the project to exist in the gradle setup) kotlinDir = project(\":mps:metamodel\").projectDir.resolve(\"src/main/kotlin\") // an alternative to the line above // kotlinProject = project(\":my-kotlin-project\") // you can set the name of the registration helper class here registrationHelperName = \"org.example.MyLanguages\" // TypeScript // similar to the Kotlin API above, the typescript directory can be set to enable TS API generation typescriptDir = project(\":my-typescript-project\").projectDir.resolve(\"src/gen\") } [...] The org.modelix.model-api-gen.gradle Gradle helper provides an additional target which will integrate into your build, so a simple re-build of your Gradle project should be sufficient. Alternatively, you can directly trigger the API generation via ./gradlew mps:metamodel:build Done. You can now use the generated Classes in your code Kotlin (or TypeScript) project in the mps/metamodel sub-project.","title":"How-To apply the Model API Generator using the Gradle Plugin","component":"modelix","version":"modelix-23.1","name":"usage-model-api-gen-gradle","url":"/modelix/latest/core/howto/usage-model-api-gen-gradle.html","titles":[]},"82":{"id":82,"text":"If you are interested in a more practical usage of what is presented here, check out the samples project To run the model-server with default configuration run: [modelix.core] $ ./gradlew model-server:run To specify a different jdbc configuration, you can add the -jdbcconf arguement: [modelix.core] $ ./gradlew model-server:run --args='-jdbcconf path-to-my-database.properties' During development or to perform tests it is recommended to start the model-server with in-memory storage: [modelix.core] $ ./gradlew model-server:run --args='-inmemory'","title":"How-To start a local model-server","component":"modelix","version":"modelix-23.1","name":"usage-model-server","url":"/modelix/latest/core/howto/usage-model-server.html","titles":[]},"83":{"id":83,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The light-model-client is designed to connect to either an MPS instance or a Modelix model-server. It is implemented in Kotlin multi-platform so that it can also be run in the browser. While the alternative \"advanced model client\" provides more features and should be used for long-running processes, the light-model-client is optimized for a lower resource consumption and short living processes like in a browser tab. The server is responsible for resolving conflicts and to keep the client side model in a valid state.","title":"Accessing models: The light-model-client","component":"modelix","version":"modelix-23.1","name":"component-light-model-client","url":"/modelix/latest/core/reference/component-light-model-client.html","titles":[]},"84":{"id":84,"text":"Repository | buildfile | Artifacts: Nexus GitHub Packages In order to export a meta-model (i.e. the structure aspect of a langauge) from MPS, modelix uses the MPS solution metamodel-export. This solution maps the structure of a language to corresponding serializable data classes of the model-api (e.g. LanguageData and ConcepData). Further, the metamodel-expor provides a command line interface to export these data classes to a JSON file from outside of MPS. Unfold to see an exemplary JSON file which is generated from the export { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca\", \"name\": \"University.Schedule\", \"concepts\": [ { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560\", \"name\": \"Lecture\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188010563\", \"name\": \"description\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188010565\", \"name\": \"maxParticipants\", \"type\": \"INT\" } ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188058355\", \"name\": \"schedule\", \"type\": \"University.Schedule.Schedule\", \"optional\": false } ], \"references\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188058364\", \"name\": \"room\", \"type\": \"University.Schedule.Room\", \"optional\": false } ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\", \"jetbrains.mps.lang.core.INamedConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010568\", \"name\": \"Schedule\", \"abstract\": true, \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010568/4128798754188010578\", \"name\": \"at\", \"type\": \"University.Schedule.DateAndTime\", \"optional\": false } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010569\", \"name\": \"Recurring\", \"properties\": [ ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"University.Schedule.Schedule\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010570\", \"name\": \"DateAndTime\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010570/4128798754188010571\", \"name\": \"date\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010570/4128798754188010573\", \"name\": \"time\" } ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010580\", \"name\": \"Room\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010580/4128798754188010583\", \"name\": \"maxPlaces\", \"type\": \"INT\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010580/4128798754188010585\", \"name\": \"hasRemoteEquipment\", \"type\": \"BOOLEAN\" } ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\", \"jetbrains.mps.lang.core.INamedConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010588\", \"name\": \"Rooms\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010588/4128798754188010589\", \"name\": \"rooms\", \"type\": \"University.Schedule.Room\", \"multiple\": true } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188057192\", \"name\": \"Courses\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188057192/4128798754188057193\", \"name\": \"lectures\", \"type\": \"University.Schedule.Lecture\", \"multiple\": true } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188059567\", \"name\": \"OneOff\", \"properties\": [ ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"University.Schedule.Schedule\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449\", \"name\": \"Student\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449/1648392019017048450\", \"name\": \"name\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449/1648392019017048454\", \"name\": \"semester\", \"type\": \"INT\" } ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449/1648392019017048452\", \"name\": \"born\", \"type\": \"University.Schedule.DateAndTime\", \"optional\": false } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048457\", \"name\": \"Students\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048457/1648392019017048458\", \"name\": \"students\", \"type\": \"University.Schedule.Student\", \"multiple\": true } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048460\", \"name\": \"LectureAssignments\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048460/1648392019017048466\", \"name\": \"lectures\", \"type\": \"University.Schedule.Assignment\", \"multiple\": true } ], \"references\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048460/1648392019017048461\", \"name\": \"student\", \"type\": \"University.Schedule.Student\", \"optional\": false } ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048463\", \"name\": \"Assignment\", \"properties\": [ ], \"children\": [ ], \"references\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048463/1648392019017048464\", \"name\": \"lecture\", \"type\": \"University.Schedule.Lecture\", \"optional\": false } ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] } ] } The metamodel-export is primarily intended to be used by the Model API Generator.","title":"MPS solution for metamodel-export","component":"modelix","version":"modelix-23.1","name":"component-metamodel-export","url":"/modelix/latest/core/reference/component-metamodel-export.html","titles":[{"text":"Overview","hash":"_overview","id":1}]},"85":{"id":85,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The model-api-gen.gradle.plugin is a Gradle plugin that wraps the functionality of the MPS solution for metamodel-export and Model API Generator. It provides an additional Gradle task which will apply a 2-staged process: MPS metamodel export to JSON (optional) In the first step the metamodel-export MPS solution is executed by the plugin to export the MPS structure aspect (i.e. the metamodel) to JSON files. In case your metamodel comes from another source this is an external entry point: As long as you can export your metamodel to JSON, you can use model-api-gen. To use JSON from another source or JSON files from a previous export, you can skip this step by simply specifying a directory, which contains the JSON files, in the configuration of the gradle task: metamodel { //... jsonDir = File(\"path/to/json/dir\") } As a result, all MPS-specific configuration settings will be ignored and the specified directory will be used for the next step. JSON to model API generation In the second step, the previously generated JSON files containing the metamodel are being used to generate the typed API using the Kotlin/TypeScript generator in model-api-gen. Inside of the metamodel block the following settings can be configured. setting type description javaExecutable File Location of the Java executable moduleFolders ArrayList Directories, that contain the language modules mpsHome File Home directory of MPS mpsHeapSize String MPS heap size specified as a String, e.g. \"2g\" for 2GB includedLanguages Set Set of languages, for which an API should be generated includedLanguageNamespaces Set Set of language namespaces, for which an API should be generated includedConcepts Set Set of concepts, for which an API should be generated includedModules Set Set of modules, for which an API should be generated jsonDir File Directory containing JSON files, which represent a metamodel. Will be used as input for the generation. Specifying this will skip the export from MPS and all MPS-specific configurations will be ignored. kotlinDir File Target Kotlin directory of the generator kotlinProject Project Target Kotlin project of the generator typescriptDir File Target TypeScript directory of the generator registrationHelperName String Name of the registration helper taskDependencies List List of tasks, on which the generation process depends method parameter type description names Action Block used to set a name configuration. dependsOn vararg Any Adds a dependency to taskDependencies javaExecutable File Sets the java executable. modulesFrom File Adds a directory to `moduleFolders includeLanguage String Adds the language specified by this fully qualified name to ìncludedLanguages includeNamespace String Adds the namespace specified by this languagePrefix to includedNamespaces includeConcept String Adds the concept specified by this fully qualified name to includedConcepts exportModules String Adds the module specified by this name prefix to includedModules Inside the metamodel block a names block can be declared to configure prefix, suffix, and baseNameConversion of generated Kotlin/TypeScript elements. This is achieved by setting the attributes of the NameConfig object accordingly. attribute default prefix default suffix languageClass \"L_\" \"\" typedNode \"N_\" \"\" typedNodeImpl` \"_N_TypedImpl_\" \"\" untypedConcept \"_C_UntypedImpl_\" \"\" typedConcept` \"C_\" \"\" typedConceptImpl` \"_C_TypedImpl_\" \"\" metamodel { mpsHome = file(\"path/to/mps/home\") mpsHeapSize = \"2g\" kotlinDir = file(\"build/kotlin_gen\") registrationHelperName = \"org.modelix.Languages\" typescriptDir = file(\"build/ts_gen\") includeNamespace(\"jetbrains.mps.baseLanguage\") exportModules(\"jetbrains.mps.runtime\") names { languageClass.prefix = \"MyLanguagePrefix\" languageClass.suffix = \"MyLanguageSuffix\" } }","title":"Gradle Plugin for the Model API Generator","component":"modelix","version":"modelix-23.1","name":"component-model-api-gen-gradle","url":"/modelix/latest/core/reference/component-model-api-gen-gradle.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Configuration settings","hash":"_configuration_settings","id":2},{"text":"Configurable Attributes","hash":"_configurable_attributes","id":3},{"text":"Configuration Methods","hash":"_configuration_methods","id":4},{"text":"Name Configuration","hash":"_name_configuration","id":5},{"text":"Default Values","hash":"_default_values","id":6},{"text":"Example","hash":"_example","id":7}]},"86":{"id":86,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The Model API Generator (model-api-gen) is a Kotlin component which generates a domain-specific model API. Currently, the generator supports either Kotlin and TypeScipt as target languages. As a source for the generated API, model-api-gen consumes a given metamodel specified by JSON files. The Model API Generator is mainly used in the corresponding gradle plugin model-api-gen-gradle.","title":"Model API Generator","component":"modelix","version":"modelix-23.1","name":"component-model-api-gen","url":"/modelix/latest/core/reference/component-model-api-gen.html","titles":[]},"87":{"id":87,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The model-server component provides a storage for models. Bringing models to the cloud requires an alternative to the file system (and git) based storage of models. Modelix implements a data structure that allows replication between all MPS instances connected to the same model-server. It is very similar to the git storage format, but instead of files it stores nodes in its key-value data store. To support real-time collaboration, in addition to the snapshot of a version, the model-server also stores the operations that were applied on the previous version to produce the new version. Conflicts between concurrent modification are resolved using operational transformation (OT). The usually hard part of OT is to guarantee convergence, meaning that all clients end up with the same result independent of the order in which they receive changes. This problem becomes trivial, because versions are identified by a hash over all the content. Any divergence will result in a different hash which can easily be detected. The remaining problem is what to do when a divergence is detected. From git we know that switching between versions is fast, because it only has to apply the difference between these versions. The same is true here: Fixing a divergence is as easy as switching to the correct version. If a client does not have any local changes it does not even need to apply the change operations itself - it can just switch to the new version. So in the rare case of a divergence fixing it is nothing special and is an operation that happens all the time. While this component is independent of MPS, it is possible to replicates the data of the MPS internal module repository into a running model-server. This can be achieved using the modelix MPS plugin: One can connect an MPS instances to a model-server, upload the current module repository, and keep it synchronized. This can also be a local MPS instance without a web editor - both options are supported at the same time. To reformat and add license header to all files run: ../gradlew spotlessApply Valid keys are keys starting with the PROTECTED_PREFIX ($$$). For details please refer to the OpenAPI documentation under doc/model-server.json.","title":"A Cloud Model Storage/Repository: The modelix model-server","component":"modelix","version":"modelix-23.1","name":"component-model-server","url":"/modelix/latest/core/reference/component-model-server.html","titles":[{"text":"Real-Time Collaboration and Operational Transformation","hash":"_real_time_collaboration_and_operational_transformation","id":1},{"text":"MPS and the model-server","hash":"_mps_and_the_model_server","id":2},{"text":"Development","hash":"_development","id":3},{"text":"APIs","hash":"_apis","id":4}]},"88":{"id":88,"text":"TODO","title":"modelix.core Tutorials","component":"modelix","version":"modelix-23.1","name":"index","url":"/modelix/latest/core/tutorial/index.html","titles":[]},"89":{"id":89,"text":"The modelix.platform repository contains the Gradle platforms for modelix. It provides all modelix component versions for each modelix platform release. The modelix project uses Gradle to build the individual components. Simply call the following in the top level folder of a repository: ./gradlew build # mac/linux or if you are on windows use: gradlew.bat build # windows At the moment most modelix artifacts are stored on the itemis nexus with no access restriction. As a consequence, when you build modelix or use modelix components via Gradle there is no repository access setup required. This is optional when you want to obtain modelix artifacts from GitHub packages rather than the itemis nexus server. Most packages are also published to GitHub packages for which a GithHub account and credentials are required. To access GitHub packaged you need to specify your credentials. First of all you will need to generate a personal access token with access to GitHub Packages. The project assumes that your username is available as the variable gpr.user and the token as gpr.key. The easiest way to configure the credentials is copy the example below, paste it into the gradle.properties file in the repository and replace the values with your credentials: gpr.user= gpr.key= Gradle also supports other locations for specifying these properties.","title":"Welcome to modelix.platform!","component":"modelix","version":"modelix-23.1","name":"index","url":"/modelix/latest/platform/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Getting Started","hash":"_getting_started","id":2},{"text":"Build components using Gradle","hash":"_build_components_using_gradle","id":3},{"text":"Build from console","hash":"_build_from_console","id":4},{"text":"modelix Artifact Publication","hash":"_modelix_artifact_publication","id":5},{"text":"How to set up GitHub packages authentication","hash":"_how_to_set_up_github_packages_authentication","id":6}]},"90":{"id":90,"text":"The modelix platform is a Gradle platform built using Gradle’s Java Platform Plugin. It aggregates the versions of individual modelix components. Furthermore, the platform simplifies versioning by mapping the modelix release version to the versions of the individual components. These are curated for each release so that compatibility between them is ensured.","title":"The modelix Gradle platform","component":"modelix","version":"modelix-23.1","name":"index","url":"/modelix/latest/platform/explanation/index.html","titles":[]},"91":{"id":91,"text":"The modelix platform provides component versions. To enforce these versions in your project’s build you can add the platform as an enforcedPlatform. We make the following assumptions: the string variable mps_version contains the mps version that is used in your project, e.g. 2021-1 the string variable modelix_platform_version contains the version of the modelix platform you want to use, e. g. 23.1.0 To enforce the versions provided by the platform in your Gradle build, you can use enforcedPlatform inside of a dependencies block like this: dependencies { implementation(enforcedPlatform(\"org.modelix:platform-mps-$mps_version:$modelix_platform_version\")) } Dependencies to modelix components can then be declared without a version number (as the version declared in the platform will be used). For example: dependencies { implementation(enforcedPlatform(\"org.modelix:platform-mps-$mps_version:$modelix_platform_version\")) implementation(\"org.modelix:model-client\") } If you want to handle dependencies to MPS version-specific modelix components yourself, you can use org.modelix:platform instead, which does not contain these dependencies. However, sometimes it might be necessary to pick a specific version of a single component, e.g. when one wants to test new features. Overriding versions may lead to incompatibilities between individual modelix components. In order to override versions inside the platform during dependency resolution, platform can be used instead of enforcedPlatform: dependencies { implementation(platform(\"org.modelix:platform-mps-$mps_version:$modelix_platform_version\")) implementation(\"org.modelix:model-client:2.4.0\") } If you want to learn more about the difference between platform and enforcedPlatform, you can check out this section in the Gradle documentation.","title":"How-to use the platform to streamline modelix dependencies","component":"modelix","version":"modelix-23.1","name":"usage-platform","url":"/modelix/latest/platform/howto/usage-platform.html","titles":[{"text":"General Usage","hash":"_general_usage","id":1},{"text":"Overriding versions","hash":"_overriding_versions","id":2}]},"92":{"id":92,"text":"TODO","title":"modelix.platform Tutorials","component":"modelix","version":"modelix-23.1","name":"index","url":"/modelix/latest/platform/tutorial/index.html","titles":[]},"93":{"id":93,"text":"We develop an open source platform for models on the web to reduce distributed modeling friction for domain experts We apply established web and cloud technologies to create a modeling tool in the browser which integrates with existing language workbenches whilst exploring new approaches The modelix project develops an open source platform for (meta-)models on the web. We are native to the web and the cloud, inspired by this whitepaper[1]. On the path to this final idea, we currently develop multiple interoperable components that implement parts of our vision. Consequently, some parts are very stable and already in productive use while others are in a more experimental and explorative state. To gain an overview over components, head over to the Components of modelix reference. Follow the 'Next' button in the bottom right to find out more details on our current roadmap, or dive directly into our sample project to get started! Otherwise, the How-To section serves as an implicit FAQ which might give answers to some of your immediate questions. This is the full modelix documentation for modelix version main. You can choose different versions at the bottom left of this page. This documentation brings together the documentation from all individual modelix components. If you are only intersted in one specific component, you can select it in the menu at the bottom left. We follow the systematic Diátaxis[2] approach in this documentation. As a result, we separate the documentation in the following four mayor categories: Tutorials (learning-oriented) Lessons that take the reader by the hand through a series of steps to complete a project of some kind. New users start here. How-To Guides Reference Explanation This documentation is built using the Antora framework. All individual software components contain their own documentation within their own repository but are aggregated here. The playbook for aggregation and central source source for this documentation can be found in the modelix/modelix.doc repository. If you find any bugs or errors in our documentation please add pull requests or issues in the corresponding repository. In this documentation we use various acronyms and domain-specific wording. Head over to the Glossary if you are unsure about what exactly we mean when talking about a model, meta-model, MPS, or others. To contact us join our #modelix Slack channel which is part of the JetBrains MPS workspace or write us an Email with your questions and feedback 📫. To report issues please use our issue tracker. 1. \"An open platform for systems and business engineering tools: collaborative modeling and analysis at scale\" http://voelter.de/data/pub/APlatformForSystemsAndBusinessModeling.pdf 2. \"A systematic framework for technical documentation authoring\", see this video for an in depth explanation of the motives of this framework","title":"Welcome to modelix!","component":"modelix","version":"main","name":"index","url":"/modelix/main/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"About this Documentation","hash":"_about_this_documentation","id":2},{"text":"Structure Framework","hash":"_structure_framework","id":3},{"text":"Technical Framework","hash":"_technical_framework","id":4},{"text":"Glossary","hash":"_glossary","id":5},{"text":"Contact","hash":"_contact","id":6}]},"94":{"id":94,"text":"The image above shows the components that modelix currently consists of. MPS is running in headless mode on the server with an HTTP server installed as a plugin. The browser connects to that server and receives the HTML and JavaScript code required for the interactive model editor. A second plugin connects to a model-server and replicates the data into MPS’ internal module repository. All MPS instances connected to that model server will stay synchronized. This can also be a local MPS instance without a web editor. Both options are supported at the same time. The next image gives an overview over the different docker images running in the kubernetes cluster. The model server uses an Apache Ignite cluster and just provides a REST API on top of it. A high load can be distributed over multiple instances. Running multiple MPS instances for scalability is possible, because the model has the same state on all instances. If you want to run MPS instances with different configurations (languages, plugins) or allow external instances to connect to the model server, a reverse proxy is used to forward the request to the correct instance. To access the web editor a user has to login in with a google account first. An OAuth proxy takes care of that and adds an HTTP header with the users e-mail address to the request. modelix provides an editor in the browser for the languages implemented in MPS. This can be an image based editor that renders the editor in MPS using the default editor definition or an HTML based editor that requires a separate editor definition in a language provided by modelix. Common to both approaches is that the user input (keyboard, mouse) is processed on the server and the update of the projection after a model change also happens on the server. Even in case of the HTML based editor the resulting HTML is computed on the server side. This removes the need to replicate the model into the browser, which would result in a bad performance in case of big models. Running MPS in the cloud requires an alternative to the file system for storing models. modelix implements a data structure that allows replication between all MPS instances connected to the same model server. It is very similar to the git storage format, but instead of files it stores nodes in its key-value data store. To support realtime collaboration, in addition to the snapshot of a version it also stores the operations that were applied on the previous version to produce the new version. Conflicts between concurrent modification are resolved using operational transformation (OT). The usually hard part of OT is to guarantee convergence, meaning that all clients end up with the same result indepent of the order in which they receive changes. This problem becomes trivial, because versions are identified by a hash over all the content. Any divergence will result in a different hash which can easily be detected. The remaining problem is what to do when a divergence is detected. From git we know that switching between versions is fast, because it only has to apply the difference between these versions. The same is true here. Fixing a divergence is as easy as switching to the correct version. If a client doesn’t have any local changes it doesn’t even need to apply the change operations itself. It can just switch to the new version. So in the rare case of a divergence fixing it is nothing special. It’s an operation that happens all the time.","title":"Architecture","component":"modelix","version":"main","name":"architecture","url":"/modelix/main/explanation/architecture.html","titles":[{"text":"An architectural overview of the modelix project","hash":"_an_architectural_overview_of_the_modelix_project","id":1},{"text":"Editor","hash":"_editor","id":2},{"text":"Model","hash":"_model","id":3}]},"95":{"id":95,"text":"This glossary is a lose collection of keywords used throughout the modelix documentation. MPS \"JetBrains MPS (Meta Programming System) is a language workbench developed by JetBrains. MPS is a tool to design domain-specific languages (DSL). It uses projectional editing which allows users to overcome the limits of language parsers, and build DSL editors, such as ones with tables and diagrams\" See https://www.jetbrains.com/mps/ for more details. — https://en.wikipedia.org/wiki/JetBrains_MPS","title":"Glossary","component":"modelix","version":"main","name":"glossary","url":"/modelix/main/explanation/glossary.html","titles":[]},"96":{"id":96,"text":"We develop an open source platform for models on the web to reduce modeling friction for domain experts We apply established web and cloud technologies to create a modeling tool in the browser which integrates with existing language workbenches whilst exploring new approaches","title":"Modelix Goals","component":"modelix","version":"main","name":"goals","url":"/modelix/main/explanation/goals.html","titles":[{"text":"Vison","hash":"_vison","id":1},{"text":"Mission","hash":"_mission","id":2},{"text":"What we provide","hash":"_what_we_provide","id":3}]},"97":{"id":97,"text":"\"Explanation is discussion that clarifies and illuminates a particular topic. Explanation is understanding-oriented.\" [1] 1. https://diataxis.fr/explanation/","title":"Explanation","component":"modelix","version":"main","name":"index","url":"/modelix/main/explanation/index.html","titles":[]},"98":{"id":98,"text":"TODO","title":"Frequently asked Questions","component":"modelix","version":"main","name":"faq","url":"/modelix/main/howto/faq.html","titles":[]},"99":{"id":99,"text":"\"How-to guides are directions that take the reader through the steps required to solve a real-world problem. How-to guides are goal-oriented.\" [1] 1. https://diataxis.fr/how-to-guides/","title":"How-To Guides","component":"modelix","version":"main","name":"index","url":"/modelix/main/howto/index.html","titles":[]},"100":{"id":100,"text":"The modelix project is developed open-source under the Apache-2.0 license. All components and software of the platform as well as issue tracking and project management are done in repositories in our GitHub organisation. Currently, we use GitHub actions to build, test, and publish the components. We deploy all relevant artifacts to the itemis Nexus server as well as GitHub Packages Issues are managed in our issue tracker over at https://issues.modelix.org. With many components being in various development stages - from stable to early and conceptual - they are released individually for each repository. Generally, we follow the Semantic versioning scheme for releases. However, anything based on JetBrains MPS (e.g. MPS plugins or extensions) are prefixed with the corresponding MPS major and minor version number followed by our own patch version number. For example, the org.modelix.mps-model-plugin version 2021.2.103 is the 103rd release which is compatible with MPS 2021.2.*. To make it easier for developers, the modelix platform is currently released twice a year as a single \"platform release\" which references compatible component versions. We aim to provide a Spring release R1 and an Autumn release R2. All development in-between is carried out as patches on the releases. This release cycle starts from 2023 with the first release on the MPS Community meetup in May: 2023.R1. To gain an overview over existing components, please refer to the list of components here We are currently in the process to further define our roadmap and core goals for each release. This roadmap will be closely aligned with the structure currently in the issue tracker. Once we have more dedicated information on this, we will publish it on our website and in this documentation.","title":"Development, Releases, and Roadmap","component":"modelix","version":"main","name":"roadmap","url":"/modelix/main/main/roadmap.html","titles":[{"text":"Development","hash":"_development","id":1},{"text":"Release Cycle","hash":"_release_cycle","id":2},{"text":"Roadmap","hash":"_roadmap","id":3}]},"101":{"id":101,"text":"This page represents a fallback page for open TODOs within the documentation. If you end up here please add an issue to modelix/modelix.docs and tell us where you found this link or consider supporting us by creating a corresponding pull request.","title":"TODO Fallback","component":"modelix","version":"main","name":"todo","url":"/modelix/main/main/todo.html","titles":[]},"102":{"id":102,"text":"Package Name Tech Docs Nexus GHP API Repo org.modelix model-api Kotlin 🔗 🔗 🔗 🔗 org.modelix metamodel-export MPS 🔗 🔗 🔗 🔗 org.modelix model-api-gen Kotlin 🔗 🔗 🔗 🔗 🔗 org.modelix model-api-gen-runtime Kotlin 🔗 🔗 🔗 🔗 org.modelix model-api-gen-gradle Gradle 🔗 🔗 🔗 🔗 🔗 --- org.modelix.model-api-gen.gradle.plugin Gradle 🔗 🔗 🔗 🔗 🔗 org.modelix incremental Kotlin 🔗 🔗 🔗 org.modelix model-server-lib MPS 🔗 🔗 🔗 🔗 org.modelix model-server-api Kotlin 🔗 🔗 🔗 🔗 org.modelix model-server Kotlin 🔗 🔗 🔗 🔗 🔗 org.modelix model-server-with-dependencies Kotlin 🔗 🔗 🔗 🔗 org.modelix model-client Kotlin 🔗 🔗 🔗 🔗 org.modelix light-model-client Kotlin 🔗 🔗 🔗 🔗 🔗 org.modelix model-download-gradle Gradle 🔗 🔗 --- org.modelix.mps.model-download Gradle 🔗 🔗 org.modelix.mps model-server-sync-plugin MPS 🔗 🔗 org.modelix.mps build-tools-lib Kotlin 🔗 🔗 🔗 org.modelix.mps build-tools-gradle Gradle 🔗 🔗 🔗 --- org.modelix.mps.build-tools Gradle 🔗 🔗 🔗 org.modelix.mps build-solution MPS 🔗 🔗 org.modelix.mps headless-runner MPS 🔗 🔗 org.modelix authorization Kotlin 🔗 🔗 🔗 org.modelix.mps web-editors-plugin MPS 🔗 🔗 ts-model-api TS 🔗 🔗 org.modelix workspace-client Kotlin 🔗 org.modelix workspace-manager Kotlin 🔗 org.modelix workspaces Kotlin 🔗 org.modelix instances-manager Kotlin 🔗 org.modelix gitui Kotlin 🔗 org.modelix keycloak-extensions Other 🔗 org.modelix ui-client Other 🔗 org.modelix ui-proxy Other 🔗 org.modelix ui-server Other 🔗 org.modelix modelix-samples MultiProject 🔗 🔗 org.modelix platform Gradle 🔗","title":"Table of modelix Components","component":"modelix","version":"main","name":"components-table","url":"/modelix/main/reference/components-table.html","titles":[]},"103":{"id":103,"text":"\"Reference guides are technical descriptions of the machinery and how to operate it. Reference material is information-oriented.\" [1] 1. https://diataxis.fr/reference/","title":"Reference","component":"modelix","version":"main","name":"index","url":"/modelix/main/reference/index.html","titles":[]},"104":{"id":104,"text":"The modelix platform is composed of multiple individual components which can be combined together to form a system bringing models to the web. Components are distributed across the following repositories: https://github.com/modelix/modelix.platform https://github.com/modelix/modelix.core https://github.com/modelix/modelix.mps-build-tools https://github.com/modelix/modelix https://github.com/modelix/incremental https://github.com/modelix/modelix.docs https://github.com/modelix/modelix.samples This page serves as an overview over all existing repositories, their components, and a short description. For more dense information about component, please navigate to the Table of modelix Components. The modelix.platform repository contains the Gradle platforms for modelix. It provides all modelix component versions for each modelix platform release. The modelix.core repository contains the core components of the modelix platform. These components include among others the model-server, model-api-gen, model-api-gen-gradle, and light-model-client. All components in this repository have no dependencies to JetBrains MPS. The modelix samples repository contains a couple of examples that show various aspects of the modelix platform. The primary focus of the samples is to show how you can apply modelix to bring languages and models defined in MPS into the web. On the basis of (meta-)models defined in MPS, external access is provided using JVM (Java/Kotlin) and web frameworks/tools. Everything shown in the samples is intended to enable you to come up with your own use-cases and architectures based on what is provided here. Not all features of modelix are shown here so this is not a complete demo of everything modelix can do.","title":"Components of modelix","component":"modelix","version":"main","name":"repositories-components","url":"/modelix/main/reference/repositories-components.html","titles":[{"text":"List of currently available components in modelix","hash":"_list_of_currently_available_components_in_modelix","id":1},{"text":"Modelix platform (modelix-23.1)","hash":"_modelix_platform_modelix_23_1","id":2},{"text":"Modelix core (modelix-23.1)","hash":"_modelix_core_modelix_23_1","id":3},{"text":"Modelix samples (modelix-23.1)","hash":"_modelix_samples_modelix_23_1","id":4}]},"105":{"id":105,"text":"The modelix project uses Gradle to build the individual components. Simply call the following in the top level folder of a repository: ./gradlew build # mac/linux or if you are on windows use: gradlew.bat build # windows At the moment most modelix artifacts are stored on the itemis nexus with no access restriction. As a consequence, when you build modelix or use modelix components via Gradle there is no repository access setup required. This is optional when you want to obtain modelix artifacts from GitHub packages rather than the itemis nexus server. Most packages are also published to GitHub packages for which a GithHub account and credentials are required. To access GitHub packaged you need to specify your credentials. First of all you will need to generate a personal access token with access to GitHub Packages. The project assumes that your username is available as the variable gpr.user and the token as gpr.key. The easiest way to configure the credentials is copy the example below, paste it into the gradle.properties file in the repository and replace the values with your credentials: gpr.user= gpr.key= Gradle also supports other locations for specifying these properties.","title":"Build components using Gradle","component":"modelix","version":"main","name":"build-component","url":"/modelix/main/tutorial/build-component.html","titles":[{"text":"Build from console","hash":"_build_from_console","id":1},{"text":"modelix Artifact Publication","hash":"_modelix_artifact_publication","id":2},{"text":"How to set up GitHub packages authentication","hash":"_how_to_set_up_github_packages_authentication","id":3}]},"106":{"id":106,"text":"\"Tutorials are lessons that take the reader by the hand through a series of steps to complete a project of some kind. Tutorials are learning-oriented.\" [1] 1. https://diataxis.fr/tutorials/","title":"Tutorials","component":"modelix","version":"main","name":"index","url":"/modelix/main/tutorial/index.html","titles":[]},"107":{"id":107,"text":"The examples are currently work in progress and are develop alongside the modelix platform development. The modelix samples repository contains a couple of examples that show various aspects of the modelix platform. The primary focus of the samples is to show how you can apply modelix to bring languages and models defined in MPS into the web. On the basis of (meta-)models defined in MPS, external access is provided using JVM (Java/Kotlin) and web frameworks/tools. Everything shown in the samples is intended to enable you to come up with your own use-cases and architectures based on what is provided here. Not all features of modelix are shown here so this is not a complete demo of everything modelix can do. None of the examples try to reuse editors defined in MPS. If your goal is to reuse MPS editors as is then modelix itself ships with a projector integration to achieve this. While all the examples use the same language defined in MPS they are not meant as one complete example but rather as individual parts. The purpose of the examples is to give inspiration of what is possible with modelix and make you think and envision your own use-cases. The modelix project uses Gradle to build the individual components. Simply call the following in the top level folder of a repository: ./gradlew build # mac/linux or if you are on windows use: gradlew.bat build # windows At the moment most modelix artifacts are stored on the itemis nexus with no access restriction. As a consequence, when you build modelix or use modelix components via Gradle there is no repository access setup required. This is optional when you want to obtain modelix artifacts from GitHub packages rather than the itemis nexus server. Most packages are also published to GitHub packages for which a GithHub account and credentials are required. To access GitHub packaged you need to specify your credentials. First of all you will need to generate a personal access token with access to GitHub Packages. The project assumes that your username is available as the variable gpr.user and the token as gpr.key. The easiest way to configure the credentials is copy the example below, paste it into the gradle.properties file in the repository and replace the values with your credentials: gpr.user= gpr.key= Gradle also supports other locations for specifying these properties. Once the initial build has completes you can dive in with the following: Read explanations in the Courses Domain: MPS Language and Model Read the use-cases these samples cover in the Use Cases of the Sample project Understand the repository in the Sample Repository Structure Inspect and edit the project with the code editor of your choice. The top folder in the repository provides IntelliJ configurations, the mps folder is a sub-project can be opened using MPS 2021.2.6, and the spa-dashboard-angular folder is a WebStorm project. Start sample components which realize use case samples:tutorial/startup-usecases.adoc","title":"Welcome to the modelix samples!","component":"modelix","version":"main","name":"index","url":"/modelix/main/samples/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Getting Started","hash":"_getting_started","id":2},{"text":"Build components using Gradle","hash":"_build_components_using_gradle","id":3},{"text":"Build from console","hash":"_build_from_console","id":4},{"text":"modelix Artifact Publication","hash":"_modelix_artifact_publication","id":5},{"text":"How to set up GitHub packages authentication","hash":"_how_to_set_up_github_packages_authentication","id":6},{"text":"Entry Points","hash":"_entry_points","id":7}]},"108":{"id":108,"text":"","title":"Courses Domain: MPS Language and Model","component":"modelix","version":"main","name":"courses-domain","url":"/modelix/main/samples/explanation/courses-domain.html","titles":[]},"109":{"id":109,"text":"The repository of the modelix samples is a single gradle project to make building everything at once easy. The examples are organized by the technology they use into the various sub-folders: Components/Tech Description Status Folder MPS + cloud-plugin MPS language definition that is used by all examples. The MPS language structure is used to generate a Java API consumed by all examples. ✅ mps MPS, metamodel-generator Generated Kotlin API from the MPS language. ✅ mps/metamodel OpenAPI A hand-crafted OpenAPI specification that defines domain-specific REST endpoints which expose the model contents. ✅ openapi model-server + Quarkus An implementation of the OpenAPI that exposes the model contents REST. Obtains model data from a running model-server. ✅ rest-api-model-server ligh-model-server+ ModelQL + Ktor An implementation of the OpenAPI that exposes the model contents REST. Obtains model data from a running the light-model-server MPS plugin. ✅ rest-api-model-ql Angular via REST A single page app that realizes a read-only dashboard. Can connect to either of the OpenAPI implementations. ✅ spa-dashboard-angular Each component documentation with component specific content.","title":"Sample Repository Structure","component":"modelix","version":"main","name":"structure","url":"/modelix/main/samples/explanation/structure.html","titles":[]},"110":{"id":110,"text":"The imaginary domain use-case represents a dashboard like view on model content. This use-case envisions a scenario where an independent client (outside of MPS) wants to consume the content of models defined in MPS, thus requiring read only access. There are two different variations of this use-case: Use Case 1a: Dashboard view next to Room In this variation, we envision a display next to each room that shows the upcoming lectures in that room. A low power display such as an low power e-ink with showing a simple website via wifi would be sufficient for this scenario. Use Case 1b: Dashboard View in the Main Hall In this variation, we envision a display in the main hall shows the full schedule of all the lectures of the current day. A large display would be used for this scenario, showing a website via wifi which contains the complete schedule. In both variations, the clients do not need to edit these models and are not capable to run a full MPS instance to show the model content. While the e-ink display does not require automatic updates (the display simply refreshes periodically every 15 minutes), the display in the main hall will require automatic updates (having more power and being a central display it would want to show the newest information at all times). The dashboard component, an angular app that serves the content of a model, implements such a simple single page application (SPA) for this use-case.","title":"Use-Case 1: Dashboard","component":"modelix","version":"main","name":"usecase-1","url":"/modelix/main/samples/explanation/usecase-1.html","titles":[]},"111":{"id":111,"text":"","title":"Use-Case 2: Manual Schedule Creation","component":"modelix","version":"main","name":"usecase-2","url":"/modelix/main/samples/explanation/usecase-2.html","titles":[]},"112":{"id":112,"text":"Given the courses domain and its meta-model explained here, the samples project covers two use-cases: Use-Case 1: Dashboard Use-Case 2: Manual Schedule Creation To illustrate how the different use-cases and component architecture relate, this section provides a short tabular description. Use Case Variant Backend MPS Backend model-server Use Case 1: Dashboard view 1a. light-model-server-client + rest-api-model-ql light-model-server-client + rest-api-model-ql 1b. json-bulk-model-access + rest-api-json-bulk ❌ Use Case 2: Real-time collaboration 🏗️ 🏗️","title":"Use Cases of the Sample project","component":"modelix","version":"main","name":"usecases","url":"/modelix/main/samples/explanation/usecases.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Use-Case Architecture Mapping","hash":"_use_case_architecture_mapping","id":2}]},"113":{"id":113,"text":"This samples implementations allow to run different use-cases in different setups - thus showing the flexibility of the modelix platform. Depending on the chosen use-case, only a subset of the components in this repository are used. The full architecture includes components used for multiple use-cases. One does not need all components to realize individual use-cases. In the following a short overview is given on each component. The meta-model (language) of the courses domain and a model (soulution) with sample data in JetBrains MPS on which everything in this sample is based. ▶️ For more details, see the Language section in the MPS component documentation An API based on the meta-model generated with the metamodel-generator component from modelix. ▶️ For more details, see the 'Generated API' section in the MPS component documentation In this example project, an extra domain-specific API layer is added which is defined in the OpenAPI specification[1]. This layer is meant educational as no noteworthy abstractions from the language itself happen in this definition. It intends to show how one introduces a clearly defined domain-specific abstraction decoupling the language engineering (meta-modeling) and the web development. We provide two backends (i.e. implementations of the API layer): The API via modelQL and API via model-server components. ▶️ For more details, see the OpenAPI component documentation. This project provides two implementations of the openapi domain abstraction. MPS as a source This backend provides access to the model by obtaining the model knowledge directly from a running MPS instance. It is implemented using ktor and connects to a model-client plugin running inside of MPS. This component can only provide read and write access. ▶️ For more details, see the API via modelQL for details. model-server as a source This backend provides access to the model by connecting to a running model-server. It is implemented using Quarkus and can provide read access to the underlying model. Additionally, a websocket for push notifications about ongoing model changes is provided. This is realized using websockets exposed by the model-server. ▶️ For more details, also see the API via model-server component for details. The dashboard provides access to model knowledge through a browser. As it is conforming to the OpenAPI specification, the dashboard is able to obtain the model content from both backend implementations. However, the dashboard is consequently limited by the chosen backend. This components requires running any of the available OpenAPI implementations to obtain model knowledge from. ▶️ For more details, also see the Dashboard for details. ⚠️ TBD ⚠️ TBD 1. See https://www.openapis.org/ for details on how OpenAPI works.","title":"System architecture and components in this repository","component":"modelix","version":"main","name":"architecture","url":"/modelix/main/samples/reference/architecture.html","titles":[{"text":"Full system architecture","hash":"_full_system_architecture","id":1},{"text":"The MPS Language","hash":"_the_mps_language","id":2},{"text":"Generated model API (domain API","hash":"_generated_model_api_domain_api","id":3},{"text":"Domain-specific OpenAPI","hash":"_domain_specific_openapi","id":4},{"text":"OpenAPI implementation","hash":"_openapi_implementation","id":5},{"text":"Single-page application (SPA) Dashboard","hash":"_single_page_application_spa_dashboard","id":6},{"text":"Real-time' collaboration web application","hash":"_real_time_collaboration_web_application","id":7},{"text":"Deploying to Docker / Kubernetes","hash":"_deploying_to_docker_kubernetes","id":8}]},"114":{"id":114,"text":"Figure 1. The SPA Dashboard Figure 2. View on a single Lecture in the Dashboard This component provides a single page application which accesses an implementation of the sample OpenAPI specification. The idea here is to illustrate a read only use-case where a system/service outside of MPS wants to consume the content of models previously defined in MPS. This dashboard is a single-page app showing content obtained from the intermediate REST APIs. A user cannot edit these models from the browser. It does not matter whether MPS is used to store the model information (e.g. by running an MPS instance in the cloud), or alternatively the modelix model-server is used. You can build this subproject individually from the parent folder via via Gradle: ./gradlew spa-dashboard-angular:build To run this application you will need a component which provides an API implementation conforming to the OpenAPI spec. Thus, you need to start one of the available OpenAPI implementations in this project: Either start the rest-api-model-ql implementation, or alternatively you can start the rest-api-model-server implementation. Check the documentation of the corresponding project parts on how to start them. Make sure you have the correct ports defined in the API URLs. This app expects 8090 by default. Next run this single page application via: ./gradlew spa-dashboard-angular:npmRun You can then go to http://localhost:4200 to see a dashboard with the courses model content.","title":"Single page application: An Angular based dashboard","component":"modelix","version":"main","name":"dashboard","url":"/modelix/main/samples/reference/dashboard.html","titles":[{"text":"Building & Running","hash":"_building_running","id":1},{"text":"1. Build spa-dashboard-angular","hash":"_1_build_spa_dashboard_angular","id":2},{"text":"2. Start an OpenAPI implementation","hash":"_2_start_an_openapi_implementation","id":3},{"text":"3. Run the angular app","hash":"_3_run_the_angular_app","id":4}]},"115":{"id":115,"text":"The language used in all examples is the same. The language itself is fairly small: It describes a very simplified lecture schedule. The language intentionally does not use expressions, creating editors for expressions by hand is very cumbersome and at the time where these samples were created modelix has no support for generating these editors for you. The main concepts of the language are: Room: where lecture are held. Each room has a maximum capacity of students, a name and some additional properties. Lecture: Have a name, some description and reference a room where they are held. And also have a schedule which determines when they are held and if they repeat through the whole semester or are a one time lecture. Student: A student with a name and birthday. Assignment: Lecture assignments for a single student. Some concepts are contained a root node like a Rooms container to make structuring the editors in MPS easier: classDiagram class Rooms { > } class Courses { > } class Students { > } class LectureAssignments { > } Rooms *-- Room : 0..n Courses *-- Lecture: 0..n Lecture .. Room: 1 Lecture *-- Schedule: 1 OneOff (iNode) rooms.children.rooms.forEach { it.properties.name } The code generator has exported the language definition, and we can use to write type safe code that works with the models. For properties and children we now have attributes in the generated classes and if somebody renames a property or child-role the compiler will tell us. Of course the MPSLanguageRegistry.getInstance would throw an exception if our iNode instance isn’t a Rooms instance. The generate class for a Room concept: concept Room extends BaseConcept implements INamedConcept instance can be root: false alias: short description: properties: maxPlaces : integer hasRemoteEquipment : boolean children: > references: > Will look like this: java package University.Schedule.structure; /*Generated by MPS */ import jetbrains.mps.lang.core.structure.BaseConcept; import jetbrains.mps.lang.core.structure.INamedConcept; import org.modelix.mps.apigen.runtime.INodeHolder; import org.jetbrains.annotations.NotNull; import org.modelix.model.api.INode; import org.jetbrains.annotations.Nullable; /** * Generated for http://127.0.0.1:63320/node?ref=r%3Adfa26643-4653-44bc-9dfe-5a6581bcd381%28University.Schedule.structure%29%2F4128798754188010580 */ public class Room extends BaseConcept implements INamedConcept { public class Properties extends BaseConcept.Properties implements INodeHolder, INamedConcept.Properties { @NotNull @Override public INode getINode() { return Room.this.getINode(); } @Nullable public Integer getMaxPlaces() { String propertyValue = getINode().getPropertyValue(\"maxPlaces\"); if (propertyValue != null && !(propertyValue.isEmpty())) { return Integer.parseInt(propertyValue); } return null; } @Nullable public Integer setMaxPlaces(Integer value) { if (value != null) { getINode().setPropertyValue(\"maxPlaces\", Integer.toString(value)); } else { getINode().setPropertyValue(\"maxPlaces\", null); } return value; } @Nullable public Boolean getHasRemoteEquipment() { String propertyValue = getINode().getPropertyValue(\"hasRemoteEquipment\"); if (propertyValue != null && !(propertyValue.isEmpty())) { return Boolean.parseBoolean(propertyValue); } return null; } @Nullable public Boolean setHasRemoteEquipment(@Nullable Boolean value) { if (value != null) { getINode().setPropertyValue(\"hasRemoteEquipment\", Boolean.toString(value)); } else { getINode().setPropertyValue(\"hasRemoteEquipment\", null); } return value; } } public class Children extends BaseConcept.Children implements INodeHolder, INamedConcept.Children { @NotNull @Override public INode getINode() { return Room.this.getINode(); } } public class References extends BaseConcept.References implements INodeHolder, INamedConcept.References { @NotNull @Override public INode getINode() { return Room.this.getINode(); } } private final Properties properties; private final Children children; private final References references; public Room(INode node) { super(node); this.properties = new Properties(); this.children = new Children(); this.references = new References(); } public Properties getProperties() { return this.properties; } public Children getChildren() { return this.children; } public References getReferences() { return this.references; } } At the moment it’s not possible to regenerate the API as part of the CI/gradle build, that’s why the generated sources are checked into the repository. This limitation is specific this example and is somehow caused by the MPS build failing to load the right languages during the build. Other projects are successfully using the api-gen code generator within their CI/gradle build. The limitation will get fixed in the future but for now the generated Java code is checked into the repository.","title":"Meta-model and the Generated Domain-Specific Model API","component":"modelix","version":"main","name":"meta-model-model-api","url":"/modelix/main/samples/reference/meta-model-model-api.html","titles":[{"text":"Language","hash":"_language","id":1},{"text":"Generated API","hash":"_generated_api","id":2},{"text":"Limitations","hash":"_limitations","id":3}]},"116":{"id":116,"text":"This 'component' is not a real component but rather a start helper - the model-server is started using the Gradle application plugin. To start the model-server, simply call the following in the repository root: ./gradlew model-server:run --args=\"-inmemory -dumpin courses.modelserver.dump\" As an alternative, you can also use Docker to run an in instance of model-server using the following command: docker run --rm -p 28101:28101 -d modelix/modelix-model:1.3.2 java -XX:MaxRAMPercentage=85 -Djdbc.url=$jdbc_url -cp \"model-server/build/libs/*\" org.modelix.model.server.Main -inmemory","title":"model-server start helper","component":"modelix","version":"main","name":"model-server","url":"/modelix/main/samples/reference/model-server.html","titles":[]},"117":{"id":117,"text":"This component of a single openapi.yml file which provides the OpenAPI specification of the REST API implementations serving as examples in this project. The described API provides an additional domain-specific abstraction of the courses domain[1]. The intention of this abstraction is to provide an example on how the use of modelix can be abstracted for eventual consumer apps, such as the Angular based dashboard. The development process thus can follow a API-first approach. Consequently, this openAPI provides a contract of the API behaviour for web teams and a language engineers. There are currently three implementations of this OpenAPI specification: API via model-server API via modelQL 1. This additional abstraction admittedly does not really provide fancy abstractions for this domain. Its purpose is rather educational for you to understand the option to add an additional layer separating web development from language engineering. You do not have to do this. Of course one does not necessarily need such an abstraction layer - any dashboard or web app can directly communicate with the API provided by the model-server together with the generated model API","title":"Intermediate OpenAPI of the Courses domain","component":"modelix","version":"main","name":"openapi","url":"/modelix/main/samples/reference/openapi.html","titles":[]},"118":{"id":118,"text":"This project provides a REST API that wraps the functionality of the light-model-server MPS plugin running inside an MPS instance. The provided REST API conforms to the API spec in the openapi.yaml. You can build this subproject individually from the parent folder via all gradle: ./gradlew rest-api-model-ql:build Before running the API provider you need to open the MPS project in the mps folder. The initial gradle build will automatically have set up MPS with the light-model-server plugin and expose the models via query language called ModelQL. This API is then accessed from this openAPI abstraction implementation to load the models. Once your MPS project is opened you can run: ./gradlew rest-api-model-ql:run Once you see a log message like: [DefaultDispatcher-worker-8] INFO ktor.application - Responding at http://0.0.0.0:8090 Your openAPI implementation is ready. Settings such as ports and hosts are defined in the application.conf file. For simple testing you can curl the data provided by the API for example: 🧾 Unfold for examples ```console $ curl -s -X GET \"http://localhost:8090/rooms\" -H \"accept: application/json\" | jq { \"rooms\": [ { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\", \"name\": \"somehjtinghekjrekjrhe\", \"maxPlaces\": 32232121, \"hasRemoteEquipment\": false }, { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\", \"name\": \"Schrödinger\", \"maxPlaces\": 420, \"hasRemoteEquipment\": true } ] } $ curl -s -X GET \"http://localhost:8090/rooms/mps-node%253Ar%253Ace161c54-ea76-40a6-a31d-9d7cd01febe2%2528University.Schedule.sandbox%2529%252F4128798754188058349\" -H \"accept: application/json\" | jq { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\", \"name\": \"Schrödinger\", \"maxPlaces\": 420, \"hasRemoteEquipment\": true } $ curl -s -X GET \"http://localhost:8090/rooms/mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\" -H \"accept: application/json\" | jq { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\", \"name\": \"somehjtinghekjrekjrhe\", \"maxPlaces\": 32232121, \"hasRemoteEquipment\": false } $ curl -s -X GET \"http://localhost:8090/rooms/trash\" -H \"accept: application/json\" | jq \"Can not load Room: null $ curl -s -X GET \"http://localhost:8090/lectures\" -H \"accept: application/json\" | jq curl -s -X GET \"http://localhost:8090/lectures\" -H \"accept: application/json\" | jq { \"lectures\": [ { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058353\", \"name\": \"Physics 101\", \"description\": \"You learn about stuff\", \"maxParticipants\": 42, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\" }, { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F1305729863392535677\", \"name\": \"Physics 102\", \"description\": \"You learn about stuff\", \"maxParticipants\": 42, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\" }, { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188060854\", \"name\": \"New Students Welcome\", \"description\": \"Hello everyone\", \"maxParticipants\": 69, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\" } ] } $ curl -s -X GET \"http://localhost:8090/lectures/mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058353\" -H \"accept: application/json\" | jq { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058353\", \"name\": \"Physics 101\", \"description\": \"You learn about stuff\", \"maxParticipants\": 42, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\" } $ curl -s -X GET \"http://localhost:8090/lectures/trash\" -H \"accept: application/json\" | jq \"Can not load Lecture: null\" Alternatively you can now start the Dashboard to consume this API endpoint.","title":"API via modelQL","component":"modelix","version":"main","name":"rest-api-model-ql","url":"/modelix/main/samples/reference/rest-api-model-ql.html","titles":[{"text":"Building","hash":"_building","id":1},{"text":"Usage","hash":"_usage","id":2}]},"119":{"id":119,"text":"This project provides a custom REST API implemented in Quarkus that wraps a model-server instance. The REST API abstracts the generic model-server API for providing the dashboard example with usable data. The provided REST API conforms to the API spec in the openapi.yaml. You can build this subproject individually from the parent folder via all gradle: ./gradlew rest-api-model-server:build Before starting the REST API, a model-server instance needs to be running. The example from the MPS folder has to be deployed on this instance in a repository call courses. Once these preconditions are met, the REST API can be launched with: ./gradlew rest-api-model-server:run For simple testing you can curl the data provided by the API for example: 🧾 Unfold for examples $ curl -s -X GET \"http://localhost:8090/rooms\" -H \"accept: application/json\" | jq { \"rooms\": [ { \"roomRef\": \"r:ce161c54-ea76-40a6-a31d-9d7cd01febe2(unused)/4128798754188058347\", \"name\": \"Einstein\", \"maxPlaces\": 42, \"hasRemoteEquipment\": true }, { \"roomRef\": \"r:ce161c54-ea76-40a6-a31d-9d7cd01febe2(unused)/4128798754188058349\", \"name\": \"Schrödinger\", \"maxPlaces\": 420, \"hasRemoteEquipment\": true } ] } Alternatively you can now start the Dashboard to consume this API. If you want to observe the updates sent on the web socket, you can use wscat to get some insights when updates are sent. wscat -c ws://127.0.0.1:8090/updates","title":"API via model-server","component":"modelix","version":"main","name":"rest-api-model-server","url":"/modelix/main/samples/reference/rest-api-model-server.html","titles":[{"text":"Building","hash":"_building","id":1},{"text":"Usage","hash":"_usage","id":2},{"text":"Introspecting the websocket communication","hash":"_introspecting_the_websocket_communication","id":3}]},"120":{"id":120,"text":"This Tutorial shows how to start up a system that implements Use-Case 1: Dashboard The samples provide a total of three architectural variation of this use case: Using the more complex rest-api-model-server backend and the model-server. Using the rest-api-model-ql backend and the light-model-server MPS plugin rest-api-model-server (legacy) + model-server All gradle commands assume you are in the top level folder of the samples repository. To start up the system as described in UC 1a, you first have to have built the entire project: ./gradlew Once done, you need to start all components involved, these are: MPS: Start MPS 2021.2.6 without any global plugins and open the project in the mps/project-mps-backend folder. This MPS project stores the model content using MPS persistence. The gradle build process will have downloaded all plugins needed to mps/project-mps-backend/build/dependencies and declare this folder as a global library. This includes the json-bulk-model-access and the light-model-client. API layer: The rest-api-json-bulk provides the models from the running MPS instance, simply run in a new terminal (it will be a blocking call): $ ./gradlew rest-api-json-bulk:run 🧾 You can expect output similar to this (unfold to see details) > Task :rest-api-json-bulk:run 2022-12-07 10:12:38.874 [DefaultDispatcher-worker-11] INFO ktor.application - Autoreload is disabled because the development mode is off. 2022-12-07 10:12:39.009 [DefaultDispatcher-worker-11] INFO ktor.application - Application started in 0.14 seconds. 2022-12-07 10:12:39.131 [DefaultDispatcher-worker-1] INFO ktor.application - Responding at http://0.0.0.0:8090 91% EXECUTING [2m 20s] > :rest-api-json-bulk:run Dashboard: The dashboard itself is a node application which can be run via in a new terminal (it will be a blocking call): $ ./gradlew spa-dashboard-angular:npmRun 🧾 You can expect output similar to this (unfold to see details) > Task :spa-dashboard-angular:npmRun > angular.io-example@0.0.0 ng > ng serve - Generating browser application bundles (phase: setup)... ✔ Browser application bundle generation complete. Initial Chunk Files | Names | Raw Size vendor.js | vendor | 2.47 MB | polyfills.js | polyfills | 318.03 kB | styles.css, styles.js | styles | 211.31 kB | main.js | main | 86.71 kB | runtime.js | runtime | 6.53 kB | | Initial Total | 3.08 MB Build at: 2022-12-07T09:18:02.345Z - Hash: 186b24edf20c1c4a - Time: 13776ms ** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ ** ✔ Compiled successfully. ✔ Browser application bundle generation complete. 5 unchanged chunks Build at: 2022-12-07T09:18:02.740Z - Hash: 186b24edf20c1c4a - Time: 324ms ✔ Compiled successfully. 95% EXECUTING [29s] > :spa-dashboard-angular:npmRun Explore the dashboard at http://localhost:4200/ Changes to the model in MPS will not automatically synchronize to the dashboard, you will have to manually reload the model.","title":"Run Use-Case 1 Implementation","component":"modelix","version":"main","name":"start-usecase-1-a","url":"/modelix/main/samples/tutorial/start-usecase-1-a.html","titles":[{"text":"How to start UC 1a","hash":"_how_to_start_uc_1a","id":1}]},"121":{"id":121,"text":"TODO using the rest-api-model-ql backend and the light-model-server MPS plugin All gradle commands assume you are in the top level folder of this repository. To start up the system as described in UC 1b, you first have to have build the entire project: ./gradlew Once done, you need to start all components involved, these are: modelix model-server: Model knowledge is supplied by the model-sever in this use case. To avoid complicated setups, we simply start the model-server in memory and load the model content from the included dump file, all using gradle: ./gradlew model-server:run --args=\"-inmemory -dumpin courses.modelserver.dump\" 🧾 You can expect output similar to this (unfold to see details) ./gradlew model-server:run --args=\"-inmemory -dumpin courses.modelserver.dump\" > Task :model-server:run 18:33:16,185 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml] 18:33:16,186 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy] 18:33:16,186 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [jar:file:/home/nkoester/.gradle/caches/modules-2/files-2.1/org.modelix/model-server-fatjar/1.3.2/1e6502c0e8282b1fe2c06824ad43f4d7270f20d7/model-server-fatjar-1.3.2.jar!/logback.xml] 18:33:16,194 |-INFO in ch.qos.logback.core.joran.spi.ConfigurationWatchList@f4168b8 - URL [jar:file:/home/nkoester/.gradle/caches/modules-2/files-2.1/org.modelix/model-server-fatjar/1.3.2/1e6502c0e8282b1fe2c06824ad43f4d7270f20d7/model-server-fatjar-1.3.2.jar!/logback.xml] is not of type file 18:33:16,269 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender] 18:33:16,270 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [console] 18:33:16,272 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property 18:33:16,282 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.modelix] to DEBUG 18:33:16,282 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [console] to Logger[org.modelix] 18:33:16,282 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to INFO 18:33:16,282 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [console] to Logger[ROOT] 18:33:16,282 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration. 18:33:16,283 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@7ff95560 - Registering current configuration as safe fallback point 18:33:16.295 [main] INFO org.modelix.model.server.Main - Max memory (bytes): 32178700288 18:33:16.295 [main] INFO org.modelix.model.server.Main - Max memory (bytes): 32178700288 18:33:16.295 [main] INFO org.modelix.model.server.Main - Server process started 18:33:16.295 [main] INFO org.modelix.model.server.Main - Server process started 18:33:16.295 [main] INFO org.modelix.model.server.Main - In memory: true 18:33:16.295 [main] INFO org.modelix.model.server.Main - In memory: true 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to secret file: /secrets/modelsecret/modelsecret.txt 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to secret file: /secrets/modelsecret/modelsecret.txt 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to JDBC configuration file: null 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to JDBC configuration file: null 18:33:16.296 [main] INFO org.modelix.model.server.Main - Schema initialization: false 18:33:16.296 [main] INFO org.modelix.model.server.Main - Schema initialization: false 18:33:16.296 [main] INFO org.modelix.model.server.Main - Set values: [] 18:33:16.296 [main] INFO org.modelix.model.server.Main - Set values: [] 18:33:16.296 [main] INFO org.modelix.model.server.Main - Port: 28101 18:33:16.296 [main] INFO org.modelix.model.server.Main - Port: 28101 Values loaded from /home/nkoester/git/modelix/modelix-sample/model-server/courses.modelserver.dump (73) 18:33:16.364 [main] INFO ktor.application - Autoreload is disabled because the development mode is off. 18:33:16.428 [main] INFO ktor.application - Application started in 0.088 seconds. 18:33:16.518 [DefaultDispatcher-worker-1] INFO ktor.application - Responding at http://0.0.0.0:28101 85% EXECUTING [7s] > :model-server:run API layer: The rest-api-model-server provides an abstraction of the model from the previously started model-server, simply run in a new terminal (it will be a blocking call): $ ./gradlew rest-api-model-server:quarkusDev 🧾 You can expect output similar to this (unfold to see details) $ ./gradlew rest-api-model-server:quarkusDev > Task :rest-api-model-server:quarkusDev Listening for transport dt_socket at address: 5005 Press [h] for more options>NG [8s] Tests paused Press [r] to resume testing, [h] for more options> Press [r] to resume testing, [o] Toggle test output, [h] for more options> __ ____ __ _____ ___ __ ____ ______ --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/ -/ /_/ / /_/ / __ |/ , _/ , 95% EXECUTING [16s] > :rest-api-model-server:quarkusDev Dashboard: The dashboard itself is a node application which can be run via in a new terminal (it will be a blocking call): $ ./gradlew spa-dashboard-angular:npmRun 🧾 You can expect output similar to this (unfold to see details) > Task :spa-dashboard-angular:npmRun > angular.io-example@0.0.0 ng > ng serve - Generating browser application bundles (phase: setup)... ✔ Browser application bundle generation complete. Initial Chunk Files | Names | Raw Size vendor.js | vendor | 2.47 MB | polyfills.js | polyfills | 318.03 kB | styles.css, styles.js | styles | 211.31 kB | main.js | main | 86.71 kB | runtime.js | runtime | 6.53 kB | | Initial Total | 3.08 MB Build at: 2022-12-07T09:18:02.345Z - Hash: 186b24edf20c1c4a - Time: 13776ms ** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ ** ✔ Compiled successfully. ✔ Browser application bundle generation complete. 5 unchanged chunks Build at: 2022-12-07T09:18:02.740Z - Hash: 186b24edf20c1c4a - Time: 324ms ✔ Compiled successfully. 95% EXECUTING [29s] > :spa-dashboard-angular:npmRun MPS: Start MPS 2021.2.6 without any global plugins and open the project in the mps/project-modelserver-backend folder. This MPS project does not store the model locally and instead obtains them from the model-server via the cloud-access plugin. The gradle build process will have downloaded all plugins needed to mps/project-modelserver-backend/build/dependencies and declare this folder as a global library. This includes the cloud-access plugin. Explore the dashboard at http://localhost:4200/ Changes to the model in MPS will automatically synchronize to the dashboard All gradle commands assume you are in the top level folder of this repository. To start up the system as described in UC 1c, you first have to have built the entire project: ./gradlew Once done, you need to start all components involved, these are: MPS: Start MPS 2021.2.6 without any global plugins and open the project in the mps/project-mps-backend folder. This MPS project stores the model content using MPS persistence. The gradle build process will have downloaded all plugins needed to mps/project-mps-backend/build/dependencies and declare this folder as a global library. This includes the light-model-server plugin used in this example UC. API layer: The light-model-server provides the models from the running MPS instance, simply run in a new terminal (it will be a blocking call): $ ./gradlew rest-api-model-ql:run 🧾 You can expect output similar to this (unfold to see details) > Task :rest-api-model-ql:run 2023-01-25 18:46:48.977 [main] INFO o.m.s.r.ModelServerLightWrapper - Connecting to light model-server at ws://localhost:48302/ws 2023-01-25 18:46:49.044 [main] INFO o.m.s.r.ModelServerLightWrapper - Connection successful 2023-01-25 18:46:49.070 [main] INFO ktor.application - Autoreload is disabled because the development mode is off. 2023-01-25 18:46:49.346 [main] INFO ktor.application - Application started in 0.286 seconds. 2023-01-25 18:46:49.455 [DefaultDispatcher-worker-4] INFO ktor.application - Responding at http://0.0.0.0:8090 2023-01-25 18:46:50.806 [eventLoopGroupProxy-4-1] INFO o.m.s.r.ModelServerLightWrapper - Resolving node trash 94% EXECUTING [26m 13s] > :rest-api-model-ql:run Dashboard: The dashboard itself is a node application which can be run via in a new terminal (it will be a blocking call): `$ ./gradlew spa-dashboard-angular:npmRun ` 🧾 You can expect output similar to this (unfold to see details) > Task :spa-dashboard-angular:npmRun > angular.io-example@0.0.0 ng > ng serve - Generating browser application bundles (phase: setup)... ✔ Browser application bundle generation complete. Initial Chunk Files | Names | Raw Size vendor.js | vendor | 2.47 MB | polyfills.js | polyfills | 318.03 kB | styles.css, styles.js | styles | 211.31 kB | main.js | main | 86.71 kB | runtime.js | runtime | 6.53 kB | | Initial Total | 3.08 MB Build at: 2022-12-07T09:18:02.345Z - Hash: 186b24edf20c1c4a - Time: 13776ms ** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ ** ✔ Compiled successfully. ✔ Browser application bundle generation complete. 5 unchanged chunks Build at: 2022-12-07T09:18:02.740Z - Hash: 186b24edf20c1c4a - Time: 324ms ✔ Compiled successfully. 95% EXECUTING [29s] > :spa-dashboard-angular:npmRun Explore the dashboard at http://localhost:4200/ Changes to the model in MPS will not automatically synchronize to the dashboard, you will have to manually reload the model.","title":"Run Use-Case 2a Implementation","component":"modelix","version":"main","name":"start-usecase-1-b","url":"/modelix/main/samples/tutorial/start-usecase-1-b.html","titles":[{"text":"How to start UC 1b","hash":"_how_to_start_uc_1b","id":1},{"text":"How to start UC 1c","hash":"_how_to_start_uc_1c","id":2}]},"122":{"id":122,"text":"TODO startup tutorial","title":"","component":"modelix","version":"main","name":"startup-usecases","url":"/modelix/main/samples/tutorial/startup-usecases.html","titles":[]},"123":{"id":123,"text":"The modelix.core repository contains the core components of the modelix platform. These components include among others the model-server, model-api-gen, model-api-gen-gradle, and light-model-client. All components in this repository have no dependencies to JetBrains MPS. The modelix project uses Gradle to build the individual components. Simply call the following in the top level folder of a repository: ./gradlew build # mac/linux or if you are on windows use: gradlew.bat build # windows At the moment most modelix artifacts are stored on the itemis nexus with no access restriction. As a consequence, when you build modelix or use modelix components via Gradle there is no repository access setup required. This is optional when you want to obtain modelix artifacts from GitHub packages rather than the itemis nexus server. Most packages are also published to GitHub packages for which a GithHub account and credentials are required. To access GitHub packaged you need to specify your credentials. First of all you will need to generate a personal access token with access to GitHub Packages. The project assumes that your username is available as the variable gpr.user and the token as gpr.key. The easiest way to configure the credentials is copy the example below, paste it into the gradle.properties file in the repository and replace the values with your credentials: gpr.user= gpr.key= Gradle also supports other locations for specifying these properties.","title":"Welcome to modelix.core!","component":"modelix","version":"main","name":"index","url":"/modelix/main/core/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Getting Started","hash":"_getting_started","id":2},{"text":"Build components using Gradle","hash":"_build_components_using_gradle","id":3},{"text":"Build from console","hash":"_build_from_console","id":4},{"text":"modelix Artifact Publication","hash":"_modelix_artifact_publication","id":5},{"text":"How to set up GitHub packages authentication","hash":"_how_to_set_up_github_packages_authentication","id":6}]},"124":{"id":124,"text":"TODO","title":"modelix.core Explanation","component":"modelix","version":"main","name":"index","url":"/modelix/main/core/explanation/index.html","titles":[]},"125":{"id":125,"text":"TODO","title":"modelix.core How-To","component":"modelix","version":"main","name":"index","url":"/modelix/main/core/howto/index.html","titles":[]},"126":{"id":126,"text":"If you are interested in a more practical usage of what is presented here, check out the samples project Creating an instance that loads the entire model from the server can be done like this: val client = LightModelClient.builder() .url(\"ws://localhost/json/v2/test-repo/ws\") // optional, by default it connects to the MPS plugin .build() You have to set a model query using changeQuery() to tell the server in what data you are interested in. Without a query the client will not receive any data. client.changeQuery(buildModelQuery { root { descendants { } } }) To read or write any nodes you have to start a read/write transaction by using runRead {}/runWrite {}. An exception is thrown when you try to access a node outside a transaction. val rootNode = client.waitForRootNode()!! client.runRead { val modules = rootNode.getChildren(\"modules\") // ... } If you try to access a node that is not included in your model query an exception is thrown. You can use INode.isLoaded() to check if a node was loaded on the client to prevent this exception. You can also filter a list of nodes like this: node.getChildren(\"modules\").filterLoaded(), to iterate only over the nodes that are included in your query.","title":"How-To use the light-model-client","component":"modelix","version":"main","name":"usage-light-model-client","url":"/modelix/main/core/howto/usage-light-model-client.html","titles":[]},"127":{"id":127,"text":"If you are interested in a more practical usage of what is presented here, check out the samples project To apply model-api-gen to an existing JetBrains MPS language, it is necessary to build the project via Gradle. This How-To assumes a folder structure as follows . ├── mps │ ├── build │ ├── metamodel │ │ └── [kotlin gradle sub-project] │ │ │ ├── languages │ │ └── [your MPS languages] │ └── solutions │ └── [your MPS solutions] │ ├── settings.gradle.kts ├── gradle.properties ├── gradle.properties ├── build.gradle.kts └── [...] Once you have your Gradle setup done, add the following lines the respective files. gradle.properties file: modelixCoreVersion=1.4.10 mpsVersion=2021.3.2 [...] The versions listed here are not the latest versions, refer to the repositories or use our latest release. settings.gradle.kts file: pluginManagement { val modelixCoreVersion: String by settings plugins { // the gradle plugin that provides easy access to the meta-model generator id(\"org.modelix.model-api-gen.gradle\") version modelixCoreVersion [...] } repositories { maven { url = uri(\"https://artifacts.itemis.cloud/repository/maven-mps/\") } [...] } } [...] build.gradle.kts file: plugins { id(\"org.modelix.model-api-gen\") } val mpsVersion: String by rootProject val modelixCoreVersion: String by rootProject // ensure that the MPS directory name is correct val mpsDir = buildDir.resolve(\"mps\") val mps by configurations.creating val mpsDependencies by configurations.creating dependencies { mps(\"com.jetbrains:mps:$mpsVersion\") [...] } // you might already have this if you use Gradle to build your MPS languages val resolveMps by tasks.registering(Sync::class) { from(mps.resolve().map { zipTree(it) }) into(mpsDir) } // the specific addition of the meta-model generator Gradle helper metamodel { dependsOn(resolveMps) mpsHome = mpsDir // Source // ensure that your languages and solutions you want to generate are listed here modulesFrom(projectDir.resolve(\"languages\")) modulesFrom(projectDir.resolve(\"solutions\")) // further restrictions can be made to filter namespaces, languages or concepts includeNamespace(\"org.example\") includeLanguage(\"language.fq.name\") includeConcept(\"concept.fq.name\") // this example imports dependencies from the shared dependencies folder modulesFrom(projectDir.resolve(\"build/dependencies\")) // and specifically adds repository related concepts includeLanguage(\"org.modelix.model.repositoryconcepts\") // Target // Kotlin // the target project into which the kotlin API will be build (requires the project to exist in the gradle setup) kotlinDir = project(\":mps:metamodel\").projectDir.resolve(\"src/main/kotlin\") // an alternative to the line above // kotlinProject = project(\":my-kotlin-project\") // you can set the name of the registration helper class here registrationHelperName = \"org.example.MyLanguages\" // TypeScript // similar to the Kotlin API above, the typescript directory can be set to enable TS API generation typescriptDir = project(\":my-typescript-project\").projectDir.resolve(\"src/gen\") } [...] The org.modelix.model-api-gen.gradle Gradle helper provides an additional target which will integrate into your build, so a simple re-build of your Gradle project should be sufficient. Alternatively, you can directly trigger the API generation via ./gradlew mps:metamodel:build Done. You can now use the generated Classes in your code Kotlin (or TypeScript) project in the mps/metamodel sub-project.","title":"How-To apply the Model API Generator using the Gradle Plugin","component":"modelix","version":"main","name":"usage-model-api-gen-gradle","url":"/modelix/main/core/howto/usage-model-api-gen-gradle.html","titles":[]},"128":{"id":128,"text":"If you are interested in a more practical usage of what is presented here, check out the samples project To run the model-server with default configuration run: [modelix.core] $ ./gradlew model-server:run To specify a different jdbc configuration, you can add the -jdbcconf arguement: [modelix.core] $ ./gradlew model-server:run --args='-jdbcconf path-to-my-database.properties' During development or to perform tests it is recommended to start the model-server with in-memory storage: [modelix.core] $ ./gradlew model-server:run --args='-inmemory'","title":"How-To start a local model-server","component":"modelix","version":"main","name":"usage-model-server","url":"/modelix/main/core/howto/usage-model-server.html","titles":[]},"129":{"id":129,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The light-model-client is designed to connect to either an MPS instance or a Modelix model-server. It is implemented in Kotlin multi-platform so that it can also be run in the browser. While the alternative \"advanced model client\" provides more features and should be used for long-running processes, the light-model-client is optimized for a lower resource consumption and short living processes like in a browser tab. The server is responsible for resolving conflicts and to keep the client side model in a valid state.","title":"Accessing models: The light-model-client","component":"modelix","version":"main","name":"component-light-model-client","url":"/modelix/main/core/reference/component-light-model-client.html","titles":[]},"130":{"id":130,"text":"Repository | buildfile | Artifacts: Nexus GitHub Packages In order to export a meta-model (i.e. the structure aspect of a langauge) from MPS, modelix uses the MPS solution metamodel-export. This solution maps the structure of a language to corresponding serializable data classes of the model-api (e.g. LanguageData and ConcepData). Further, the metamodel-expor provides a command line interface to export these data classes to a JSON file from outside of MPS. Unfold to see an exemplary JSON file which is generated from the export { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca\", \"name\": \"University.Schedule\", \"concepts\": [ { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560\", \"name\": \"Lecture\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188010563\", \"name\": \"description\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188010565\", \"name\": \"maxParticipants\", \"type\": \"INT\" } ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188058355\", \"name\": \"schedule\", \"type\": \"University.Schedule.Schedule\", \"optional\": false } ], \"references\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188058364\", \"name\": \"room\", \"type\": \"University.Schedule.Room\", \"optional\": false } ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\", \"jetbrains.mps.lang.core.INamedConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010568\", \"name\": \"Schedule\", \"abstract\": true, \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010568/4128798754188010578\", \"name\": \"at\", \"type\": \"University.Schedule.DateAndTime\", \"optional\": false } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010569\", \"name\": \"Recurring\", \"properties\": [ ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"University.Schedule.Schedule\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010570\", \"name\": \"DateAndTime\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010570/4128798754188010571\", \"name\": \"date\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010570/4128798754188010573\", \"name\": \"time\" } ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010580\", \"name\": \"Room\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010580/4128798754188010583\", \"name\": \"maxPlaces\", \"type\": \"INT\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010580/4128798754188010585\", \"name\": \"hasRemoteEquipment\", \"type\": \"BOOLEAN\" } ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\", \"jetbrains.mps.lang.core.INamedConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010588\", \"name\": \"Rooms\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010588/4128798754188010589\", \"name\": \"rooms\", \"type\": \"University.Schedule.Room\", \"multiple\": true } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188057192\", \"name\": \"Courses\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188057192/4128798754188057193\", \"name\": \"lectures\", \"type\": \"University.Schedule.Lecture\", \"multiple\": true } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188059567\", \"name\": \"OneOff\", \"properties\": [ ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"University.Schedule.Schedule\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449\", \"name\": \"Student\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449/1648392019017048450\", \"name\": \"name\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449/1648392019017048454\", \"name\": \"semester\", \"type\": \"INT\" } ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449/1648392019017048452\", \"name\": \"born\", \"type\": \"University.Schedule.DateAndTime\", \"optional\": false } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048457\", \"name\": \"Students\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048457/1648392019017048458\", \"name\": \"students\", \"type\": \"University.Schedule.Student\", \"multiple\": true } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048460\", \"name\": \"LectureAssignments\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048460/1648392019017048466\", \"name\": \"lectures\", \"type\": \"University.Schedule.Assignment\", \"multiple\": true } ], \"references\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048460/1648392019017048461\", \"name\": \"student\", \"type\": \"University.Schedule.Student\", \"optional\": false } ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048463\", \"name\": \"Assignment\", \"properties\": [ ], \"children\": [ ], \"references\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048463/1648392019017048464\", \"name\": \"lecture\", \"type\": \"University.Schedule.Lecture\", \"optional\": false } ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] } ] } The metamodel-export is primarily intended to be used by the Model API Generator.","title":"MPS solution for metamodel-export","component":"modelix","version":"main","name":"component-metamodel-export","url":"/modelix/main/core/reference/component-metamodel-export.html","titles":[{"text":"Overview","hash":"_overview","id":1}]},"131":{"id":131,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The model-api-gen.gradle.plugin is a Gradle plugin that wraps the functionality of the MPS solution for metamodel-export and Model API Generator. It provides an additional Gradle task which will apply a 2-staged process: MPS metamodel export to JSON (optional) In the first step the metamodel-export MPS solution is executed by the plugin to export the MPS structure aspect (i.e. the metamodel) to JSON files. In case your metamodel comes from another source this is an external entry point: As long as you can export your metamodel to JSON, you can use model-api-gen. To use JSON from another source or JSON files from a previous export, you can skip this step by simply specifying a directory, which contains the JSON files, in the configuration of the gradle task: metamodel { //... jsonDir = File(\"path/to/json/dir\") } As a result, all MPS-specific configuration settings will be ignored and the specified directory will be used for the next step. JSON to model API generation In the second step, the previously generated JSON files containing the metamodel are being used to generate the typed API using the Kotlin/TypeScript generator in model-api-gen. Inside of the metamodel block the following settings can be configured. setting type description javaExecutable File Location of the Java executable moduleFolders ArrayList Directories, that contain the language modules mpsHome File Home directory of MPS mpsHeapSize String MPS heap size specified as a String, e.g. \"2g\" for 2GB includedLanguages Set Set of languages, for which an API should be generated includedLanguageNamespaces Set Set of language namespaces, for which an API should be generated includedConcepts Set Set of concepts, for which an API should be generated includedModules Set Set of modules, for which an API should be generated jsonDir File Directory containing JSON files, which represent a metamodel. Will be used as input for the generation. Specifying this will skip the export from MPS and all MPS-specific configurations will be ignored. kotlinDir File Target Kotlin directory of the generator kotlinProject Project Target Kotlin project of the generator typescriptDir File Target TypeScript directory of the generator registrationHelperName String Name of the registration helper taskDependencies List List of tasks, on which the generation process depends method parameter type description names Action Block used to set a name configuration. dependsOn vararg Any Adds a dependency to taskDependencies javaExecutable File Sets the java executable. modulesFrom File Adds a directory to `moduleFolders includeLanguage String Adds the language specified by this fully qualified name to ìncludedLanguages includeNamespace String Adds the namespace specified by this languagePrefix to includedNamespaces includeConcept String Adds the concept specified by this fully qualified name to includedConcepts exportModules String Adds the module specified by this name prefix to includedModules Inside the metamodel block a names block can be declared to configure prefix, suffix, and baseNameConversion of generated Kotlin/TypeScript elements. This is achieved by setting the attributes of the NameConfig object accordingly. attribute default prefix default suffix languageClass \"L_\" \"\" typedNode \"N_\" \"\" typedNodeImpl` \"_N_TypedImpl_\" \"\" untypedConcept \"_C_UntypedImpl_\" \"\" typedConcept` \"C_\" \"\" typedConceptImpl` \"_C_TypedImpl_\" \"\" metamodel { mpsHome = file(\"path/to/mps/home\") mpsHeapSize = \"2g\" kotlinDir = file(\"build/kotlin_gen\") registrationHelperName = \"org.modelix.Languages\" typescriptDir = file(\"build/ts_gen\") includeNamespace(\"jetbrains.mps.baseLanguage\") exportModules(\"jetbrains.mps.runtime\") names { languageClass.prefix = \"MyLanguagePrefix\" languageClass.suffix = \"MyLanguageSuffix\" } }","title":"Gradle Plugin for the Model API Generator","component":"modelix","version":"main","name":"component-model-api-gen-gradle","url":"/modelix/main/core/reference/component-model-api-gen-gradle.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Configuration settings","hash":"_configuration_settings","id":2},{"text":"Configurable Attributes","hash":"_configurable_attributes","id":3},{"text":"Configuration Methods","hash":"_configuration_methods","id":4},{"text":"Name Configuration","hash":"_name_configuration","id":5},{"text":"Default Values","hash":"_default_values","id":6},{"text":"Example","hash":"_example","id":7}]},"132":{"id":132,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The Model API Generator (model-api-gen) is a Kotlin component which generates a domain-specific model API. Currently, the generator supports either Kotlin and TypeScipt as target languages. As a source for the generated API, model-api-gen consumes a given metamodel specified by JSON files. The Model API Generator is mainly used in the corresponding gradle plugin model-api-gen-gradle.","title":"Model API Generator","component":"modelix","version":"main","name":"component-model-api-gen","url":"/modelix/main/core/reference/component-model-api-gen.html","titles":[]},"133":{"id":133,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The model-server component provides a storage for models. Bringing models to the cloud requires an alternative to the file system (and git) based storage of models. Modelix implements a data structure that allows replication between all MPS instances connected to the same model-server. It is very similar to the git storage format, but instead of files it stores nodes in its key-value data store. To support real-time collaboration, in addition to the snapshot of a version, the model-server also stores the operations that were applied on the previous version to produce the new version. Conflicts between concurrent modification are resolved using operational transformation (OT). The usually hard part of OT is to guarantee convergence, meaning that all clients end up with the same result independent of the order in which they receive changes. This problem becomes trivial, because versions are identified by a hash over all the content. Any divergence will result in a different hash which can easily be detected. The remaining problem is what to do when a divergence is detected. From git we know that switching between versions is fast, because it only has to apply the difference between these versions. The same is true here: Fixing a divergence is as easy as switching to the correct version. If a client does not have any local changes it does not even need to apply the change operations itself - it can just switch to the new version. So in the rare case of a divergence fixing it is nothing special and is an operation that happens all the time. While this component is independent of MPS, it is possible to replicates the data of the MPS internal module repository into a running model-server. This can be achieved using the modelix MPS plugin: One can connect an MPS instances to a model-server, upload the current module repository, and keep it synchronized. This can also be a local MPS instance without a web editor - both options are supported at the same time. To reformat and add license header to all files run: ../gradlew spotlessApply Valid keys are keys starting with the PROTECTED_PREFIX ($$$). For details please refer to the OpenAPI documentation under doc/model-server.json.","title":"A Cloud Model Storage/Repository: The modelix model-server","component":"modelix","version":"main","name":"component-model-server","url":"/modelix/main/core/reference/component-model-server.html","titles":[{"text":"Real-Time Collaboration and Operational Transformation","hash":"_real_time_collaboration_and_operational_transformation","id":1},{"text":"MPS and the model-server","hash":"_mps_and_the_model_server","id":2},{"text":"Development","hash":"_development","id":3},{"text":"APIs","hash":"_apis","id":4}]},"134":{"id":134,"text":"TODO","title":"modelix.core Tutorials","component":"modelix","version":"main","name":"index","url":"/modelix/main/core/tutorial/index.html","titles":[]},"135":{"id":135,"text":"The modelix.platform repository contains the Gradle platforms for modelix. It provides all modelix component versions for each modelix platform release. The modelix project uses Gradle to build the individual components. Simply call the following in the top level folder of a repository: ./gradlew build # mac/linux or if you are on windows use: gradlew.bat build # windows At the moment most modelix artifacts are stored on the itemis nexus with no access restriction. As a consequence, when you build modelix or use modelix components via Gradle there is no repository access setup required. This is optional when you want to obtain modelix artifacts from GitHub packages rather than the itemis nexus server. Most packages are also published to GitHub packages for which a GithHub account and credentials are required. To access GitHub packaged you need to specify your credentials. First of all you will need to generate a personal access token with access to GitHub Packages. The project assumes that your username is available as the variable gpr.user and the token as gpr.key. The easiest way to configure the credentials is copy the example below, paste it into the gradle.properties file in the repository and replace the values with your credentials: gpr.user= gpr.key= Gradle also supports other locations for specifying these properties.","title":"Welcome to modelix.platform!","component":"modelix","version":"main","name":"index","url":"/modelix/main/platform/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Getting Started","hash":"_getting_started","id":2},{"text":"Build components using Gradle","hash":"_build_components_using_gradle","id":3},{"text":"Build from console","hash":"_build_from_console","id":4},{"text":"modelix Artifact Publication","hash":"_modelix_artifact_publication","id":5},{"text":"How to set up GitHub packages authentication","hash":"_how_to_set_up_github_packages_authentication","id":6}]},"136":{"id":136,"text":"The modelix platform is a Gradle platform built using Gradle’s Java Platform Plugin. It aggregates the versions of individual modelix components. Furthermore, the platform simplifies versioning by mapping the modelix release version to the versions of the individual components. These are curated for each release so that compatibility between them is ensured.","title":"The modelix Gradle platform","component":"modelix","version":"main","name":"index","url":"/modelix/main/platform/explanation/index.html","titles":[]},"137":{"id":137,"text":"The modelix platform provides component versions. To enforce these versions in your project’s build you can add the platform as an enforcedPlatform. We make the following assumptions: the string variable mps_version contains the mps version that is used in your project, e.g. 2021-1 the string variable modelix_platform_version contains the version of the modelix platform you want to use, e. g. 23.1.0 To enforce the versions provided by the platform in your Gradle build, you can use enforcedPlatform inside of a dependencies block like this: dependencies { implementation(enforcedPlatform(\"org.modelix:platform-mps-$mps_version:$modelix_platform_version\")) } Dependencies to modelix components can then be declared without a version number (as the version declared in the platform will be used). For example: dependencies { implementation(enforcedPlatform(\"org.modelix:platform-mps-$mps_version:$modelix_platform_version\")) implementation(\"org.modelix:model-client\") } If you want to handle dependencies to MPS version-specific modelix components yourself, you can use org.modelix:platform instead, which does not contain these dependencies. However, sometimes it might be necessary to pick a specific version of a single component, e.g. when one wants to test new features. Overriding versions may lead to incompatibilities between individual modelix components. In order to override versions inside the platform during dependency resolution, platform can be used instead of enforcedPlatform: dependencies { implementation(platform(\"org.modelix:platform-mps-$mps_version:$modelix_platform_version\")) implementation(\"org.modelix:model-client:2.4.0\") } If you want to learn more about the difference between platform and enforcedPlatform, you can check out this section in the Gradle documentation.","title":"How-to use the platform to streamline modelix dependencies","component":"modelix","version":"main","name":"usage-platform","url":"/modelix/main/platform/howto/usage-platform.html","titles":[{"text":"General Usage","hash":"_general_usage","id":1},{"text":"Overriding versions","hash":"_overriding_versions","id":2}]},"138":{"id":138,"text":"TODO","title":"modelix.platform Tutorials","component":"modelix","version":"main","name":"index","url":"/modelix/main/platform/tutorial/index.html","titles":[]},"139":{"id":139,"text":"The examples are currently work in progress and are develop alongside the modelix platform development. The modelix samples repository contains a couple of examples that show various aspects of the modelix platform. The primary focus of the samples is to show how you can apply modelix to bring languages and models defined in MPS into the web. On the basis of (meta-)models defined in MPS, external access is provided using JVM (Java/Kotlin) and web frameworks/tools. Everything shown in the samples is intended to enable you to come up with your own use-cases and architectures based on what is provided here. Not all features of modelix are shown here so this is not a complete demo of everything modelix can do. None of the examples try to reuse editors defined in MPS. If your goal is to reuse MPS editors as is then modelix itself ships with a projector integration to achieve this. While all the examples use the same language defined in MPS they are not meant as one complete example but rather as individual parts. The purpose of the examples is to give inspiration of what is possible with modelix and make you think and envision your own use-cases. The modelix project uses Gradle to build the individual components. Simply call the following in the top level folder of a repository: ./gradlew build # mac/linux or if you are on windows use: gradlew.bat build # windows At the moment most modelix artifacts are stored on the itemis nexus with no access restriction. As a consequence, when you build modelix or use modelix components via Gradle there is no repository access setup required. This is optional when you want to obtain modelix artifacts from GitHub packages rather than the itemis nexus server. Most packages are also published to GitHub packages for which a GithHub account and credentials are required. To access GitHub packaged you need to specify your credentials. First of all you will need to generate a personal access token with access to GitHub Packages. The project assumes that your username is available as the variable gpr.user and the token as gpr.key. The easiest way to configure the credentials is copy the example below, paste it into the gradle.properties file in the repository and replace the values with your credentials: gpr.user= gpr.key= Gradle also supports other locations for specifying these properties. Once the initial build has completes you can dive in with the following: Read explanations in the Courses Domain: MPS Language and Model Read the use-cases these samples cover in the Use Cases of the Sample project Understand the repository in the Sample Repository Structure Inspect and edit the project with the code editor of your choice. The top folder in the repository provides IntelliJ configurations, the mps folder is a sub-project can be opened using MPS 2021.2.6, and the spa-dashboard-angular folder is a WebStorm project. Start sample components which realize use case samples:tutorial/startup-usecases.adoc","title":"Welcome to the modelix samples!","component":"samples","version":"modelix-23.0","name":"index","url":"/samples/modelix-23.0/samples/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Getting Started","hash":"_getting_started","id":2},{"text":"Build components using Gradle","hash":"_build_components_using_gradle","id":3},{"text":"Build from console","hash":"_build_from_console","id":4},{"text":"modelix Artifact Publication","hash":"_modelix_artifact_publication","id":5},{"text":"How to set up GitHub packages authentication","hash":"_how_to_set_up_github_packages_authentication","id":6},{"text":"Entry Points","hash":"_entry_points","id":7}]},"140":{"id":140,"text":"","title":"Courses Domain: MPS Language and Model","component":"samples","version":"modelix-23.0","name":"courses-domain","url":"/samples/modelix-23.0/samples/explanation/courses-domain.html","titles":[]},"141":{"id":141,"text":"The repository of the modelix samples is a single gradle project to make building everything at once easy. The examples are organized by the technology they use into the various sub-folders: Components/Tech Description Status Folder MPS + cloud-plugin MPS language definition that is used by all examples. The MPS language structure is used to generate a Java API consumed by all examples. ✅ mps MPS, metamodel-generator Generated Kotlin API from the MPS language. ✅ mps/metamodel OpenAPI A hand-crafted OpenAPI specification that defines domain-specific REST endpoints which expose the model contents. ✅ openapi model-server + Quarkus An implementation of the OpenAPI that exposes the model contents REST. Obtains model data from a running model-server. ✅ rest-api-model-server ligh-model-server+ ModelQL + Ktor An implementation of the OpenAPI that exposes the model contents REST. Obtains model data from a running the light-model-server MPS plugin. ✅ rest-api-model-ql Angular via REST A single page app that realizes a read-only dashboard. Can connect to either of the OpenAPI implementations. ✅ spa-dashboard-angular Each component documentation with component specific content.","title":"Sample Repository Structure","component":"samples","version":"modelix-23.0","name":"structure","url":"/samples/modelix-23.0/samples/explanation/structure.html","titles":[]},"142":{"id":142,"text":"The imaginary domain use-case represents a dashboard like view on model content. This use-case envisions a scenario where an independent client (outside of MPS) wants to consume the content of models defined in MPS, thus requiring read only access. There are two different variations of this use-case: Use Case 1a: Dashboard view next to Room In this variation, we envision a display next to each room that shows the upcoming lectures in that room. A low power display such as an low power e-ink with showing a simple website via wifi would be sufficient for this scenario. Use Case 1b: Dashboard View in the Main Hall In this variation, we envision a display in the main hall shows the full schedule of all the lectures of the current day. A large display would be used for this scenario, showing a website via wifi which contains the complete schedule. In both variations, the clients do not need to edit these models and are not capable to run a full MPS instance to show the model content. While the e-ink display does not require automatic updates (the display simply refreshes periodically every 15 minutes), the display in the main hall will require automatic updates (having more power and being a central display it would want to show the newest information at all times). The dashboard component, an angular app that serves the content of a model, implements such a simple single page application (SPA) for this use-case.","title":"Use-Case 1: Dashboard","component":"samples","version":"modelix-23.0","name":"usecase-1","url":"/samples/modelix-23.0/samples/explanation/usecase-1.html","titles":[]},"143":{"id":143,"text":"","title":"Use-Case 2: Manual Schedule Creation","component":"samples","version":"modelix-23.0","name":"usecase-2","url":"/samples/modelix-23.0/samples/explanation/usecase-2.html","titles":[]},"144":{"id":144,"text":"Given the courses domain and its meta-model explained here, the samples project covers two use-cases: Use-Case 1: Dashboard Use-Case 2: Manual Schedule Creation To illustrate how the different use-cases and component architecture relate, this section provides a short tabular description. Use Case Variant Backend MPS Backend model-server Use Case 1: Dashboard view 1a. light-model-server-client + rest-api-model-ql light-model-server-client + rest-api-model-ql 1b. json-bulk-model-access + rest-api-json-bulk ❌ Use Case 2: Real-time collaboration 🏗️ 🏗️","title":"Use Cases of the Sample project","component":"samples","version":"modelix-23.0","name":"usecases","url":"/samples/modelix-23.0/samples/explanation/usecases.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Use-Case Architecture Mapping","hash":"_use_case_architecture_mapping","id":2}]},"145":{"id":145,"text":"This samples implementations allow to run different use-cases in different setups - thus showing the flexibility of the modelix platform. Depending on the chosen use-case, only a subset of the components in this repository are used. The full architecture includes components used for multiple use-cases. One does not need all components to realize individual use-cases. In the following a short overview is given on each component. The meta-model (language) of the courses domain and a model (soulution) with sample data in JetBrains MPS on which everything in this sample is based. ▶️ For more details, see the Language section in the MPS component documentation An API based on the meta-model generated with the metamodel-generator component from modelix. ▶️ For more details, see the 'Generated API' section in the MPS component documentation In this example project, an extra domain-specific API layer is added which is defined in the OpenAPI specification[1]. This layer is meant educational as no noteworthy abstractions from the language itself happen in this definition. It intends to show how one introduces a clearly defined domain-specific abstraction decoupling the language engineering (meta-modeling) and the web development. We provide two backends (i.e. implementations of the API layer): The API via modelQL and API via model-server components. ▶️ For more details, see the OpenAPI component documentation. This project provides two implementations of the openapi domain abstraction. MPS as a source This backend provides access to the model by obtaining the model knowledge directly from a running MPS instance. It is implemented using ktor and connects to a model-client plugin running inside of MPS. This component can only provide read and write access. ▶️ For more details, see the API via modelQL for details. model-server as a source This backend provides access to the model by connecting to a running model-server. It is implemented using Quarkus and can provide read access to the underlying model. Additionally, a websocket for push notifications about ongoing model changes is provided. This is realized using websockets exposed by the model-server. ▶️ For more details, also see the API via model-server component for details. The dashboard provides access to model knowledge through a browser. As it is conforming to the OpenAPI specification, the dashboard is able to obtain the model content from both backend implementations. However, the dashboard is consequently limited by the chosen backend. This components requires running any of the available OpenAPI implementations to obtain model knowledge from. ▶️ For more details, also see the Dashboard for details. ⚠️ TBD ⚠️ TBD 1. See https://www.openapis.org/ for details on how OpenAPI works.","title":"System architecture and components in this repository","component":"samples","version":"modelix-23.0","name":"architecture","url":"/samples/modelix-23.0/samples/reference/architecture.html","titles":[{"text":"Full system architecture","hash":"_full_system_architecture","id":1},{"text":"The MPS Language","hash":"_the_mps_language","id":2},{"text":"Generated model API (domain API","hash":"_generated_model_api_domain_api","id":3},{"text":"Domain-specific OpenAPI","hash":"_domain_specific_openapi","id":4},{"text":"OpenAPI implementation","hash":"_openapi_implementation","id":5},{"text":"Single-page application (SPA) Dashboard","hash":"_single_page_application_spa_dashboard","id":6},{"text":"Real-time' collaboration web application","hash":"_real_time_collaboration_web_application","id":7},{"text":"Deploying to Docker / Kubernetes","hash":"_deploying_to_docker_kubernetes","id":8}]},"146":{"id":146,"text":"Figure 1. The SPA Dashboard Figure 2. View on a single Lecture in the Dashboard This component provides a single page application which accesses an implementation of the sample OpenAPI specification. The idea here is to illustrate a read only use-case where a system/service outside of MPS wants to consume the content of models previously defined in MPS. This dashboard is a single-page app showing content obtained from the intermediate REST APIs. A user cannot edit these models from the browser. It does not matter whether MPS is used to store the model information (e.g. by running an MPS instance in the cloud), or alternatively the modelix model-server is used. You can build this subproject individually from the parent folder via via Gradle: ./gradlew spa-dashboard-angular:build To run this application you will need a component which provides an API implementation conforming to the OpenAPI spec. Thus, you need to start one of the available OpenAPI implementations in this project: Either start the rest-api-model-ql implementation, or alternatively you can start the rest-api-model-server implementation. Check the documentation of the corresponding project parts on how to start them. Make sure you have the correct ports defined in the API URLs. This app expects 8090 by default. Next run this single page application via: ./gradlew spa-dashboard-angular:npmRun You can then go to http://localhost:4200 to see a dashboard with the courses model content.","title":"Single page application: An Angular based dashboard","component":"samples","version":"modelix-23.0","name":"dashboard","url":"/samples/modelix-23.0/samples/reference/dashboard.html","titles":[{"text":"Building & Running","hash":"_building_running","id":1},{"text":"1. Build spa-dashboard-angular","hash":"_1_build_spa_dashboard_angular","id":2},{"text":"2. Start an OpenAPI implementation","hash":"_2_start_an_openapi_implementation","id":3},{"text":"3. Run the angular app","hash":"_3_run_the_angular_app","id":4}]},"147":{"id":147,"text":"The language used in all examples is the same. The language itself is fairly small: It describes a very simplified lecture schedule. The language intentionally does not use expressions, creating editors for expressions by hand is very cumbersome and at the time where these samples were created modelix has no support for generating these editors for you. The main concepts of the language are: Room: where lecture are held. Each room has a maximum capacity of students, a name and some additional properties. Lecture: Have a name, some description and reference a room where they are held. And also have a schedule which determines when they are held and if they repeat through the whole semester or are a one time lecture. Student: A student with a name and birthday. Assignment: Lecture assignments for a single student. Some concepts are contained a root node like a Rooms container to make structuring the editors in MPS easier: classDiagram class Rooms { > } class Courses { > } class Students { > } class LectureAssignments { > } Rooms *-- Room : 0..n Courses *-- Lecture: 0..n Lecture .. Room: 1 Lecture *-- Schedule: 1 OneOff (iNode) rooms.children.rooms.forEach { it.properties.name } The code generator has exported the language definition, and we can use to write type safe code that works with the models. For properties and children we now have attributes in the generated classes and if somebody renames a property or child-role the compiler will tell us. Of course the MPSLanguageRegistry.getInstance would throw an exception if our iNode instance isn’t a Rooms instance. The generate class for a Room concept: concept Room extends BaseConcept implements INamedConcept instance can be root: false alias: short description: properties: maxPlaces : integer hasRemoteEquipment : boolean children: > references: > Will look like this: java package University.Schedule.structure; /*Generated by MPS */ import jetbrains.mps.lang.core.structure.BaseConcept; import jetbrains.mps.lang.core.structure.INamedConcept; import org.modelix.mps.apigen.runtime.INodeHolder; import org.jetbrains.annotations.NotNull; import org.modelix.model.api.INode; import org.jetbrains.annotations.Nullable; /** * Generated for http://127.0.0.1:63320/node?ref=r%3Adfa26643-4653-44bc-9dfe-5a6581bcd381%28University.Schedule.structure%29%2F4128798754188010580 */ public class Room extends BaseConcept implements INamedConcept { public class Properties extends BaseConcept.Properties implements INodeHolder, INamedConcept.Properties { @NotNull @Override public INode getINode() { return Room.this.getINode(); } @Nullable public Integer getMaxPlaces() { String propertyValue = getINode().getPropertyValue(\"maxPlaces\"); if (propertyValue != null && !(propertyValue.isEmpty())) { return Integer.parseInt(propertyValue); } return null; } @Nullable public Integer setMaxPlaces(Integer value) { if (value != null) { getINode().setPropertyValue(\"maxPlaces\", Integer.toString(value)); } else { getINode().setPropertyValue(\"maxPlaces\", null); } return value; } @Nullable public Boolean getHasRemoteEquipment() { String propertyValue = getINode().getPropertyValue(\"hasRemoteEquipment\"); if (propertyValue != null && !(propertyValue.isEmpty())) { return Boolean.parseBoolean(propertyValue); } return null; } @Nullable public Boolean setHasRemoteEquipment(@Nullable Boolean value) { if (value != null) { getINode().setPropertyValue(\"hasRemoteEquipment\", Boolean.toString(value)); } else { getINode().setPropertyValue(\"hasRemoteEquipment\", null); } return value; } } public class Children extends BaseConcept.Children implements INodeHolder, INamedConcept.Children { @NotNull @Override public INode getINode() { return Room.this.getINode(); } } public class References extends BaseConcept.References implements INodeHolder, INamedConcept.References { @NotNull @Override public INode getINode() { return Room.this.getINode(); } } private final Properties properties; private final Children children; private final References references; public Room(INode node) { super(node); this.properties = new Properties(); this.children = new Children(); this.references = new References(); } public Properties getProperties() { return this.properties; } public Children getChildren() { return this.children; } public References getReferences() { return this.references; } } At the moment it’s not possible to regenerate the API as part of the CI/gradle build, that’s why the generated sources are checked into the repository. This limitation is specific this example and is somehow caused by the MPS build failing to load the right languages during the build. Other projects are successfully using the api-gen code generator within their CI/gradle build. The limitation will get fixed in the future but for now the generated Java code is checked into the repository.","title":"Meta-model and the Generated Domain-Specific Model API","component":"samples","version":"modelix-23.0","name":"meta-model-model-api","url":"/samples/modelix-23.0/samples/reference/meta-model-model-api.html","titles":[{"text":"Language","hash":"_language","id":1},{"text":"Generated API","hash":"_generated_api","id":2},{"text":"Limitations","hash":"_limitations","id":3}]},"148":{"id":148,"text":"This 'component' is not a real component but rather a start helper - the model-server is started using the Gradle application plugin. To start the model-server, simply call the following in the repository root: ./gradlew model-server:run --args=\"-inmemory -dumpin courses.modelserver.dump\" As an alternative, you can also use Docker to run an in instance of model-server using the following command: docker run --rm -p 28101:28101 -d modelix/modelix-model:1.3.2 java -XX:MaxRAMPercentage=85 -Djdbc.url=$jdbc_url -cp \"model-server/build/libs/*\" org.modelix.model.server.Main -inmemory","title":"model-server start helper","component":"samples","version":"modelix-23.0","name":"model-server","url":"/samples/modelix-23.0/samples/reference/model-server.html","titles":[]},"149":{"id":149,"text":"This component of a single openapi.yml file which provides the OpenAPI specification of the REST API implementations serving as examples in this project. The described API provides an additional domain-specific abstraction of the courses domain[1]. The intention of this abstraction is to provide an example on how the use of modelix can be abstracted for eventual consumer apps, such as the Angular based dashboard. The development process thus can follow a API-first approach. Consequently, this openAPI provides a contract of the API behaviour for web teams and a language engineers. There are currently three implementations of this OpenAPI specification: API via model-server API via modelQL 1. This additional abstraction admittedly does not really provide fancy abstractions for this domain. Its purpose is rather educational for you to understand the option to add an additional layer separating web development from language engineering. You do not have to do this. Of course one does not necessarily need such an abstraction layer - any dashboard or web app can directly communicate with the API provided by the model-server together with the generated model API","title":"Intermediate OpenAPI of the Courses domain","component":"samples","version":"modelix-23.0","name":"openapi","url":"/samples/modelix-23.0/samples/reference/openapi.html","titles":[]},"150":{"id":150,"text":"This project provides a REST API that wraps the functionality of the light-model-server MPS plugin running inside an MPS instance. The provided REST API conforms to the API spec in the openapi.yaml. You can build this subproject individually from the parent folder via all gradle: ./gradlew rest-api-model-ql:build Before running the API provider you need to open the MPS project in the mps folder. The initial gradle build will automatically have set up MPS with the light-model-server plugin and expose the models via query language called ModelQL. This API is then accessed from this openAPI abstraction implementation to load the models. Once your MPS project is opened you can run: ./gradlew rest-api-model-ql:run Once you see a log message like: [DefaultDispatcher-worker-8] INFO ktor.application - Responding at http://0.0.0.0:8090 Your openAPI implementation is ready. Settings such as ports and hosts are defined in the application.conf file. For simple testing you can curl the data provided by the API for example: 🧾 Unfold for examples ```console $ curl -s -X GET \"http://localhost:8090/rooms\" -H \"accept: application/json\" | jq { \"rooms\": [ { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\", \"name\": \"somehjtinghekjrekjrhe\", \"maxPlaces\": 32232121, \"hasRemoteEquipment\": false }, { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\", \"name\": \"Schrödinger\", \"maxPlaces\": 420, \"hasRemoteEquipment\": true } ] } $ curl -s -X GET \"http://localhost:8090/rooms/mps-node%253Ar%253Ace161c54-ea76-40a6-a31d-9d7cd01febe2%2528University.Schedule.sandbox%2529%252F4128798754188058349\" -H \"accept: application/json\" | jq { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\", \"name\": \"Schrödinger\", \"maxPlaces\": 420, \"hasRemoteEquipment\": true } $ curl -s -X GET \"http://localhost:8090/rooms/mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\" -H \"accept: application/json\" | jq { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\", \"name\": \"somehjtinghekjrekjrhe\", \"maxPlaces\": 32232121, \"hasRemoteEquipment\": false } $ curl -s -X GET \"http://localhost:8090/rooms/trash\" -H \"accept: application/json\" | jq \"Can not load Room: null $ curl -s -X GET \"http://localhost:8090/lectures\" -H \"accept: application/json\" | jq curl -s -X GET \"http://localhost:8090/lectures\" -H \"accept: application/json\" | jq { \"lectures\": [ { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058353\", \"name\": \"Physics 101\", \"description\": \"You learn about stuff\", \"maxParticipants\": 42, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\" }, { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F1305729863392535677\", \"name\": \"Physics 102\", \"description\": \"You learn about stuff\", \"maxParticipants\": 42, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\" }, { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188060854\", \"name\": \"New Students Welcome\", \"description\": \"Hello everyone\", \"maxParticipants\": 69, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\" } ] } $ curl -s -X GET \"http://localhost:8090/lectures/mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058353\" -H \"accept: application/json\" | jq { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058353\", \"name\": \"Physics 101\", \"description\": \"You learn about stuff\", \"maxParticipants\": 42, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\" } $ curl -s -X GET \"http://localhost:8090/lectures/trash\" -H \"accept: application/json\" | jq \"Can not load Lecture: null\" Alternatively you can now start the Dashboard to consume this API endpoint.","title":"API via modelQL","component":"samples","version":"modelix-23.0","name":"rest-api-model-ql","url":"/samples/modelix-23.0/samples/reference/rest-api-model-ql.html","titles":[{"text":"Building","hash":"_building","id":1},{"text":"Usage","hash":"_usage","id":2}]},"151":{"id":151,"text":"This project provides a custom REST API implemented in Quarkus that wraps a model-server instance. The REST API abstracts the generic model-server API for providing the dashboard example with usable data. The provided REST API conforms to the API spec in the openapi.yaml. You can build this subproject individually from the parent folder via all gradle: ./gradlew rest-api-model-server:build Before starting the REST API, a model-server instance needs to be running. The example from the MPS folder has to be deployed on this instance in a repository call courses. Once these preconditions are met, the REST API can be launched with: ./gradlew rest-api-model-server:run For simple testing you can curl the data provided by the API for example: 🧾 Unfold for examples $ curl -s -X GET \"http://localhost:8090/rooms\" -H \"accept: application/json\" | jq { \"rooms\": [ { \"roomRef\": \"r:ce161c54-ea76-40a6-a31d-9d7cd01febe2(unused)/4128798754188058347\", \"name\": \"Einstein\", \"maxPlaces\": 42, \"hasRemoteEquipment\": true }, { \"roomRef\": \"r:ce161c54-ea76-40a6-a31d-9d7cd01febe2(unused)/4128798754188058349\", \"name\": \"Schrödinger\", \"maxPlaces\": 420, \"hasRemoteEquipment\": true } ] } Alternatively you can now start the Dashboard to consume this API. If you want to observe the updates sent on the web socket, you can use wscat to get some insights when updates are sent. wscat -c ws://127.0.0.1:8090/updates","title":"API via model-server","component":"samples","version":"modelix-23.0","name":"rest-api-model-server","url":"/samples/modelix-23.0/samples/reference/rest-api-model-server.html","titles":[{"text":"Building","hash":"_building","id":1},{"text":"Usage","hash":"_usage","id":2},{"text":"Introspecting the websocket communication","hash":"_introspecting_the_websocket_communication","id":3}]},"152":{"id":152,"text":"This Tutorial shows how to start up a system that implements Use-Case 1: Dashboard The samples provide a total of three architectural variation of this use case: Using the more complex rest-api-model-server backend and the model-server. Using the rest-api-model-ql backend and the light-model-server MPS plugin rest-api-model-server (legacy) + model-server All gradle commands assume you are in the top level folder of the samples repository. To start up the system as described in UC 1a, you first have to have built the entire project: ./gradlew Once done, you need to start all components involved, these are: MPS: Start MPS 2021.2.6 without any global plugins and open the project in the mps/project-mps-backend folder. This MPS project stores the model content using MPS persistence. The gradle build process will have downloaded all plugins needed to mps/project-mps-backend/build/dependencies and declare this folder as a global library. This includes the json-bulk-model-access and the light-model-client. API layer: The rest-api-json-bulk provides the models from the running MPS instance, simply run in a new terminal (it will be a blocking call): $ ./gradlew rest-api-json-bulk:run 🧾 You can expect output similar to this (unfold to see details) > Task :rest-api-json-bulk:run 2022-12-07 10:12:38.874 [DefaultDispatcher-worker-11] INFO ktor.application - Autoreload is disabled because the development mode is off. 2022-12-07 10:12:39.009 [DefaultDispatcher-worker-11] INFO ktor.application - Application started in 0.14 seconds. 2022-12-07 10:12:39.131 [DefaultDispatcher-worker-1] INFO ktor.application - Responding at http://0.0.0.0:8090 91% EXECUTING [2m 20s] > :rest-api-json-bulk:run Dashboard: The dashboard itself is a node application which can be run via in a new terminal (it will be a blocking call): $ ./gradlew spa-dashboard-angular:npmRun 🧾 You can expect output similar to this (unfold to see details) > Task :spa-dashboard-angular:npmRun > angular.io-example@0.0.0 ng > ng serve - Generating browser application bundles (phase: setup)... ✔ Browser application bundle generation complete. Initial Chunk Files | Names | Raw Size vendor.js | vendor | 2.47 MB | polyfills.js | polyfills | 318.03 kB | styles.css, styles.js | styles | 211.31 kB | main.js | main | 86.71 kB | runtime.js | runtime | 6.53 kB | | Initial Total | 3.08 MB Build at: 2022-12-07T09:18:02.345Z - Hash: 186b24edf20c1c4a - Time: 13776ms ** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ ** ✔ Compiled successfully. ✔ Browser application bundle generation complete. 5 unchanged chunks Build at: 2022-12-07T09:18:02.740Z - Hash: 186b24edf20c1c4a - Time: 324ms ✔ Compiled successfully. 95% EXECUTING [29s] > :spa-dashboard-angular:npmRun Explore the dashboard at http://localhost:4200/ Changes to the model in MPS will not automatically synchronize to the dashboard, you will have to manually reload the model.","title":"Run Use-Case 1 Implementation","component":"samples","version":"modelix-23.0","name":"start-usecase-1-a","url":"/samples/modelix-23.0/samples/tutorial/start-usecase-1-a.html","titles":[{"text":"How to start UC 1a","hash":"_how_to_start_uc_1a","id":1}]},"153":{"id":153,"text":"TODO using the rest-api-model-ql backend and the light-model-server MPS plugin All gradle commands assume you are in the top level folder of this repository. To start up the system as described in UC 1b, you first have to have build the entire project: ./gradlew Once done, you need to start all components involved, these are: modelix model-server: Model knowledge is supplied by the model-sever in this use case. To avoid complicated setups, we simply start the model-server in memory and load the model content from the included dump file, all using gradle: ./gradlew model-server:run --args=\"-inmemory -dumpin courses.modelserver.dump\" 🧾 You can expect output similar to this (unfold to see details) ./gradlew model-server:run --args=\"-inmemory -dumpin courses.modelserver.dump\" > Task :model-server:run 18:33:16,185 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml] 18:33:16,186 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy] 18:33:16,186 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [jar:file:/home/nkoester/.gradle/caches/modules-2/files-2.1/org.modelix/model-server-fatjar/1.3.2/1e6502c0e8282b1fe2c06824ad43f4d7270f20d7/model-server-fatjar-1.3.2.jar!/logback.xml] 18:33:16,194 |-INFO in ch.qos.logback.core.joran.spi.ConfigurationWatchList@f4168b8 - URL [jar:file:/home/nkoester/.gradle/caches/modules-2/files-2.1/org.modelix/model-server-fatjar/1.3.2/1e6502c0e8282b1fe2c06824ad43f4d7270f20d7/model-server-fatjar-1.3.2.jar!/logback.xml] is not of type file 18:33:16,269 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender] 18:33:16,270 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [console] 18:33:16,272 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property 18:33:16,282 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.modelix] to DEBUG 18:33:16,282 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [console] to Logger[org.modelix] 18:33:16,282 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to INFO 18:33:16,282 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [console] to Logger[ROOT] 18:33:16,282 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration. 18:33:16,283 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@7ff95560 - Registering current configuration as safe fallback point 18:33:16.295 [main] INFO org.modelix.model.server.Main - Max memory (bytes): 32178700288 18:33:16.295 [main] INFO org.modelix.model.server.Main - Max memory (bytes): 32178700288 18:33:16.295 [main] INFO org.modelix.model.server.Main - Server process started 18:33:16.295 [main] INFO org.modelix.model.server.Main - Server process started 18:33:16.295 [main] INFO org.modelix.model.server.Main - In memory: true 18:33:16.295 [main] INFO org.modelix.model.server.Main - In memory: true 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to secret file: /secrets/modelsecret/modelsecret.txt 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to secret file: /secrets/modelsecret/modelsecret.txt 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to JDBC configuration file: null 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to JDBC configuration file: null 18:33:16.296 [main] INFO org.modelix.model.server.Main - Schema initialization: false 18:33:16.296 [main] INFO org.modelix.model.server.Main - Schema initialization: false 18:33:16.296 [main] INFO org.modelix.model.server.Main - Set values: [] 18:33:16.296 [main] INFO org.modelix.model.server.Main - Set values: [] 18:33:16.296 [main] INFO org.modelix.model.server.Main - Port: 28101 18:33:16.296 [main] INFO org.modelix.model.server.Main - Port: 28101 Values loaded from /home/nkoester/git/modelix/modelix-sample/model-server/courses.modelserver.dump (73) 18:33:16.364 [main] INFO ktor.application - Autoreload is disabled because the development mode is off. 18:33:16.428 [main] INFO ktor.application - Application started in 0.088 seconds. 18:33:16.518 [DefaultDispatcher-worker-1] INFO ktor.application - Responding at http://0.0.0.0:28101 85% EXECUTING [7s] > :model-server:run API layer: The rest-api-model-server provides an abstraction of the model from the previously started model-server, simply run in a new terminal (it will be a blocking call): $ ./gradlew rest-api-model-server:quarkusDev 🧾 You can expect output similar to this (unfold to see details) $ ./gradlew rest-api-model-server:quarkusDev > Task :rest-api-model-server:quarkusDev Listening for transport dt_socket at address: 5005 Press [h] for more options>NG [8s] Tests paused Press [r] to resume testing, [h] for more options> Press [r] to resume testing, [o] Toggle test output, [h] for more options> __ ____ __ _____ ___ __ ____ ______ --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/ -/ /_/ / /_/ / __ |/ , _/ , 95% EXECUTING [16s] > :rest-api-model-server:quarkusDev Dashboard: The dashboard itself is a node application which can be run via in a new terminal (it will be a blocking call): $ ./gradlew spa-dashboard-angular:npmRun 🧾 You can expect output similar to this (unfold to see details) > Task :spa-dashboard-angular:npmRun > angular.io-example@0.0.0 ng > ng serve - Generating browser application bundles (phase: setup)... ✔ Browser application bundle generation complete. Initial Chunk Files | Names | Raw Size vendor.js | vendor | 2.47 MB | polyfills.js | polyfills | 318.03 kB | styles.css, styles.js | styles | 211.31 kB | main.js | main | 86.71 kB | runtime.js | runtime | 6.53 kB | | Initial Total | 3.08 MB Build at: 2022-12-07T09:18:02.345Z - Hash: 186b24edf20c1c4a - Time: 13776ms ** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ ** ✔ Compiled successfully. ✔ Browser application bundle generation complete. 5 unchanged chunks Build at: 2022-12-07T09:18:02.740Z - Hash: 186b24edf20c1c4a - Time: 324ms ✔ Compiled successfully. 95% EXECUTING [29s] > :spa-dashboard-angular:npmRun MPS: Start MPS 2021.2.6 without any global plugins and open the project in the mps/project-modelserver-backend folder. This MPS project does not store the model locally and instead obtains them from the model-server via the cloud-access plugin. The gradle build process will have downloaded all plugins needed to mps/project-modelserver-backend/build/dependencies and declare this folder as a global library. This includes the cloud-access plugin. Explore the dashboard at http://localhost:4200/ Changes to the model in MPS will automatically synchronize to the dashboard All gradle commands assume you are in the top level folder of this repository. To start up the system as described in UC 1c, you first have to have built the entire project: ./gradlew Once done, you need to start all components involved, these are: MPS: Start MPS 2021.2.6 without any global plugins and open the project in the mps/project-mps-backend folder. This MPS project stores the model content using MPS persistence. The gradle build process will have downloaded all plugins needed to mps/project-mps-backend/build/dependencies and declare this folder as a global library. This includes the light-model-server plugin used in this example UC. API layer: The light-model-server provides the models from the running MPS instance, simply run in a new terminal (it will be a blocking call): $ ./gradlew rest-api-model-ql:run 🧾 You can expect output similar to this (unfold to see details) > Task :rest-api-model-ql:run 2023-01-25 18:46:48.977 [main] INFO o.m.s.r.ModelServerLightWrapper - Connecting to light model-server at ws://localhost:48302/ws 2023-01-25 18:46:49.044 [main] INFO o.m.s.r.ModelServerLightWrapper - Connection successful 2023-01-25 18:46:49.070 [main] INFO ktor.application - Autoreload is disabled because the development mode is off. 2023-01-25 18:46:49.346 [main] INFO ktor.application - Application started in 0.286 seconds. 2023-01-25 18:46:49.455 [DefaultDispatcher-worker-4] INFO ktor.application - Responding at http://0.0.0.0:8090 2023-01-25 18:46:50.806 [eventLoopGroupProxy-4-1] INFO o.m.s.r.ModelServerLightWrapper - Resolving node trash 94% EXECUTING [26m 13s] > :rest-api-model-ql:run Dashboard: The dashboard itself is a node application which can be run via in a new terminal (it will be a blocking call): `$ ./gradlew spa-dashboard-angular:npmRun ` 🧾 You can expect output similar to this (unfold to see details) > Task :spa-dashboard-angular:npmRun > angular.io-example@0.0.0 ng > ng serve - Generating browser application bundles (phase: setup)... ✔ Browser application bundle generation complete. Initial Chunk Files | Names | Raw Size vendor.js | vendor | 2.47 MB | polyfills.js | polyfills | 318.03 kB | styles.css, styles.js | styles | 211.31 kB | main.js | main | 86.71 kB | runtime.js | runtime | 6.53 kB | | Initial Total | 3.08 MB Build at: 2022-12-07T09:18:02.345Z - Hash: 186b24edf20c1c4a - Time: 13776ms ** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ ** ✔ Compiled successfully. ✔ Browser application bundle generation complete. 5 unchanged chunks Build at: 2022-12-07T09:18:02.740Z - Hash: 186b24edf20c1c4a - Time: 324ms ✔ Compiled successfully. 95% EXECUTING [29s] > :spa-dashboard-angular:npmRun Explore the dashboard at http://localhost:4200/ Changes to the model in MPS will not automatically synchronize to the dashboard, you will have to manually reload the model.","title":"Run Use-Case 2a Implementation","component":"samples","version":"modelix-23.0","name":"start-usecase-1-b","url":"/samples/modelix-23.0/samples/tutorial/start-usecase-1-b.html","titles":[{"text":"How to start UC 1b","hash":"_how_to_start_uc_1b","id":1},{"text":"How to start UC 1c","hash":"_how_to_start_uc_1c","id":2}]},"154":{"id":154,"text":"TODO startup tutorial","title":"","component":"samples","version":"modelix-23.0","name":"startup-usecases","url":"/samples/modelix-23.0/samples/tutorial/startup-usecases.html","titles":[]},"155":{"id":155,"text":"The examples are currently work in progress and are develop alongside the modelix platform development. The modelix samples repository contains a couple of examples that show various aspects of the modelix platform. The primary focus of the samples is to show how you can apply modelix to bring languages and models defined in MPS into the web. On the basis of (meta-)models defined in MPS, external access is provided using JVM (Java/Kotlin) and web frameworks/tools. Everything shown in the samples is intended to enable you to come up with your own use-cases and architectures based on what is provided here. Not all features of modelix are shown here so this is not a complete demo of everything modelix can do. None of the examples try to reuse editors defined in MPS. If your goal is to reuse MPS editors as is then modelix itself ships with a projector integration to achieve this. While all the examples use the same language defined in MPS they are not meant as one complete example but rather as individual parts. The purpose of the examples is to give inspiration of what is possible with modelix and make you think and envision your own use-cases. The modelix project uses Gradle to build the individual components. Simply call the following in the top level folder of a repository: ./gradlew build # mac/linux or if you are on windows use: gradlew.bat build # windows At the moment most modelix artifacts are stored on the itemis nexus with no access restriction. As a consequence, when you build modelix or use modelix components via Gradle there is no repository access setup required. This is optional when you want to obtain modelix artifacts from GitHub packages rather than the itemis nexus server. Most packages are also published to GitHub packages for which a GithHub account and credentials are required. To access GitHub packaged you need to specify your credentials. First of all you will need to generate a personal access token with access to GitHub Packages. The project assumes that your username is available as the variable gpr.user and the token as gpr.key. The easiest way to configure the credentials is copy the example below, paste it into the gradle.properties file in the repository and replace the values with your credentials: gpr.user= gpr.key= Gradle also supports other locations for specifying these properties. Once the initial build has completes you can dive in with the following: Read explanations in the Courses Domain: MPS Language and Model Read the use-cases these samples cover in the Use Cases of the Sample project Understand the repository in the Sample Repository Structure Inspect and edit the project with the code editor of your choice. The top folder in the repository provides IntelliJ configurations, the mps folder is a sub-project can be opened using MPS 2021.2.6, and the spa-dashboard-angular folder is a WebStorm project. Start sample components which realize use case samples:tutorial/startup-usecases.adoc","title":"Welcome to the modelix samples!","component":"samples","version":"modelix-23.1","name":"index","url":"/samples/latest/samples/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Getting Started","hash":"_getting_started","id":2},{"text":"Build components using Gradle","hash":"_build_components_using_gradle","id":3},{"text":"Build from console","hash":"_build_from_console","id":4},{"text":"modelix Artifact Publication","hash":"_modelix_artifact_publication","id":5},{"text":"How to set up GitHub packages authentication","hash":"_how_to_set_up_github_packages_authentication","id":6},{"text":"Entry Points","hash":"_entry_points","id":7}]},"156":{"id":156,"text":"","title":"Courses Domain: MPS Language and Model","component":"samples","version":"modelix-23.1","name":"courses-domain","url":"/samples/latest/samples/explanation/courses-domain.html","titles":[]},"157":{"id":157,"text":"The repository of the modelix samples is a single gradle project to make building everything at once easy. The examples are organized by the technology they use into the various sub-folders: Components/Tech Description Status Folder MPS + cloud-plugin MPS language definition that is used by all examples. The MPS language structure is used to generate a Java API consumed by all examples. ✅ mps MPS, metamodel-generator Generated Kotlin API from the MPS language. ✅ mps/metamodel OpenAPI A hand-crafted OpenAPI specification that defines domain-specific REST endpoints which expose the model contents. ✅ openapi model-server + Quarkus An implementation of the OpenAPI that exposes the model contents REST. Obtains model data from a running model-server. ✅ rest-api-model-server ligh-model-server+ ModelQL + Ktor An implementation of the OpenAPI that exposes the model contents REST. Obtains model data from a running the light-model-server MPS plugin. ✅ rest-api-model-ql Angular via REST A single page app that realizes a read-only dashboard. Can connect to either of the OpenAPI implementations. ✅ spa-dashboard-angular Each component documentation with component specific content.","title":"Sample Repository Structure","component":"samples","version":"modelix-23.1","name":"structure","url":"/samples/latest/samples/explanation/structure.html","titles":[]},"158":{"id":158,"text":"The imaginary domain use-case represents a dashboard like view on model content. This use-case envisions a scenario where an independent client (outside of MPS) wants to consume the content of models defined in MPS, thus requiring read only access. There are two different variations of this use-case: Use Case 1a: Dashboard view next to Room In this variation, we envision a display next to each room that shows the upcoming lectures in that room. A low power display such as an low power e-ink with showing a simple website via wifi would be sufficient for this scenario. Use Case 1b: Dashboard View in the Main Hall In this variation, we envision a display in the main hall shows the full schedule of all the lectures of the current day. A large display would be used for this scenario, showing a website via wifi which contains the complete schedule. In both variations, the clients do not need to edit these models and are not capable to run a full MPS instance to show the model content. While the e-ink display does not require automatic updates (the display simply refreshes periodically every 15 minutes), the display in the main hall will require automatic updates (having more power and being a central display it would want to show the newest information at all times). The dashboard component, an angular app that serves the content of a model, implements such a simple single page application (SPA) for this use-case.","title":"Use-Case 1: Dashboard","component":"samples","version":"modelix-23.1","name":"usecase-1","url":"/samples/latest/samples/explanation/usecase-1.html","titles":[]},"159":{"id":159,"text":"","title":"Use-Case 2: Manual Schedule Creation","component":"samples","version":"modelix-23.1","name":"usecase-2","url":"/samples/latest/samples/explanation/usecase-2.html","titles":[]},"160":{"id":160,"text":"Given the courses domain and its meta-model explained here, the samples project covers two use-cases: Use-Case 1: Dashboard Use-Case 2: Manual Schedule Creation To illustrate how the different use-cases and component architecture relate, this section provides a short tabular description. Use Case Variant Backend MPS Backend model-server Use Case 1: Dashboard view 1a. light-model-server-client + rest-api-model-ql light-model-server-client + rest-api-model-ql 1b. json-bulk-model-access + rest-api-json-bulk ❌ Use Case 2: Real-time collaboration 🏗️ 🏗️","title":"Use Cases of the Sample project","component":"samples","version":"modelix-23.1","name":"usecases","url":"/samples/latest/samples/explanation/usecases.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Use-Case Architecture Mapping","hash":"_use_case_architecture_mapping","id":2}]},"161":{"id":161,"text":"This samples implementations allow to run different use-cases in different setups - thus showing the flexibility of the modelix platform. Depending on the chosen use-case, only a subset of the components in this repository are used. The full architecture includes components used for multiple use-cases. One does not need all components to realize individual use-cases. In the following a short overview is given on each component. The meta-model (language) of the courses domain and a model (soulution) with sample data in JetBrains MPS on which everything in this sample is based. ▶️ For more details, see the Language section in the MPS component documentation An API based on the meta-model generated with the metamodel-generator component from modelix. ▶️ For more details, see the 'Generated API' section in the MPS component documentation In this example project, an extra domain-specific API layer is added which is defined in the OpenAPI specification[1]. This layer is meant educational as no noteworthy abstractions from the language itself happen in this definition. It intends to show how one introduces a clearly defined domain-specific abstraction decoupling the language engineering (meta-modeling) and the web development. We provide two backends (i.e. implementations of the API layer): The API via modelQL and API via model-server components. ▶️ For more details, see the OpenAPI component documentation. This project provides two implementations of the openapi domain abstraction. MPS as a source This backend provides access to the model by obtaining the model knowledge directly from a running MPS instance. It is implemented using ktor and connects to a model-client plugin running inside of MPS. This component can only provide read and write access. ▶️ For more details, see the API via modelQL for details. model-server as a source This backend provides access to the model by connecting to a running model-server. It is implemented using Quarkus and can provide read access to the underlying model. Additionally, a websocket for push notifications about ongoing model changes is provided. This is realized using websockets exposed by the model-server. ▶️ For more details, also see the API via model-server component for details. The dashboard provides access to model knowledge through a browser. As it is conforming to the OpenAPI specification, the dashboard is able to obtain the model content from both backend implementations. However, the dashboard is consequently limited by the chosen backend. This components requires running any of the available OpenAPI implementations to obtain model knowledge from. ▶️ For more details, also see the Dashboard for details. ⚠️ TBD ⚠️ TBD 1. See https://www.openapis.org/ for details on how OpenAPI works.","title":"System architecture and components in this repository","component":"samples","version":"modelix-23.1","name":"architecture","url":"/samples/latest/samples/reference/architecture.html","titles":[{"text":"Full system architecture","hash":"_full_system_architecture","id":1},{"text":"The MPS Language","hash":"_the_mps_language","id":2},{"text":"Generated model API (domain API","hash":"_generated_model_api_domain_api","id":3},{"text":"Domain-specific OpenAPI","hash":"_domain_specific_openapi","id":4},{"text":"OpenAPI implementation","hash":"_openapi_implementation","id":5},{"text":"Single-page application (SPA) Dashboard","hash":"_single_page_application_spa_dashboard","id":6},{"text":"Real-time' collaboration web application","hash":"_real_time_collaboration_web_application","id":7},{"text":"Deploying to Docker / Kubernetes","hash":"_deploying_to_docker_kubernetes","id":8}]},"162":{"id":162,"text":"Figure 1. The SPA Dashboard Figure 2. View on a single Lecture in the Dashboard This component provides a single page application which accesses an implementation of the sample OpenAPI specification. The idea here is to illustrate a read only use-case where a system/service outside of MPS wants to consume the content of models previously defined in MPS. This dashboard is a single-page app showing content obtained from the intermediate REST APIs. A user cannot edit these models from the browser. It does not matter whether MPS is used to store the model information (e.g. by running an MPS instance in the cloud), or alternatively the modelix model-server is used. You can build this subproject individually from the parent folder via via Gradle: ./gradlew spa-dashboard-angular:build To run this application you will need a component which provides an API implementation conforming to the OpenAPI spec. Thus, you need to start one of the available OpenAPI implementations in this project: Either start the rest-api-model-ql implementation, or alternatively you can start the rest-api-model-server implementation. Check the documentation of the corresponding project parts on how to start them. Make sure you have the correct ports defined in the API URLs. This app expects 8090 by default. Next run this single page application via: ./gradlew spa-dashboard-angular:npmRun You can then go to http://localhost:4200 to see a dashboard with the courses model content.","title":"Single page application: An Angular based dashboard","component":"samples","version":"modelix-23.1","name":"dashboard","url":"/samples/latest/samples/reference/dashboard.html","titles":[{"text":"Building & Running","hash":"_building_running","id":1},{"text":"1. Build spa-dashboard-angular","hash":"_1_build_spa_dashboard_angular","id":2},{"text":"2. Start an OpenAPI implementation","hash":"_2_start_an_openapi_implementation","id":3},{"text":"3. Run the angular app","hash":"_3_run_the_angular_app","id":4}]},"163":{"id":163,"text":"The language used in all examples is the same. The language itself is fairly small: It describes a very simplified lecture schedule. The language intentionally does not use expressions, creating editors for expressions by hand is very cumbersome and at the time where these samples were created modelix has no support for generating these editors for you. The main concepts of the language are: Room: where lecture are held. Each room has a maximum capacity of students, a name and some additional properties. Lecture: Have a name, some description and reference a room where they are held. And also have a schedule which determines when they are held and if they repeat through the whole semester or are a one time lecture. Student: A student with a name and birthday. Assignment: Lecture assignments for a single student. Some concepts are contained a root node like a Rooms container to make structuring the editors in MPS easier: classDiagram class Rooms { > } class Courses { > } class Students { > } class LectureAssignments { > } Rooms *-- Room : 0..n Courses *-- Lecture: 0..n Lecture .. Room: 1 Lecture *-- Schedule: 1 OneOff (iNode) rooms.children.rooms.forEach { it.properties.name } The code generator has exported the language definition, and we can use to write type safe code that works with the models. For properties and children we now have attributes in the generated classes and if somebody renames a property or child-role the compiler will tell us. Of course the MPSLanguageRegistry.getInstance would throw an exception if our iNode instance isn’t a Rooms instance. The generate class for a Room concept: concept Room extends BaseConcept implements INamedConcept instance can be root: false alias: short description: properties: maxPlaces : integer hasRemoteEquipment : boolean children: > references: > Will look like this: java package University.Schedule.structure; /*Generated by MPS */ import jetbrains.mps.lang.core.structure.BaseConcept; import jetbrains.mps.lang.core.structure.INamedConcept; import org.modelix.mps.apigen.runtime.INodeHolder; import org.jetbrains.annotations.NotNull; import org.modelix.model.api.INode; import org.jetbrains.annotations.Nullable; /** * Generated for http://127.0.0.1:63320/node?ref=r%3Adfa26643-4653-44bc-9dfe-5a6581bcd381%28University.Schedule.structure%29%2F4128798754188010580 */ public class Room extends BaseConcept implements INamedConcept { public class Properties extends BaseConcept.Properties implements INodeHolder, INamedConcept.Properties { @NotNull @Override public INode getINode() { return Room.this.getINode(); } @Nullable public Integer getMaxPlaces() { String propertyValue = getINode().getPropertyValue(\"maxPlaces\"); if (propertyValue != null && !(propertyValue.isEmpty())) { return Integer.parseInt(propertyValue); } return null; } @Nullable public Integer setMaxPlaces(Integer value) { if (value != null) { getINode().setPropertyValue(\"maxPlaces\", Integer.toString(value)); } else { getINode().setPropertyValue(\"maxPlaces\", null); } return value; } @Nullable public Boolean getHasRemoteEquipment() { String propertyValue = getINode().getPropertyValue(\"hasRemoteEquipment\"); if (propertyValue != null && !(propertyValue.isEmpty())) { return Boolean.parseBoolean(propertyValue); } return null; } @Nullable public Boolean setHasRemoteEquipment(@Nullable Boolean value) { if (value != null) { getINode().setPropertyValue(\"hasRemoteEquipment\", Boolean.toString(value)); } else { getINode().setPropertyValue(\"hasRemoteEquipment\", null); } return value; } } public class Children extends BaseConcept.Children implements INodeHolder, INamedConcept.Children { @NotNull @Override public INode getINode() { return Room.this.getINode(); } } public class References extends BaseConcept.References implements INodeHolder, INamedConcept.References { @NotNull @Override public INode getINode() { return Room.this.getINode(); } } private final Properties properties; private final Children children; private final References references; public Room(INode node) { super(node); this.properties = new Properties(); this.children = new Children(); this.references = new References(); } public Properties getProperties() { return this.properties; } public Children getChildren() { return this.children; } public References getReferences() { return this.references; } } At the moment it’s not possible to regenerate the API as part of the CI/gradle build, that’s why the generated sources are checked into the repository. This limitation is specific this example and is somehow caused by the MPS build failing to load the right languages during the build. Other projects are successfully using the api-gen code generator within their CI/gradle build. The limitation will get fixed in the future but for now the generated Java code is checked into the repository.","title":"Meta-model and the Generated Domain-Specific Model API","component":"samples","version":"modelix-23.1","name":"meta-model-model-api","url":"/samples/latest/samples/reference/meta-model-model-api.html","titles":[{"text":"Language","hash":"_language","id":1},{"text":"Generated API","hash":"_generated_api","id":2},{"text":"Limitations","hash":"_limitations","id":3}]},"164":{"id":164,"text":"This 'component' is not a real component but rather a start helper - the model-server is started using the Gradle application plugin. To start the model-server, simply call the following in the repository root: ./gradlew model-server:run --args=\"-inmemory -dumpin courses.modelserver.dump\" As an alternative, you can also use Docker to run an in instance of model-server using the following command: docker run --rm -p 28101:28101 -d modelix/modelix-model:1.3.2 java -XX:MaxRAMPercentage=85 -Djdbc.url=$jdbc_url -cp \"model-server/build/libs/*\" org.modelix.model.server.Main -inmemory","title":"model-server start helper","component":"samples","version":"modelix-23.1","name":"model-server","url":"/samples/latest/samples/reference/model-server.html","titles":[]},"165":{"id":165,"text":"This component of a single openapi.yml file which provides the OpenAPI specification of the REST API implementations serving as examples in this project. The described API provides an additional domain-specific abstraction of the courses domain[1]. The intention of this abstraction is to provide an example on how the use of modelix can be abstracted for eventual consumer apps, such as the Angular based dashboard. The development process thus can follow a API-first approach. Consequently, this openAPI provides a contract of the API behaviour for web teams and a language engineers. There are currently three implementations of this OpenAPI specification: API via model-server API via modelQL 1. This additional abstraction admittedly does not really provide fancy abstractions for this domain. Its purpose is rather educational for you to understand the option to add an additional layer separating web development from language engineering. You do not have to do this. Of course one does not necessarily need such an abstraction layer - any dashboard or web app can directly communicate with the API provided by the model-server together with the generated model API","title":"Intermediate OpenAPI of the Courses domain","component":"samples","version":"modelix-23.1","name":"openapi","url":"/samples/latest/samples/reference/openapi.html","titles":[]},"166":{"id":166,"text":"This project provides a REST API that wraps the functionality of the light-model-server MPS plugin running inside an MPS instance. The provided REST API conforms to the API spec in the openapi.yaml. You can build this subproject individually from the parent folder via all gradle: ./gradlew rest-api-model-ql:build Before running the API provider you need to open the MPS project in the mps folder. The initial gradle build will automatically have set up MPS with the light-model-server plugin and expose the models via query language called ModelQL. This API is then accessed from this openAPI abstraction implementation to load the models. Once your MPS project is opened you can run: ./gradlew rest-api-model-ql:run Once you see a log message like: [DefaultDispatcher-worker-8] INFO ktor.application - Responding at http://0.0.0.0:8090 Your openAPI implementation is ready. Settings such as ports and hosts are defined in the application.conf file. For simple testing you can curl the data provided by the API for example: 🧾 Unfold for examples ```console $ curl -s -X GET \"http://localhost:8090/rooms\" -H \"accept: application/json\" | jq { \"rooms\": [ { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\", \"name\": \"somehjtinghekjrekjrhe\", \"maxPlaces\": 32232121, \"hasRemoteEquipment\": false }, { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\", \"name\": \"Schrödinger\", \"maxPlaces\": 420, \"hasRemoteEquipment\": true } ] } $ curl -s -X GET \"http://localhost:8090/rooms/mps-node%253Ar%253Ace161c54-ea76-40a6-a31d-9d7cd01febe2%2528University.Schedule.sandbox%2529%252F4128798754188058349\" -H \"accept: application/json\" | jq { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\", \"name\": \"Schrödinger\", \"maxPlaces\": 420, \"hasRemoteEquipment\": true } $ curl -s -X GET \"http://localhost:8090/rooms/mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\" -H \"accept: application/json\" | jq { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\", \"name\": \"somehjtinghekjrekjrhe\", \"maxPlaces\": 32232121, \"hasRemoteEquipment\": false } $ curl -s -X GET \"http://localhost:8090/rooms/trash\" -H \"accept: application/json\" | jq \"Can not load Room: null $ curl -s -X GET \"http://localhost:8090/lectures\" -H \"accept: application/json\" | jq curl -s -X GET \"http://localhost:8090/lectures\" -H \"accept: application/json\" | jq { \"lectures\": [ { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058353\", \"name\": \"Physics 101\", \"description\": \"You learn about stuff\", \"maxParticipants\": 42, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\" }, { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F1305729863392535677\", \"name\": \"Physics 102\", \"description\": \"You learn about stuff\", \"maxParticipants\": 42, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\" }, { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188060854\", \"name\": \"New Students Welcome\", \"description\": \"Hello everyone\", \"maxParticipants\": 69, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\" } ] } $ curl -s -X GET \"http://localhost:8090/lectures/mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058353\" -H \"accept: application/json\" | jq { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058353\", \"name\": \"Physics 101\", \"description\": \"You learn about stuff\", \"maxParticipants\": 42, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\" } $ curl -s -X GET \"http://localhost:8090/lectures/trash\" -H \"accept: application/json\" | jq \"Can not load Lecture: null\" Alternatively you can now start the Dashboard to consume this API endpoint.","title":"API via modelQL","component":"samples","version":"modelix-23.1","name":"rest-api-model-ql","url":"/samples/latest/samples/reference/rest-api-model-ql.html","titles":[{"text":"Building","hash":"_building","id":1},{"text":"Usage","hash":"_usage","id":2}]},"167":{"id":167,"text":"This project provides a custom REST API implemented in Quarkus that wraps a model-server instance. The REST API abstracts the generic model-server API for providing the dashboard example with usable data. The provided REST API conforms to the API spec in the openapi.yaml. You can build this subproject individually from the parent folder via all gradle: ./gradlew rest-api-model-server:build Before starting the REST API, a model-server instance needs to be running. The example from the MPS folder has to be deployed on this instance in a repository call courses. Once these preconditions are met, the REST API can be launched with: ./gradlew rest-api-model-server:run For simple testing you can curl the data provided by the API for example: 🧾 Unfold for examples $ curl -s -X GET \"http://localhost:8090/rooms\" -H \"accept: application/json\" | jq { \"rooms\": [ { \"roomRef\": \"r:ce161c54-ea76-40a6-a31d-9d7cd01febe2(unused)/4128798754188058347\", \"name\": \"Einstein\", \"maxPlaces\": 42, \"hasRemoteEquipment\": true }, { \"roomRef\": \"r:ce161c54-ea76-40a6-a31d-9d7cd01febe2(unused)/4128798754188058349\", \"name\": \"Schrödinger\", \"maxPlaces\": 420, \"hasRemoteEquipment\": true } ] } Alternatively you can now start the Dashboard to consume this API. If you want to observe the updates sent on the web socket, you can use wscat to get some insights when updates are sent. wscat -c ws://127.0.0.1:8090/updates","title":"API via model-server","component":"samples","version":"modelix-23.1","name":"rest-api-model-server","url":"/samples/latest/samples/reference/rest-api-model-server.html","titles":[{"text":"Building","hash":"_building","id":1},{"text":"Usage","hash":"_usage","id":2},{"text":"Introspecting the websocket communication","hash":"_introspecting_the_websocket_communication","id":3}]},"168":{"id":168,"text":"This Tutorial shows how to start up a system that implements Use-Case 1: Dashboard The samples provide a total of three architectural variation of this use case: Using the more complex rest-api-model-server backend and the model-server. Using the rest-api-model-ql backend and the light-model-server MPS plugin rest-api-model-server (legacy) + model-server All gradle commands assume you are in the top level folder of the samples repository. To start up the system as described in UC 1a, you first have to have built the entire project: ./gradlew Once done, you need to start all components involved, these are: MPS: Start MPS 2021.2.6 without any global plugins and open the project in the mps/project-mps-backend folder. This MPS project stores the model content using MPS persistence. The gradle build process will have downloaded all plugins needed to mps/project-mps-backend/build/dependencies and declare this folder as a global library. This includes the json-bulk-model-access and the light-model-client. API layer: The rest-api-json-bulk provides the models from the running MPS instance, simply run in a new terminal (it will be a blocking call): $ ./gradlew rest-api-json-bulk:run 🧾 You can expect output similar to this (unfold to see details) > Task :rest-api-json-bulk:run 2022-12-07 10:12:38.874 [DefaultDispatcher-worker-11] INFO ktor.application - Autoreload is disabled because the development mode is off. 2022-12-07 10:12:39.009 [DefaultDispatcher-worker-11] INFO ktor.application - Application started in 0.14 seconds. 2022-12-07 10:12:39.131 [DefaultDispatcher-worker-1] INFO ktor.application - Responding at http://0.0.0.0:8090 91% EXECUTING [2m 20s] > :rest-api-json-bulk:run Dashboard: The dashboard itself is a node application which can be run via in a new terminal (it will be a blocking call): $ ./gradlew spa-dashboard-angular:npmRun 🧾 You can expect output similar to this (unfold to see details) > Task :spa-dashboard-angular:npmRun > angular.io-example@0.0.0 ng > ng serve - Generating browser application bundles (phase: setup)... ✔ Browser application bundle generation complete. Initial Chunk Files | Names | Raw Size vendor.js | vendor | 2.47 MB | polyfills.js | polyfills | 318.03 kB | styles.css, styles.js | styles | 211.31 kB | main.js | main | 86.71 kB | runtime.js | runtime | 6.53 kB | | Initial Total | 3.08 MB Build at: 2022-12-07T09:18:02.345Z - Hash: 186b24edf20c1c4a - Time: 13776ms ** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ ** ✔ Compiled successfully. ✔ Browser application bundle generation complete. 5 unchanged chunks Build at: 2022-12-07T09:18:02.740Z - Hash: 186b24edf20c1c4a - Time: 324ms ✔ Compiled successfully. 95% EXECUTING [29s] > :spa-dashboard-angular:npmRun Explore the dashboard at http://localhost:4200/ Changes to the model in MPS will not automatically synchronize to the dashboard, you will have to manually reload the model.","title":"Run Use-Case 1 Implementation","component":"samples","version":"modelix-23.1","name":"start-usecase-1-a","url":"/samples/latest/samples/tutorial/start-usecase-1-a.html","titles":[{"text":"How to start UC 1a","hash":"_how_to_start_uc_1a","id":1}]},"169":{"id":169,"text":"TODO using the rest-api-model-ql backend and the light-model-server MPS plugin All gradle commands assume you are in the top level folder of this repository. To start up the system as described in UC 1b, you first have to have build the entire project: ./gradlew Once done, you need to start all components involved, these are: modelix model-server: Model knowledge is supplied by the model-sever in this use case. To avoid complicated setups, we simply start the model-server in memory and load the model content from the included dump file, all using gradle: ./gradlew model-server:run --args=\"-inmemory -dumpin courses.modelserver.dump\" 🧾 You can expect output similar to this (unfold to see details) ./gradlew model-server:run --args=\"-inmemory -dumpin courses.modelserver.dump\" > Task :model-server:run 18:33:16,185 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml] 18:33:16,186 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy] 18:33:16,186 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [jar:file:/home/nkoester/.gradle/caches/modules-2/files-2.1/org.modelix/model-server-fatjar/1.3.2/1e6502c0e8282b1fe2c06824ad43f4d7270f20d7/model-server-fatjar-1.3.2.jar!/logback.xml] 18:33:16,194 |-INFO in ch.qos.logback.core.joran.spi.ConfigurationWatchList@f4168b8 - URL [jar:file:/home/nkoester/.gradle/caches/modules-2/files-2.1/org.modelix/model-server-fatjar/1.3.2/1e6502c0e8282b1fe2c06824ad43f4d7270f20d7/model-server-fatjar-1.3.2.jar!/logback.xml] is not of type file 18:33:16,269 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender] 18:33:16,270 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [console] 18:33:16,272 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property 18:33:16,282 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.modelix] to DEBUG 18:33:16,282 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [console] to Logger[org.modelix] 18:33:16,282 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to INFO 18:33:16,282 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [console] to Logger[ROOT] 18:33:16,282 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration. 18:33:16,283 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@7ff95560 - Registering current configuration as safe fallback point 18:33:16.295 [main] INFO org.modelix.model.server.Main - Max memory (bytes): 32178700288 18:33:16.295 [main] INFO org.modelix.model.server.Main - Max memory (bytes): 32178700288 18:33:16.295 [main] INFO org.modelix.model.server.Main - Server process started 18:33:16.295 [main] INFO org.modelix.model.server.Main - Server process started 18:33:16.295 [main] INFO org.modelix.model.server.Main - In memory: true 18:33:16.295 [main] INFO org.modelix.model.server.Main - In memory: true 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to secret file: /secrets/modelsecret/modelsecret.txt 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to secret file: /secrets/modelsecret/modelsecret.txt 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to JDBC configuration file: null 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to JDBC configuration file: null 18:33:16.296 [main] INFO org.modelix.model.server.Main - Schema initialization: false 18:33:16.296 [main] INFO org.modelix.model.server.Main - Schema initialization: false 18:33:16.296 [main] INFO org.modelix.model.server.Main - Set values: [] 18:33:16.296 [main] INFO org.modelix.model.server.Main - Set values: [] 18:33:16.296 [main] INFO org.modelix.model.server.Main - Port: 28101 18:33:16.296 [main] INFO org.modelix.model.server.Main - Port: 28101 Values loaded from /home/nkoester/git/modelix/modelix-sample/model-server/courses.modelserver.dump (73) 18:33:16.364 [main] INFO ktor.application - Autoreload is disabled because the development mode is off. 18:33:16.428 [main] INFO ktor.application - Application started in 0.088 seconds. 18:33:16.518 [DefaultDispatcher-worker-1] INFO ktor.application - Responding at http://0.0.0.0:28101 85% EXECUTING [7s] > :model-server:run API layer: The rest-api-model-server provides an abstraction of the model from the previously started model-server, simply run in a new terminal (it will be a blocking call): $ ./gradlew rest-api-model-server:quarkusDev 🧾 You can expect output similar to this (unfold to see details) $ ./gradlew rest-api-model-server:quarkusDev > Task :rest-api-model-server:quarkusDev Listening for transport dt_socket at address: 5005 Press [h] for more options>NG [8s] Tests paused Press [r] to resume testing, [h] for more options> Press [r] to resume testing, [o] Toggle test output, [h] for more options> __ ____ __ _____ ___ __ ____ ______ --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/ -/ /_/ / /_/ / __ |/ , _/ , 95% EXECUTING [16s] > :rest-api-model-server:quarkusDev Dashboard: The dashboard itself is a node application which can be run via in a new terminal (it will be a blocking call): $ ./gradlew spa-dashboard-angular:npmRun 🧾 You can expect output similar to this (unfold to see details) > Task :spa-dashboard-angular:npmRun > angular.io-example@0.0.0 ng > ng serve - Generating browser application bundles (phase: setup)... ✔ Browser application bundle generation complete. Initial Chunk Files | Names | Raw Size vendor.js | vendor | 2.47 MB | polyfills.js | polyfills | 318.03 kB | styles.css, styles.js | styles | 211.31 kB | main.js | main | 86.71 kB | runtime.js | runtime | 6.53 kB | | Initial Total | 3.08 MB Build at: 2022-12-07T09:18:02.345Z - Hash: 186b24edf20c1c4a - Time: 13776ms ** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ ** ✔ Compiled successfully. ✔ Browser application bundle generation complete. 5 unchanged chunks Build at: 2022-12-07T09:18:02.740Z - Hash: 186b24edf20c1c4a - Time: 324ms ✔ Compiled successfully. 95% EXECUTING [29s] > :spa-dashboard-angular:npmRun MPS: Start MPS 2021.2.6 without any global plugins and open the project in the mps/project-modelserver-backend folder. This MPS project does not store the model locally and instead obtains them from the model-server via the cloud-access plugin. The gradle build process will have downloaded all plugins needed to mps/project-modelserver-backend/build/dependencies and declare this folder as a global library. This includes the cloud-access plugin. Explore the dashboard at http://localhost:4200/ Changes to the model in MPS will automatically synchronize to the dashboard All gradle commands assume you are in the top level folder of this repository. To start up the system as described in UC 1c, you first have to have built the entire project: ./gradlew Once done, you need to start all components involved, these are: MPS: Start MPS 2021.2.6 without any global plugins and open the project in the mps/project-mps-backend folder. This MPS project stores the model content using MPS persistence. The gradle build process will have downloaded all plugins needed to mps/project-mps-backend/build/dependencies and declare this folder as a global library. This includes the light-model-server plugin used in this example UC. API layer: The light-model-server provides the models from the running MPS instance, simply run in a new terminal (it will be a blocking call): $ ./gradlew rest-api-model-ql:run 🧾 You can expect output similar to this (unfold to see details) > Task :rest-api-model-ql:run 2023-01-25 18:46:48.977 [main] INFO o.m.s.r.ModelServerLightWrapper - Connecting to light model-server at ws://localhost:48302/ws 2023-01-25 18:46:49.044 [main] INFO o.m.s.r.ModelServerLightWrapper - Connection successful 2023-01-25 18:46:49.070 [main] INFO ktor.application - Autoreload is disabled because the development mode is off. 2023-01-25 18:46:49.346 [main] INFO ktor.application - Application started in 0.286 seconds. 2023-01-25 18:46:49.455 [DefaultDispatcher-worker-4] INFO ktor.application - Responding at http://0.0.0.0:8090 2023-01-25 18:46:50.806 [eventLoopGroupProxy-4-1] INFO o.m.s.r.ModelServerLightWrapper - Resolving node trash 94% EXECUTING [26m 13s] > :rest-api-model-ql:run Dashboard: The dashboard itself is a node application which can be run via in a new terminal (it will be a blocking call): `$ ./gradlew spa-dashboard-angular:npmRun ` 🧾 You can expect output similar to this (unfold to see details) > Task :spa-dashboard-angular:npmRun > angular.io-example@0.0.0 ng > ng serve - Generating browser application bundles (phase: setup)... ✔ Browser application bundle generation complete. Initial Chunk Files | Names | Raw Size vendor.js | vendor | 2.47 MB | polyfills.js | polyfills | 318.03 kB | styles.css, styles.js | styles | 211.31 kB | main.js | main | 86.71 kB | runtime.js | runtime | 6.53 kB | | Initial Total | 3.08 MB Build at: 2022-12-07T09:18:02.345Z - Hash: 186b24edf20c1c4a - Time: 13776ms ** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ ** ✔ Compiled successfully. ✔ Browser application bundle generation complete. 5 unchanged chunks Build at: 2022-12-07T09:18:02.740Z - Hash: 186b24edf20c1c4a - Time: 324ms ✔ Compiled successfully. 95% EXECUTING [29s] > :spa-dashboard-angular:npmRun Explore the dashboard at http://localhost:4200/ Changes to the model in MPS will not automatically synchronize to the dashboard, you will have to manually reload the model.","title":"Run Use-Case 2a Implementation","component":"samples","version":"modelix-23.1","name":"start-usecase-1-b","url":"/samples/latest/samples/tutorial/start-usecase-1-b.html","titles":[{"text":"How to start UC 1b","hash":"_how_to_start_uc_1b","id":1},{"text":"How to start UC 1c","hash":"_how_to_start_uc_1c","id":2}]},"170":{"id":170,"text":"TODO startup tutorial","title":"","component":"samples","version":"modelix-23.1","name":"startup-usecases","url":"/samples/latest/samples/tutorial/startup-usecases.html","titles":[]},"171":{"id":171,"text":"The examples are currently work in progress and are develop alongside the modelix platform development. The modelix samples repository contains a couple of examples that show various aspects of the modelix platform. The primary focus of the samples is to show how you can apply modelix to bring languages and models defined in MPS into the web. On the basis of (meta-)models defined in MPS, external access is provided using JVM (Java/Kotlin) and web frameworks/tools. Everything shown in the samples is intended to enable you to come up with your own use-cases and architectures based on what is provided here. Not all features of modelix are shown here so this is not a complete demo of everything modelix can do. None of the examples try to reuse editors defined in MPS. If your goal is to reuse MPS editors as is then modelix itself ships with a projector integration to achieve this. While all the examples use the same language defined in MPS they are not meant as one complete example but rather as individual parts. The purpose of the examples is to give inspiration of what is possible with modelix and make you think and envision your own use-cases. The modelix project uses Gradle to build the individual components. Simply call the following in the top level folder of a repository: ./gradlew build # mac/linux or if you are on windows use: gradlew.bat build # windows At the moment most modelix artifacts are stored on the itemis nexus with no access restriction. As a consequence, when you build modelix or use modelix components via Gradle there is no repository access setup required. This is optional when you want to obtain modelix artifacts from GitHub packages rather than the itemis nexus server. Most packages are also published to GitHub packages for which a GithHub account and credentials are required. To access GitHub packaged you need to specify your credentials. First of all you will need to generate a personal access token with access to GitHub Packages. The project assumes that your username is available as the variable gpr.user and the token as gpr.key. The easiest way to configure the credentials is copy the example below, paste it into the gradle.properties file in the repository and replace the values with your credentials: gpr.user= gpr.key= Gradle also supports other locations for specifying these properties. Once the initial build has completes you can dive in with the following: Read explanations in the Courses Domain: MPS Language and Model Read the use-cases these samples cover in the Use Cases of the Sample project Understand the repository in the Sample Repository Structure Inspect and edit the project with the code editor of your choice. The top folder in the repository provides IntelliJ configurations, the mps folder is a sub-project can be opened using MPS 2021.2.6, and the spa-dashboard-angular folder is a WebStorm project. Start sample components which realize use case samples:tutorial/startup-usecases.adoc","title":"Welcome to the modelix samples!","component":"samples","version":"main","name":"index","url":"/samples/main/samples/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Getting Started","hash":"_getting_started","id":2},{"text":"Build components using Gradle","hash":"_build_components_using_gradle","id":3},{"text":"Build from console","hash":"_build_from_console","id":4},{"text":"modelix Artifact Publication","hash":"_modelix_artifact_publication","id":5},{"text":"How to set up GitHub packages authentication","hash":"_how_to_set_up_github_packages_authentication","id":6},{"text":"Entry Points","hash":"_entry_points","id":7}]},"172":{"id":172,"text":"","title":"Courses Domain: MPS Language and Model","component":"samples","version":"main","name":"courses-domain","url":"/samples/main/samples/explanation/courses-domain.html","titles":[]},"173":{"id":173,"text":"The repository of the modelix samples is a single gradle project to make building everything at once easy. The examples are organized by the technology they use into the various sub-folders: Components/Tech Description Status Folder MPS + cloud-plugin MPS language definition that is used by all examples. The MPS language structure is used to generate a Java API consumed by all examples. ✅ mps MPS, metamodel-generator Generated Kotlin API from the MPS language. ✅ mps/metamodel OpenAPI A hand-crafted OpenAPI specification that defines domain-specific REST endpoints which expose the model contents. ✅ openapi model-server + Quarkus An implementation of the OpenAPI that exposes the model contents REST. Obtains model data from a running model-server. ✅ rest-api-model-server ligh-model-server+ ModelQL + Ktor An implementation of the OpenAPI that exposes the model contents REST. Obtains model data from a running the light-model-server MPS plugin. ✅ rest-api-model-ql Angular via REST A single page app that realizes a read-only dashboard. Can connect to either of the OpenAPI implementations. ✅ spa-dashboard-angular Each component documentation with component specific content.","title":"Sample Repository Structure","component":"samples","version":"main","name":"structure","url":"/samples/main/samples/explanation/structure.html","titles":[]},"174":{"id":174,"text":"The imaginary domain use-case represents a dashboard like view on model content. This use-case envisions a scenario where an independent client (outside of MPS) wants to consume the content of models defined in MPS, thus requiring read only access. There are two different variations of this use-case: Use Case 1a: Dashboard view next to Room In this variation, we envision a display next to each room that shows the upcoming lectures in that room. A low power display such as an low power e-ink with showing a simple website via wifi would be sufficient for this scenario. Use Case 1b: Dashboard View in the Main Hall In this variation, we envision a display in the main hall shows the full schedule of all the lectures of the current day. A large display would be used for this scenario, showing a website via wifi which contains the complete schedule. In both variations, the clients do not need to edit these models and are not capable to run a full MPS instance to show the model content. While the e-ink display does not require automatic updates (the display simply refreshes periodically every 15 minutes), the display in the main hall will require automatic updates (having more power and being a central display it would want to show the newest information at all times). The dashboard component, an angular app that serves the content of a model, implements such a simple single page application (SPA) for this use-case.","title":"Use-Case 1: Dashboard","component":"samples","version":"main","name":"usecase-1","url":"/samples/main/samples/explanation/usecase-1.html","titles":[]},"175":{"id":175,"text":"","title":"Use-Case 2: Manual Schedule Creation","component":"samples","version":"main","name":"usecase-2","url":"/samples/main/samples/explanation/usecase-2.html","titles":[]},"176":{"id":176,"text":"Given the courses domain and its meta-model explained here, the samples project covers two use-cases: Use-Case 1: Dashboard Use-Case 2: Manual Schedule Creation To illustrate how the different use-cases and component architecture relate, this section provides a short tabular description. Use Case Variant Backend MPS Backend model-server Use Case 1: Dashboard view 1a. light-model-server-client + rest-api-model-ql light-model-server-client + rest-api-model-ql 1b. json-bulk-model-access + rest-api-json-bulk ❌ Use Case 2: Real-time collaboration 🏗️ 🏗️","title":"Use Cases of the Sample project","component":"samples","version":"main","name":"usecases","url":"/samples/main/samples/explanation/usecases.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Use-Case Architecture Mapping","hash":"_use_case_architecture_mapping","id":2}]},"177":{"id":177,"text":"This samples implementations allow to run different use-cases in different setups - thus showing the flexibility of the modelix platform. Depending on the chosen use-case, only a subset of the components in this repository are used. The full architecture includes components used for multiple use-cases. One does not need all components to realize individual use-cases. In the following a short overview is given on each component. The meta-model (language) of the courses domain and a model (soulution) with sample data in JetBrains MPS on which everything in this sample is based. ▶️ For more details, see the Language section in the MPS component documentation An API based on the meta-model generated with the metamodel-generator component from modelix. ▶️ For more details, see the 'Generated API' section in the MPS component documentation In this example project, an extra domain-specific API layer is added which is defined in the OpenAPI specification[1]. This layer is meant educational as no noteworthy abstractions from the language itself happen in this definition. It intends to show how one introduces a clearly defined domain-specific abstraction decoupling the language engineering (meta-modeling) and the web development. We provide two backends (i.e. implementations of the API layer): The API via modelQL and API via model-server components. ▶️ For more details, see the OpenAPI component documentation. This project provides two implementations of the openapi domain abstraction. MPS as a source This backend provides access to the model by obtaining the model knowledge directly from a running MPS instance. It is implemented using ktor and connects to a model-client plugin running inside of MPS. This component can only provide read and write access. ▶️ For more details, see the API via modelQL for details. model-server as a source This backend provides access to the model by connecting to a running model-server. It is implemented using Quarkus and can provide read access to the underlying model. Additionally, a websocket for push notifications about ongoing model changes is provided. This is realized using websockets exposed by the model-server. ▶️ For more details, also see the API via model-server component for details. The dashboard provides access to model knowledge through a browser. As it is conforming to the OpenAPI specification, the dashboard is able to obtain the model content from both backend implementations. However, the dashboard is consequently limited by the chosen backend. This components requires running any of the available OpenAPI implementations to obtain model knowledge from. ▶️ For more details, also see the Dashboard for details. ⚠️ TBD ⚠️ TBD 1. See https://www.openapis.org/ for details on how OpenAPI works.","title":"System architecture and components in this repository","component":"samples","version":"main","name":"architecture","url":"/samples/main/samples/reference/architecture.html","titles":[{"text":"Full system architecture","hash":"_full_system_architecture","id":1},{"text":"The MPS Language","hash":"_the_mps_language","id":2},{"text":"Generated model API (domain API","hash":"_generated_model_api_domain_api","id":3},{"text":"Domain-specific OpenAPI","hash":"_domain_specific_openapi","id":4},{"text":"OpenAPI implementation","hash":"_openapi_implementation","id":5},{"text":"Single-page application (SPA) Dashboard","hash":"_single_page_application_spa_dashboard","id":6},{"text":"Real-time' collaboration web application","hash":"_real_time_collaboration_web_application","id":7},{"text":"Deploying to Docker / Kubernetes","hash":"_deploying_to_docker_kubernetes","id":8}]},"178":{"id":178,"text":"Figure 1. The SPA Dashboard Figure 2. View on a single Lecture in the Dashboard This component provides a single page application which accesses an implementation of the sample OpenAPI specification. The idea here is to illustrate a read only use-case where a system/service outside of MPS wants to consume the content of models previously defined in MPS. This dashboard is a single-page app showing content obtained from the intermediate REST APIs. A user cannot edit these models from the browser. It does not matter whether MPS is used to store the model information (e.g. by running an MPS instance in the cloud), or alternatively the modelix model-server is used. You can build this subproject individually from the parent folder via via Gradle: ./gradlew spa-dashboard-angular:build To run this application you will need a component which provides an API implementation conforming to the OpenAPI spec. Thus, you need to start one of the available OpenAPI implementations in this project: Either start the rest-api-model-ql implementation, or alternatively you can start the rest-api-model-server implementation. Check the documentation of the corresponding project parts on how to start them. Make sure you have the correct ports defined in the API URLs. This app expects 8090 by default. Next run this single page application via: ./gradlew spa-dashboard-angular:npmRun You can then go to http://localhost:4200 to see a dashboard with the courses model content.","title":"Single page application: An Angular based dashboard","component":"samples","version":"main","name":"dashboard","url":"/samples/main/samples/reference/dashboard.html","titles":[{"text":"Building & Running","hash":"_building_running","id":1},{"text":"1. Build spa-dashboard-angular","hash":"_1_build_spa_dashboard_angular","id":2},{"text":"2. Start an OpenAPI implementation","hash":"_2_start_an_openapi_implementation","id":3},{"text":"3. Run the angular app","hash":"_3_run_the_angular_app","id":4}]},"179":{"id":179,"text":"The language used in all examples is the same. The language itself is fairly small: It describes a very simplified lecture schedule. The language intentionally does not use expressions, creating editors for expressions by hand is very cumbersome and at the time where these samples were created modelix has no support for generating these editors for you. The main concepts of the language are: Room: where lecture are held. Each room has a maximum capacity of students, a name and some additional properties. Lecture: Have a name, some description and reference a room where they are held. And also have a schedule which determines when they are held and if they repeat through the whole semester or are a one time lecture. Student: A student with a name and birthday. Assignment: Lecture assignments for a single student. Some concepts are contained a root node like a Rooms container to make structuring the editors in MPS easier: classDiagram class Rooms { > } class Courses { > } class Students { > } class LectureAssignments { > } Rooms *-- Room : 0..n Courses *-- Lecture: 0..n Lecture .. Room: 1 Lecture *-- Schedule: 1 OneOff (iNode) rooms.children.rooms.forEach { it.properties.name } The code generator has exported the language definition, and we can use to write type safe code that works with the models. For properties and children we now have attributes in the generated classes and if somebody renames a property or child-role the compiler will tell us. Of course the MPSLanguageRegistry.getInstance would throw an exception if our iNode instance isn’t a Rooms instance. The generate class for a Room concept: concept Room extends BaseConcept implements INamedConcept instance can be root: false alias: short description: properties: maxPlaces : integer hasRemoteEquipment : boolean children: > references: > Will look like this: java package University.Schedule.structure; /*Generated by MPS */ import jetbrains.mps.lang.core.structure.BaseConcept; import jetbrains.mps.lang.core.structure.INamedConcept; import org.modelix.mps.apigen.runtime.INodeHolder; import org.jetbrains.annotations.NotNull; import org.modelix.model.api.INode; import org.jetbrains.annotations.Nullable; /** * Generated for http://127.0.0.1:63320/node?ref=r%3Adfa26643-4653-44bc-9dfe-5a6581bcd381%28University.Schedule.structure%29%2F4128798754188010580 */ public class Room extends BaseConcept implements INamedConcept { public class Properties extends BaseConcept.Properties implements INodeHolder, INamedConcept.Properties { @NotNull @Override public INode getINode() { return Room.this.getINode(); } @Nullable public Integer getMaxPlaces() { String propertyValue = getINode().getPropertyValue(\"maxPlaces\"); if (propertyValue != null && !(propertyValue.isEmpty())) { return Integer.parseInt(propertyValue); } return null; } @Nullable public Integer setMaxPlaces(Integer value) { if (value != null) { getINode().setPropertyValue(\"maxPlaces\", Integer.toString(value)); } else { getINode().setPropertyValue(\"maxPlaces\", null); } return value; } @Nullable public Boolean getHasRemoteEquipment() { String propertyValue = getINode().getPropertyValue(\"hasRemoteEquipment\"); if (propertyValue != null && !(propertyValue.isEmpty())) { return Boolean.parseBoolean(propertyValue); } return null; } @Nullable public Boolean setHasRemoteEquipment(@Nullable Boolean value) { if (value != null) { getINode().setPropertyValue(\"hasRemoteEquipment\", Boolean.toString(value)); } else { getINode().setPropertyValue(\"hasRemoteEquipment\", null); } return value; } } public class Children extends BaseConcept.Children implements INodeHolder, INamedConcept.Children { @NotNull @Override public INode getINode() { return Room.this.getINode(); } } public class References extends BaseConcept.References implements INodeHolder, INamedConcept.References { @NotNull @Override public INode getINode() { return Room.this.getINode(); } } private final Properties properties; private final Children children; private final References references; public Room(INode node) { super(node); this.properties = new Properties(); this.children = new Children(); this.references = new References(); } public Properties getProperties() { return this.properties; } public Children getChildren() { return this.children; } public References getReferences() { return this.references; } } At the moment it’s not possible to regenerate the API as part of the CI/gradle build, that’s why the generated sources are checked into the repository. This limitation is specific this example and is somehow caused by the MPS build failing to load the right languages during the build. Other projects are successfully using the api-gen code generator within their CI/gradle build. The limitation will get fixed in the future but for now the generated Java code is checked into the repository.","title":"Meta-model and the Generated Domain-Specific Model API","component":"samples","version":"main","name":"meta-model-model-api","url":"/samples/main/samples/reference/meta-model-model-api.html","titles":[{"text":"Language","hash":"_language","id":1},{"text":"Generated API","hash":"_generated_api","id":2},{"text":"Limitations","hash":"_limitations","id":3}]},"180":{"id":180,"text":"This 'component' is not a real component but rather a start helper - the model-server is started using the Gradle application plugin. To start the model-server, simply call the following in the repository root: ./gradlew model-server:run --args=\"-inmemory -dumpin courses.modelserver.dump\" As an alternative, you can also use Docker to run an in instance of model-server using the following command: docker run --rm -p 28101:28101 -d modelix/modelix-model:1.3.2 java -XX:MaxRAMPercentage=85 -Djdbc.url=$jdbc_url -cp \"model-server/build/libs/*\" org.modelix.model.server.Main -inmemory","title":"model-server start helper","component":"samples","version":"main","name":"model-server","url":"/samples/main/samples/reference/model-server.html","titles":[]},"181":{"id":181,"text":"This component of a single openapi.yml file which provides the OpenAPI specification of the REST API implementations serving as examples in this project. The described API provides an additional domain-specific abstraction of the courses domain[1]. The intention of this abstraction is to provide an example on how the use of modelix can be abstracted for eventual consumer apps, such as the Angular based dashboard. The development process thus can follow a API-first approach. Consequently, this openAPI provides a contract of the API behaviour for web teams and a language engineers. There are currently three implementations of this OpenAPI specification: API via model-server API via modelQL 1. This additional abstraction admittedly does not really provide fancy abstractions for this domain. Its purpose is rather educational for you to understand the option to add an additional layer separating web development from language engineering. You do not have to do this. Of course one does not necessarily need such an abstraction layer - any dashboard or web app can directly communicate with the API provided by the model-server together with the generated model API","title":"Intermediate OpenAPI of the Courses domain","component":"samples","version":"main","name":"openapi","url":"/samples/main/samples/reference/openapi.html","titles":[]},"182":{"id":182,"text":"This project provides a REST API that wraps the functionality of the light-model-server MPS plugin running inside an MPS instance. The provided REST API conforms to the API spec in the openapi.yaml. You can build this subproject individually from the parent folder via all gradle: ./gradlew rest-api-model-ql:build Before running the API provider you need to open the MPS project in the mps folder. The initial gradle build will automatically have set up MPS with the light-model-server plugin and expose the models via query language called ModelQL. This API is then accessed from this openAPI abstraction implementation to load the models. Once your MPS project is opened you can run: ./gradlew rest-api-model-ql:run Once you see a log message like: [DefaultDispatcher-worker-8] INFO ktor.application - Responding at http://0.0.0.0:8090 Your openAPI implementation is ready. Settings such as ports and hosts are defined in the application.conf file. For simple testing you can curl the data provided by the API for example: 🧾 Unfold for examples ```console $ curl -s -X GET \"http://localhost:8090/rooms\" -H \"accept: application/json\" | jq { \"rooms\": [ { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\", \"name\": \"somehjtinghekjrekjrhe\", \"maxPlaces\": 32232121, \"hasRemoteEquipment\": false }, { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\", \"name\": \"Schrödinger\", \"maxPlaces\": 420, \"hasRemoteEquipment\": true } ] } $ curl -s -X GET \"http://localhost:8090/rooms/mps-node%253Ar%253Ace161c54-ea76-40a6-a31d-9d7cd01febe2%2528University.Schedule.sandbox%2529%252F4128798754188058349\" -H \"accept: application/json\" | jq { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\", \"name\": \"Schrödinger\", \"maxPlaces\": 420, \"hasRemoteEquipment\": true } $ curl -s -X GET \"http://localhost:8090/rooms/mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\" -H \"accept: application/json\" | jq { \"roomRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\", \"name\": \"somehjtinghekjrekjrhe\", \"maxPlaces\": 32232121, \"hasRemoteEquipment\": false } $ curl -s -X GET \"http://localhost:8090/rooms/trash\" -H \"accept: application/json\" | jq \"Can not load Room: null $ curl -s -X GET \"http://localhost:8090/lectures\" -H \"accept: application/json\" | jq curl -s -X GET \"http://localhost:8090/lectures\" -H \"accept: application/json\" | jq { \"lectures\": [ { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058353\", \"name\": \"Physics 101\", \"description\": \"You learn about stuff\", \"maxParticipants\": 42, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\" }, { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F1305729863392535677\", \"name\": \"Physics 102\", \"description\": \"You learn about stuff\", \"maxParticipants\": 42, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\" }, { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188060854\", \"name\": \"New Students Welcome\", \"description\": \"Hello everyone\", \"maxParticipants\": 69, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058349\" } ] } $ curl -s -X GET \"http://localhost:8090/lectures/mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058353\" -H \"accept: application/json\" | jq { \"lectureRef\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058353\", \"name\": \"Physics 101\", \"description\": \"You learn about stuff\", \"maxParticipants\": 42, \"room\": \"mps-node%3Ar%3Ace161c54-ea76-40a6-a31d-9d7cd01febe2%28University.Schedule.sandbox%29%2F4128798754188058347\" } $ curl -s -X GET \"http://localhost:8090/lectures/trash\" -H \"accept: application/json\" | jq \"Can not load Lecture: null\" Alternatively you can now start the Dashboard to consume this API endpoint.","title":"API via modelQL","component":"samples","version":"main","name":"rest-api-model-ql","url":"/samples/main/samples/reference/rest-api-model-ql.html","titles":[{"text":"Building","hash":"_building","id":1},{"text":"Usage","hash":"_usage","id":2}]},"183":{"id":183,"text":"This project provides a custom REST API implemented in Quarkus that wraps a model-server instance. The REST API abstracts the generic model-server API for providing the dashboard example with usable data. The provided REST API conforms to the API spec in the openapi.yaml. You can build this subproject individually from the parent folder via all gradle: ./gradlew rest-api-model-server:build Before starting the REST API, a model-server instance needs to be running. The example from the MPS folder has to be deployed on this instance in a repository call courses. Once these preconditions are met, the REST API can be launched with: ./gradlew rest-api-model-server:run For simple testing you can curl the data provided by the API for example: 🧾 Unfold for examples $ curl -s -X GET \"http://localhost:8090/rooms\" -H \"accept: application/json\" | jq { \"rooms\": [ { \"roomRef\": \"r:ce161c54-ea76-40a6-a31d-9d7cd01febe2(unused)/4128798754188058347\", \"name\": \"Einstein\", \"maxPlaces\": 42, \"hasRemoteEquipment\": true }, { \"roomRef\": \"r:ce161c54-ea76-40a6-a31d-9d7cd01febe2(unused)/4128798754188058349\", \"name\": \"Schrödinger\", \"maxPlaces\": 420, \"hasRemoteEquipment\": true } ] } Alternatively you can now start the Dashboard to consume this API. If you want to observe the updates sent on the web socket, you can use wscat to get some insights when updates are sent. wscat -c ws://127.0.0.1:8090/updates","title":"API via model-server","component":"samples","version":"main","name":"rest-api-model-server","url":"/samples/main/samples/reference/rest-api-model-server.html","titles":[{"text":"Building","hash":"_building","id":1},{"text":"Usage","hash":"_usage","id":2},{"text":"Introspecting the websocket communication","hash":"_introspecting_the_websocket_communication","id":3}]},"184":{"id":184,"text":"This Tutorial shows how to start up a system that implements Use-Case 1: Dashboard The samples provide a total of three architectural variation of this use case: Using the more complex rest-api-model-server backend and the model-server. Using the rest-api-model-ql backend and the light-model-server MPS plugin rest-api-model-server (legacy) + model-server All gradle commands assume you are in the top level folder of the samples repository. To start up the system as described in UC 1a, you first have to have built the entire project: ./gradlew Once done, you need to start all components involved, these are: MPS: Start MPS 2021.2.6 without any global plugins and open the project in the mps/project-mps-backend folder. This MPS project stores the model content using MPS persistence. The gradle build process will have downloaded all plugins needed to mps/project-mps-backend/build/dependencies and declare this folder as a global library. This includes the json-bulk-model-access and the light-model-client. API layer: The rest-api-json-bulk provides the models from the running MPS instance, simply run in a new terminal (it will be a blocking call): $ ./gradlew rest-api-json-bulk:run 🧾 You can expect output similar to this (unfold to see details) > Task :rest-api-json-bulk:run 2022-12-07 10:12:38.874 [DefaultDispatcher-worker-11] INFO ktor.application - Autoreload is disabled because the development mode is off. 2022-12-07 10:12:39.009 [DefaultDispatcher-worker-11] INFO ktor.application - Application started in 0.14 seconds. 2022-12-07 10:12:39.131 [DefaultDispatcher-worker-1] INFO ktor.application - Responding at http://0.0.0.0:8090 91% EXECUTING [2m 20s] > :rest-api-json-bulk:run Dashboard: The dashboard itself is a node application which can be run via in a new terminal (it will be a blocking call): $ ./gradlew spa-dashboard-angular:npmRun 🧾 You can expect output similar to this (unfold to see details) > Task :spa-dashboard-angular:npmRun > angular.io-example@0.0.0 ng > ng serve - Generating browser application bundles (phase: setup)... ✔ Browser application bundle generation complete. Initial Chunk Files | Names | Raw Size vendor.js | vendor | 2.47 MB | polyfills.js | polyfills | 318.03 kB | styles.css, styles.js | styles | 211.31 kB | main.js | main | 86.71 kB | runtime.js | runtime | 6.53 kB | | Initial Total | 3.08 MB Build at: 2022-12-07T09:18:02.345Z - Hash: 186b24edf20c1c4a - Time: 13776ms ** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ ** ✔ Compiled successfully. ✔ Browser application bundle generation complete. 5 unchanged chunks Build at: 2022-12-07T09:18:02.740Z - Hash: 186b24edf20c1c4a - Time: 324ms ✔ Compiled successfully. 95% EXECUTING [29s] > :spa-dashboard-angular:npmRun Explore the dashboard at http://localhost:4200/ Changes to the model in MPS will not automatically synchronize to the dashboard, you will have to manually reload the model.","title":"Run Use-Case 1 Implementation","component":"samples","version":"main","name":"start-usecase-1-a","url":"/samples/main/samples/tutorial/start-usecase-1-a.html","titles":[{"text":"How to start UC 1a","hash":"_how_to_start_uc_1a","id":1}]},"185":{"id":185,"text":"TODO using the rest-api-model-ql backend and the light-model-server MPS plugin All gradle commands assume you are in the top level folder of this repository. To start up the system as described in UC 1b, you first have to have build the entire project: ./gradlew Once done, you need to start all components involved, these are: modelix model-server: Model knowledge is supplied by the model-sever in this use case. To avoid complicated setups, we simply start the model-server in memory and load the model content from the included dump file, all using gradle: ./gradlew model-server:run --args=\"-inmemory -dumpin courses.modelserver.dump\" 🧾 You can expect output similar to this (unfold to see details) ./gradlew model-server:run --args=\"-inmemory -dumpin courses.modelserver.dump\" > Task :model-server:run 18:33:16,185 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml] 18:33:16,186 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy] 18:33:16,186 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [jar:file:/home/nkoester/.gradle/caches/modules-2/files-2.1/org.modelix/model-server-fatjar/1.3.2/1e6502c0e8282b1fe2c06824ad43f4d7270f20d7/model-server-fatjar-1.3.2.jar!/logback.xml] 18:33:16,194 |-INFO in ch.qos.logback.core.joran.spi.ConfigurationWatchList@f4168b8 - URL [jar:file:/home/nkoester/.gradle/caches/modules-2/files-2.1/org.modelix/model-server-fatjar/1.3.2/1e6502c0e8282b1fe2c06824ad43f4d7270f20d7/model-server-fatjar-1.3.2.jar!/logback.xml] is not of type file 18:33:16,269 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender] 18:33:16,270 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [console] 18:33:16,272 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property 18:33:16,282 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.modelix] to DEBUG 18:33:16,282 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [console] to Logger[org.modelix] 18:33:16,282 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to INFO 18:33:16,282 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [console] to Logger[ROOT] 18:33:16,282 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration. 18:33:16,283 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@7ff95560 - Registering current configuration as safe fallback point 18:33:16.295 [main] INFO org.modelix.model.server.Main - Max memory (bytes): 32178700288 18:33:16.295 [main] INFO org.modelix.model.server.Main - Max memory (bytes): 32178700288 18:33:16.295 [main] INFO org.modelix.model.server.Main - Server process started 18:33:16.295 [main] INFO org.modelix.model.server.Main - Server process started 18:33:16.295 [main] INFO org.modelix.model.server.Main - In memory: true 18:33:16.295 [main] INFO org.modelix.model.server.Main - In memory: true 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to secret file: /secrets/modelsecret/modelsecret.txt 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to secret file: /secrets/modelsecret/modelsecret.txt 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to JDBC configuration file: null 18:33:16.296 [main] INFO org.modelix.model.server.Main - Path to JDBC configuration file: null 18:33:16.296 [main] INFO org.modelix.model.server.Main - Schema initialization: false 18:33:16.296 [main] INFO org.modelix.model.server.Main - Schema initialization: false 18:33:16.296 [main] INFO org.modelix.model.server.Main - Set values: [] 18:33:16.296 [main] INFO org.modelix.model.server.Main - Set values: [] 18:33:16.296 [main] INFO org.modelix.model.server.Main - Port: 28101 18:33:16.296 [main] INFO org.modelix.model.server.Main - Port: 28101 Values loaded from /home/nkoester/git/modelix/modelix-sample/model-server/courses.modelserver.dump (73) 18:33:16.364 [main] INFO ktor.application - Autoreload is disabled because the development mode is off. 18:33:16.428 [main] INFO ktor.application - Application started in 0.088 seconds. 18:33:16.518 [DefaultDispatcher-worker-1] INFO ktor.application - Responding at http://0.0.0.0:28101 85% EXECUTING [7s] > :model-server:run API layer: The rest-api-model-server provides an abstraction of the model from the previously started model-server, simply run in a new terminal (it will be a blocking call): $ ./gradlew rest-api-model-server:quarkusDev 🧾 You can expect output similar to this (unfold to see details) $ ./gradlew rest-api-model-server:quarkusDev > Task :rest-api-model-server:quarkusDev Listening for transport dt_socket at address: 5005 Press [h] for more options>NG [8s] Tests paused Press [r] to resume testing, [h] for more options> Press [r] to resume testing, [o] Toggle test output, [h] for more options> __ ____ __ _____ ___ __ ____ ______ --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/ -/ /_/ / /_/ / __ |/ , _/ , 95% EXECUTING [16s] > :rest-api-model-server:quarkusDev Dashboard: The dashboard itself is a node application which can be run via in a new terminal (it will be a blocking call): $ ./gradlew spa-dashboard-angular:npmRun 🧾 You can expect output similar to this (unfold to see details) > Task :spa-dashboard-angular:npmRun > angular.io-example@0.0.0 ng > ng serve - Generating browser application bundles (phase: setup)... ✔ Browser application bundle generation complete. Initial Chunk Files | Names | Raw Size vendor.js | vendor | 2.47 MB | polyfills.js | polyfills | 318.03 kB | styles.css, styles.js | styles | 211.31 kB | main.js | main | 86.71 kB | runtime.js | runtime | 6.53 kB | | Initial Total | 3.08 MB Build at: 2022-12-07T09:18:02.345Z - Hash: 186b24edf20c1c4a - Time: 13776ms ** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ ** ✔ Compiled successfully. ✔ Browser application bundle generation complete. 5 unchanged chunks Build at: 2022-12-07T09:18:02.740Z - Hash: 186b24edf20c1c4a - Time: 324ms ✔ Compiled successfully. 95% EXECUTING [29s] > :spa-dashboard-angular:npmRun MPS: Start MPS 2021.2.6 without any global plugins and open the project in the mps/project-modelserver-backend folder. This MPS project does not store the model locally and instead obtains them from the model-server via the cloud-access plugin. The gradle build process will have downloaded all plugins needed to mps/project-modelserver-backend/build/dependencies and declare this folder as a global library. This includes the cloud-access plugin. Explore the dashboard at http://localhost:4200/ Changes to the model in MPS will automatically synchronize to the dashboard All gradle commands assume you are in the top level folder of this repository. To start up the system as described in UC 1c, you first have to have built the entire project: ./gradlew Once done, you need to start all components involved, these are: MPS: Start MPS 2021.2.6 without any global plugins and open the project in the mps/project-mps-backend folder. This MPS project stores the model content using MPS persistence. The gradle build process will have downloaded all plugins needed to mps/project-mps-backend/build/dependencies and declare this folder as a global library. This includes the light-model-server plugin used in this example UC. API layer: The light-model-server provides the models from the running MPS instance, simply run in a new terminal (it will be a blocking call): $ ./gradlew rest-api-model-ql:run 🧾 You can expect output similar to this (unfold to see details) > Task :rest-api-model-ql:run 2023-01-25 18:46:48.977 [main] INFO o.m.s.r.ModelServerLightWrapper - Connecting to light model-server at ws://localhost:48302/ws 2023-01-25 18:46:49.044 [main] INFO o.m.s.r.ModelServerLightWrapper - Connection successful 2023-01-25 18:46:49.070 [main] INFO ktor.application - Autoreload is disabled because the development mode is off. 2023-01-25 18:46:49.346 [main] INFO ktor.application - Application started in 0.286 seconds. 2023-01-25 18:46:49.455 [DefaultDispatcher-worker-4] INFO ktor.application - Responding at http://0.0.0.0:8090 2023-01-25 18:46:50.806 [eventLoopGroupProxy-4-1] INFO o.m.s.r.ModelServerLightWrapper - Resolving node trash 94% EXECUTING [26m 13s] > :rest-api-model-ql:run Dashboard: The dashboard itself is a node application which can be run via in a new terminal (it will be a blocking call): `$ ./gradlew spa-dashboard-angular:npmRun ` 🧾 You can expect output similar to this (unfold to see details) > Task :spa-dashboard-angular:npmRun > angular.io-example@0.0.0 ng > ng serve - Generating browser application bundles (phase: setup)... ✔ Browser application bundle generation complete. Initial Chunk Files | Names | Raw Size vendor.js | vendor | 2.47 MB | polyfills.js | polyfills | 318.03 kB | styles.css, styles.js | styles | 211.31 kB | main.js | main | 86.71 kB | runtime.js | runtime | 6.53 kB | | Initial Total | 3.08 MB Build at: 2022-12-07T09:18:02.345Z - Hash: 186b24edf20c1c4a - Time: 13776ms ** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ ** ✔ Compiled successfully. ✔ Browser application bundle generation complete. 5 unchanged chunks Build at: 2022-12-07T09:18:02.740Z - Hash: 186b24edf20c1c4a - Time: 324ms ✔ Compiled successfully. 95% EXECUTING [29s] > :spa-dashboard-angular:npmRun Explore the dashboard at http://localhost:4200/ Changes to the model in MPS will not automatically synchronize to the dashboard, you will have to manually reload the model.","title":"Run Use-Case 2a Implementation","component":"samples","version":"main","name":"start-usecase-1-b","url":"/samples/main/samples/tutorial/start-usecase-1-b.html","titles":[{"text":"How to start UC 1b","hash":"_how_to_start_uc_1b","id":1},{"text":"How to start UC 1c","hash":"_how_to_start_uc_1c","id":2}]},"186":{"id":186,"text":"TODO startup tutorial","title":"","component":"samples","version":"main","name":"startup-usecases","url":"/samples/main/samples/tutorial/startup-usecases.html","titles":[]},"187":{"id":187,"text":"The modelix.core repository contains the core components of the modelix platform. These components include among others the model-server, model-api-gen, model-api-gen-gradle, and light-model-client. All components in this repository have no dependencies to JetBrains MPS. The modelix project uses Gradle to build the individual components. Simply call the following in the top level folder of a repository: ./gradlew build # mac/linux or if you are on windows use: gradlew.bat build # windows At the moment most modelix artifacts are stored on the itemis nexus with no access restriction. As a consequence, when you build modelix or use modelix components via Gradle there is no repository access setup required. This is optional when you want to obtain modelix artifacts from GitHub packages rather than the itemis nexus server. Most packages are also published to GitHub packages for which a GithHub account and credentials are required. To access GitHub packaged you need to specify your credentials. First of all you will need to generate a personal access token with access to GitHub Packages. The project assumes that your username is available as the variable gpr.user and the token as gpr.key. The easiest way to configure the credentials is copy the example below, paste it into the gradle.properties file in the repository and replace the values with your credentials: gpr.user= gpr.key= Gradle also supports other locations for specifying these properties.","title":"Welcome to modelix.core!","component":"core","version":"modelix-23.0","name":"index","url":"/core/modelix-23.0/core/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Getting Started","hash":"_getting_started","id":2},{"text":"Build components using Gradle","hash":"_build_components_using_gradle","id":3},{"text":"Build from console","hash":"_build_from_console","id":4},{"text":"modelix Artifact Publication","hash":"_modelix_artifact_publication","id":5},{"text":"How to set up GitHub packages authentication","hash":"_how_to_set_up_github_packages_authentication","id":6}]},"188":{"id":188,"text":"TODO","title":"modelix.core Explanation","component":"core","version":"modelix-23.0","name":"index","url":"/core/modelix-23.0/core/explanation/index.html","titles":[]},"189":{"id":189,"text":"TODO","title":"modelix.core How-To","component":"core","version":"modelix-23.0","name":"index","url":"/core/modelix-23.0/core/howto/index.html","titles":[]},"190":{"id":190,"text":"If you are interested in a more practical usage of what is presented here, check out the samples project Creating an instance that loads the entire model from the server can be done like this: val client = LightModelClient.builder() .url(\"ws://localhost/json/v2/test-repo/ws\") // optional, by default it connects to the MPS plugin .build() You have to set a model query using changeQuery() to tell the server in what data you are interested in. Without a query the client will not receive any data. client.changeQuery(buildModelQuery { root { descendants { } } }) To read or write any nodes you have to start a read/write transaction by using runRead {}/runWrite {}. An exception is thrown when you try to access a node outside a transaction. val rootNode = client.waitForRootNode()!! client.runRead { val modules = rootNode.getChildren(\"modules\") // ... } If you try to access a node that is not included in your model query an exception is thrown. You can use INode.isLoaded() to check if a node was loaded on the client to prevent this exception. You can also filter a list of nodes like this: node.getChildren(\"modules\").filterLoaded(), to iterate only over the nodes that are included in your query.","title":"How-To use the light-model-client","component":"core","version":"modelix-23.0","name":"usage-light-model-client","url":"/core/modelix-23.0/core/howto/usage-light-model-client.html","titles":[]},"191":{"id":191,"text":"If you are interested in a more practical usage of what is presented here, check out the samples project To apply model-api-gen to an existing JetBrains MPS language, it is necessary to build the project via Gradle. This How-To assumes a folder structure as follows . ├── mps │ ├── build │ ├── metamodel │ │ └── [kotlin gradle sub-project] │ │ │ ├── languages │ │ └── [your MPS languages] │ └── solutions │ └── [your MPS solutions] │ ├── settings.gradle.kts ├── gradle.properties ├── gradle.properties ├── build.gradle.kts └── [...] Once you have your Gradle setup done, add the following lines the respective files. gradle.properties file: modelixCoreVersion=1.4.10 mpsVersion=2021.3.2 [...] The versions listed here are not the latest versions, refer to the repositories or use our latest release. settings.gradle.kts file: pluginManagement { val modelixCoreVersion: String by settings plugins { // the gradle plugin that provides easy access to the meta-model generator id(\"org.modelix.model-api-gen.gradle\") version modelixCoreVersion [...] } repositories { maven { url = uri(\"https://artifacts.itemis.cloud/repository/maven-mps/\") } [...] } } [...] build.gradle.kts file: plugins { id(\"org.modelix.model-api-gen\") } val mpsVersion: String by rootProject val modelixCoreVersion: String by rootProject // ensure that the MPS directory name is correct val mpsDir = buildDir.resolve(\"mps\") val mps by configurations.creating val mpsDependencies by configurations.creating dependencies { mps(\"com.jetbrains:mps:$mpsVersion\") [...] } // you might already have this if you use Gradle to build your MPS languages val resolveMps by tasks.registering(Sync::class) { from(mps.resolve().map { zipTree(it) }) into(mpsDir) } // the specific addition of the meta-model generator Gradle helper metamodel { dependsOn(resolveMps) mpsHome = mpsDir // Source // ensure that your languages and solutions you want to generate are listed here modulesFrom(projectDir.resolve(\"languages\")) modulesFrom(projectDir.resolve(\"solutions\")) // further restrictions can be made to filter namespaces, languages or concepts includeNamespace(\"org.example\") includeLanguage(\"language.fq.name\") includeConcept(\"concept.fq.name\") // this example imports dependencies from the shared dependencies folder modulesFrom(projectDir.resolve(\"build/dependencies\")) // and specifically adds repository related concepts includeLanguage(\"org.modelix.model.repositoryconcepts\") // Target // Kotlin // the target project into which the kotlin API will be build (requires the project to exist in the gradle setup) kotlinDir = project(\":mps:metamodel\").projectDir.resolve(\"src/main/kotlin\") // an alternative to the line above // kotlinProject = project(\":my-kotlin-project\") // you can set the name of the registration helper class here registrationHelperName = \"org.example.MyLanguages\" // TypeScript // similar to the Kotlin API above, the typescript directory can be set to enable TS API generation typescriptDir = project(\":my-typescript-project\").projectDir.resolve(\"src/gen\") } [...] The org.modelix.model-api-gen.gradle Gradle helper provides an additional target which will integrate into your build, so a simple re-build of your Gradle project should be sufficient. Alternatively, you can directly trigger the API generation via ./gradlew mps:metamodel:build Done. You can now use the generated Classes in your code Kotlin (or TypeScript) project in the mps/metamodel sub-project.","title":"How-To apply the Model API Generator using the Gradle Plugin","component":"core","version":"modelix-23.0","name":"usage-model-api-gen-gradle","url":"/core/modelix-23.0/core/howto/usage-model-api-gen-gradle.html","titles":[]},"192":{"id":192,"text":"If you are interested in a more practical usage of what is presented here, check out the samples project To run the model-server with default configuration run: [modelix.core] $ ./gradlew model-server:run To specify a different jdbc configuration, you can add the -jdbcconf arguement: [modelix.core] $ ./gradlew model-server:run --args='-jdbcconf path-to-my-database.properties' During development or to perform tests it is recommended to start the model-server with in-memory storage: [modelix.core] $ ./gradlew model-server:run --args='-inmemory'","title":"How-To start a local model-server","component":"core","version":"modelix-23.0","name":"usage-model-server","url":"/core/modelix-23.0/core/howto/usage-model-server.html","titles":[]},"193":{"id":193,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The light-model-client is designed to connect to either an MPS instance or a Modelix model-server. It is implemented in Kotlin multi-platform so that it can also be run in the browser. While the alternative \"advanced model client\" provides more features and should be used for long-running processes, the light-model-client is optimized for a lower resource consumption and short living processes like in a browser tab. The server is responsible for resolving conflicts and to keep the client side model in a valid state.","title":"Accessing models: The light-model-client","component":"core","version":"modelix-23.0","name":"component-light-model-client","url":"/core/modelix-23.0/core/reference/component-light-model-client.html","titles":[]},"194":{"id":194,"text":"Repository | buildfile | Artifacts: Nexus GitHub Packages In order to export a meta-model (i.e. the structure aspect of a langauge) from MPS, modelix uses the MPS solution metamodel-export. This solution maps the structure of a language to corresponding serializable data classes of the model-api (e.g. LanguageData and ConcepData). Further, the metamodel-expor provides a command line interface to export these data classes to a JSON file from outside of MPS. Unfold to see an exemplary JSON file which is generated from the export { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca\", \"name\": \"University.Schedule\", \"concepts\": [ { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560\", \"name\": \"Lecture\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188010563\", \"name\": \"description\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188010565\", \"name\": \"maxParticipants\", \"type\": \"INT\" } ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188058355\", \"name\": \"schedule\", \"type\": \"University.Schedule.Schedule\", \"optional\": false } ], \"references\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188058364\", \"name\": \"room\", \"type\": \"University.Schedule.Room\", \"optional\": false } ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\", \"jetbrains.mps.lang.core.INamedConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010568\", \"name\": \"Schedule\", \"abstract\": true, \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010568/4128798754188010578\", \"name\": \"at\", \"type\": \"University.Schedule.DateAndTime\", \"optional\": false } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010569\", \"name\": \"Recurring\", \"properties\": [ ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"University.Schedule.Schedule\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010570\", \"name\": \"DateAndTime\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010570/4128798754188010571\", \"name\": \"date\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010570/4128798754188010573\", \"name\": \"time\" } ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010580\", \"name\": \"Room\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010580/4128798754188010583\", \"name\": \"maxPlaces\", \"type\": \"INT\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010580/4128798754188010585\", \"name\": \"hasRemoteEquipment\", \"type\": \"BOOLEAN\" } ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\", \"jetbrains.mps.lang.core.INamedConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010588\", \"name\": \"Rooms\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010588/4128798754188010589\", \"name\": \"rooms\", \"type\": \"University.Schedule.Room\", \"multiple\": true } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188057192\", \"name\": \"Courses\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188057192/4128798754188057193\", \"name\": \"lectures\", \"type\": \"University.Schedule.Lecture\", \"multiple\": true } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188059567\", \"name\": \"OneOff\", \"properties\": [ ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"University.Schedule.Schedule\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449\", \"name\": \"Student\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449/1648392019017048450\", \"name\": \"name\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449/1648392019017048454\", \"name\": \"semester\", \"type\": \"INT\" } ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449/1648392019017048452\", \"name\": \"born\", \"type\": \"University.Schedule.DateAndTime\", \"optional\": false } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048457\", \"name\": \"Students\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048457/1648392019017048458\", \"name\": \"students\", \"type\": \"University.Schedule.Student\", \"multiple\": true } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048460\", \"name\": \"LectureAssignments\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048460/1648392019017048466\", \"name\": \"lectures\", \"type\": \"University.Schedule.Assignment\", \"multiple\": true } ], \"references\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048460/1648392019017048461\", \"name\": \"student\", \"type\": \"University.Schedule.Student\", \"optional\": false } ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048463\", \"name\": \"Assignment\", \"properties\": [ ], \"children\": [ ], \"references\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048463/1648392019017048464\", \"name\": \"lecture\", \"type\": \"University.Schedule.Lecture\", \"optional\": false } ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] } ] } The metamodel-export is primarily intended to be used by the Model API Generator.","title":"MPS solution for metamodel-export","component":"core","version":"modelix-23.0","name":"component-metamodel-export","url":"/core/modelix-23.0/core/reference/component-metamodel-export.html","titles":[{"text":"Overview","hash":"_overview","id":1}]},"195":{"id":195,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The model-api-gen.gradle.plugin is a Gradle plugin that wraps the functionality of the MPS solution for metamodel-export and Model API Generator. It provides an additional Gradle task which will apply a 2-staged process: MPS metamodel export to JSON (optional) In the first step the metamodel-export MPS solution is executed by the plugin to export the MPS structure aspect (i.e. the metamodel) to JSON files. In case your metamodel comes from another source this is an external entry point: As long as you can export your metamodel to JSON, you can use model-api-gen. To use JSON from another source or JSON files from a previous export, you can skip this step by simply specifying a directory, which contains the JSON files, in the configuration of the gradle task: metamodel { //... jsonDir = File(\"path/to/json/dir\") } As a result, all MPS-specific configuration settings will be ignored and the specified directory will be used for the next step. JSON to model API generation In the second step, the previously generated JSON files containing the metamodel are being used to generate the typed API using the Kotlin/TypeScript generator in model-api-gen. Inside of the metamodel block the following settings can be configured. setting type description javaExecutable File Location of the Java executable moduleFolders ArrayList Directories, that contain the language modules mpsHome File Home directory of MPS mpsHeapSize String MPS heap size specified as a String, e.g. \"2g\" for 2GB includedLanguages Set Set of languages, for which an API should be generated includedLanguageNamespaces Set Set of language namespaces, for which an API should be generated includedConcepts Set Set of concepts, for which an API should be generated includedModules Set Set of modules, for which an API should be generated jsonDir File Directory containing JSON files, which represent a metamodel. Will be used as input for the generation. Specifying this will skip the export from MPS and all MPS-specific configurations will be ignored. kotlinDir File Target Kotlin directory of the generator kotlinProject Project Target Kotlin project of the generator typescriptDir File Target TypeScript directory of the generator registrationHelperName String Name of the registration helper taskDependencies List List of tasks, on which the generation process depends method parameter type description names Action Block used to set a name configuration. dependsOn vararg Any Adds a dependency to taskDependencies javaExecutable File Sets the java executable. modulesFrom File Adds a directory to `moduleFolders includeLanguage String Adds the language specified by this fully qualified name to ìncludedLanguages includeNamespace String Adds the namespace specified by this languagePrefix to includedNamespaces includeConcept String Adds the concept specified by this fully qualified name to includedConcepts exportModules String Adds the module specified by this name prefix to includedModules Inside the metamodel block a names block can be declared to configure prefix, suffix, and baseNameConversion of generated Kotlin/TypeScript elements. This is achieved by setting the attributes of the NameConfig object accordingly. attribute default prefix default suffix languageClass \"L_\" \"\" typedNode \"N_\" \"\" typedNodeImpl` \"_N_TypedImpl_\" \"\" untypedConcept \"_C_UntypedImpl_\" \"\" typedConcept` \"C_\" \"\" typedConceptImpl` \"_C_TypedImpl_\" \"\" metamodel { mpsHome = file(\"path/to/mps/home\") mpsHeapSize = \"2g\" kotlinDir = file(\"build/kotlin_gen\") registrationHelperName = \"org.modelix.Languages\" typescriptDir = file(\"build/ts_gen\") includeNamespace(\"jetbrains.mps.baseLanguage\") exportModules(\"jetbrains.mps.runtime\") names { languageClass.prefix = \"MyLanguagePrefix\" languageClass.suffix = \"MyLanguageSuffix\" } }","title":"Gradle Plugin for the Model API Generator","component":"core","version":"modelix-23.0","name":"component-model-api-gen-gradle","url":"/core/modelix-23.0/core/reference/component-model-api-gen-gradle.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Configuration settings","hash":"_configuration_settings","id":2},{"text":"Configurable Attributes","hash":"_configurable_attributes","id":3},{"text":"Configuration Methods","hash":"_configuration_methods","id":4},{"text":"Name Configuration","hash":"_name_configuration","id":5},{"text":"Default Values","hash":"_default_values","id":6},{"text":"Example","hash":"_example","id":7}]},"196":{"id":196,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The Model API Generator (model-api-gen) is a Kotlin component which generates a domain-specific model API. Currently, the generator supports either Kotlin and TypeScipt as target languages. As a source for the generated API, model-api-gen consumes a given metamodel specified by JSON files. The Model API Generator is mainly used in the corresponding gradle plugin model-api-gen-gradle.","title":"Model API Generator","component":"core","version":"modelix-23.0","name":"component-model-api-gen","url":"/core/modelix-23.0/core/reference/component-model-api-gen.html","titles":[]},"197":{"id":197,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The model-server component provides a storage for models. Bringing models to the cloud requires an alternative to the file system (and git) based storage of models. Modelix implements a data structure that allows replication between all MPS instances connected to the same model-server. It is very similar to the git storage format, but instead of files it stores nodes in its key-value data store. To support real-time collaboration, in addition to the snapshot of a version, the model-server also stores the operations that were applied on the previous version to produce the new version. Conflicts between concurrent modification are resolved using operational transformation (OT). The usually hard part of OT is to guarantee convergence, meaning that all clients end up with the same result independent of the order in which they receive changes. This problem becomes trivial, because versions are identified by a hash over all the content. Any divergence will result in a different hash which can easily be detected. The remaining problem is what to do when a divergence is detected. From git we know that switching between versions is fast, because it only has to apply the difference between these versions. The same is true here: Fixing a divergence is as easy as switching to the correct version. If a client does not have any local changes it does not even need to apply the change operations itself - it can just switch to the new version. So in the rare case of a divergence fixing it is nothing special and is an operation that happens all the time. While this component is independent of MPS, it is possible to replicates the data of the MPS internal module repository into a running model-server. This can be achieved using the modelix MPS plugin: One can connect an MPS instances to a model-server, upload the current module repository, and keep it synchronized. This can also be a local MPS instance without a web editor - both options are supported at the same time. To reformat and add license header to all files run: ../gradlew spotlessApply Valid keys are keys starting with the PROTECTED_PREFIX ($$$). For details please refer to the OpenAPI documentation under doc/model-server.json.","title":"A Cloud Model Storage/Repository: The modelix model-server","component":"core","version":"modelix-23.0","name":"component-model-server","url":"/core/modelix-23.0/core/reference/component-model-server.html","titles":[{"text":"Real-Time Collaboration and Operational Transformation","hash":"_real_time_collaboration_and_operational_transformation","id":1},{"text":"MPS and the model-server","hash":"_mps_and_the_model_server","id":2},{"text":"Development","hash":"_development","id":3},{"text":"APIs","hash":"_apis","id":4}]},"198":{"id":198,"text":"TODO","title":"modelix.core Tutorials","component":"core","version":"modelix-23.0","name":"index","url":"/core/modelix-23.0/core/tutorial/index.html","titles":[]},"199":{"id":199,"text":"The modelix.core repository contains the core components of the modelix platform. These components include among others the model-server, model-api-gen, model-api-gen-gradle, and light-model-client. All components in this repository have no dependencies to JetBrains MPS. The modelix project uses Gradle to build the individual components. Simply call the following in the top level folder of a repository: ./gradlew build # mac/linux or if you are on windows use: gradlew.bat build # windows At the moment most modelix artifacts are stored on the itemis nexus with no access restriction. As a consequence, when you build modelix or use modelix components via Gradle there is no repository access setup required. This is optional when you want to obtain modelix artifacts from GitHub packages rather than the itemis nexus server. Most packages are also published to GitHub packages for which a GithHub account and credentials are required. To access GitHub packaged you need to specify your credentials. First of all you will need to generate a personal access token with access to GitHub Packages. The project assumes that your username is available as the variable gpr.user and the token as gpr.key. The easiest way to configure the credentials is copy the example below, paste it into the gradle.properties file in the repository and replace the values with your credentials: gpr.user= gpr.key= Gradle also supports other locations for specifying these properties.","title":"Welcome to modelix.core!","component":"core","version":"modelix-23.1","name":"index","url":"/core/latest/core/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Getting Started","hash":"_getting_started","id":2},{"text":"Build components using Gradle","hash":"_build_components_using_gradle","id":3},{"text":"Build from console","hash":"_build_from_console","id":4},{"text":"modelix Artifact Publication","hash":"_modelix_artifact_publication","id":5},{"text":"How to set up GitHub packages authentication","hash":"_how_to_set_up_github_packages_authentication","id":6}]},"200":{"id":200,"text":"TODO","title":"modelix.core Explanation","component":"core","version":"modelix-23.1","name":"index","url":"/core/latest/core/explanation/index.html","titles":[]},"201":{"id":201,"text":"TODO","title":"modelix.core How-To","component":"core","version":"modelix-23.1","name":"index","url":"/core/latest/core/howto/index.html","titles":[]},"202":{"id":202,"text":"If you are interested in a more practical usage of what is presented here, check out the samples project Creating an instance that loads the entire model from the server can be done like this: val client = LightModelClient.builder() .url(\"ws://localhost/json/v2/test-repo/ws\") // optional, by default it connects to the MPS plugin .build() You have to set a model query using changeQuery() to tell the server in what data you are interested in. Without a query the client will not receive any data. client.changeQuery(buildModelQuery { root { descendants { } } }) To read or write any nodes you have to start a read/write transaction by using runRead {}/runWrite {}. An exception is thrown when you try to access a node outside a transaction. val rootNode = client.waitForRootNode()!! client.runRead { val modules = rootNode.getChildren(\"modules\") // ... } If you try to access a node that is not included in your model query an exception is thrown. You can use INode.isLoaded() to check if a node was loaded on the client to prevent this exception. You can also filter a list of nodes like this: node.getChildren(\"modules\").filterLoaded(), to iterate only over the nodes that are included in your query.","title":"How-To use the light-model-client","component":"core","version":"modelix-23.1","name":"usage-light-model-client","url":"/core/latest/core/howto/usage-light-model-client.html","titles":[]},"203":{"id":203,"text":"If you are interested in a more practical usage of what is presented here, check out the samples project To apply model-api-gen to an existing JetBrains MPS language, it is necessary to build the project via Gradle. This How-To assumes a folder structure as follows . ├── mps │ ├── build │ ├── metamodel │ │ └── [kotlin gradle sub-project] │ │ │ ├── languages │ │ └── [your MPS languages] │ └── solutions │ └── [your MPS solutions] │ ├── settings.gradle.kts ├── gradle.properties ├── gradle.properties ├── build.gradle.kts └── [...] Once you have your Gradle setup done, add the following lines the respective files. gradle.properties file: modelixCoreVersion=1.4.10 mpsVersion=2021.3.2 [...] The versions listed here are not the latest versions, refer to the repositories or use our latest release. settings.gradle.kts file: pluginManagement { val modelixCoreVersion: String by settings plugins { // the gradle plugin that provides easy access to the meta-model generator id(\"org.modelix.model-api-gen.gradle\") version modelixCoreVersion [...] } repositories { maven { url = uri(\"https://artifacts.itemis.cloud/repository/maven-mps/\") } [...] } } [...] build.gradle.kts file: plugins { id(\"org.modelix.model-api-gen\") } val mpsVersion: String by rootProject val modelixCoreVersion: String by rootProject // ensure that the MPS directory name is correct val mpsDir = buildDir.resolve(\"mps\") val mps by configurations.creating val mpsDependencies by configurations.creating dependencies { mps(\"com.jetbrains:mps:$mpsVersion\") [...] } // you might already have this if you use Gradle to build your MPS languages val resolveMps by tasks.registering(Sync::class) { from(mps.resolve().map { zipTree(it) }) into(mpsDir) } // the specific addition of the meta-model generator Gradle helper metamodel { dependsOn(resolveMps) mpsHome = mpsDir // Source // ensure that your languages and solutions you want to generate are listed here modulesFrom(projectDir.resolve(\"languages\")) modulesFrom(projectDir.resolve(\"solutions\")) // further restrictions can be made to filter namespaces, languages or concepts includeNamespace(\"org.example\") includeLanguage(\"language.fq.name\") includeConcept(\"concept.fq.name\") // this example imports dependencies from the shared dependencies folder modulesFrom(projectDir.resolve(\"build/dependencies\")) // and specifically adds repository related concepts includeLanguage(\"org.modelix.model.repositoryconcepts\") // Target // Kotlin // the target project into which the kotlin API will be build (requires the project to exist in the gradle setup) kotlinDir = project(\":mps:metamodel\").projectDir.resolve(\"src/main/kotlin\") // an alternative to the line above // kotlinProject = project(\":my-kotlin-project\") // you can set the name of the registration helper class here registrationHelperName = \"org.example.MyLanguages\" // TypeScript // similar to the Kotlin API above, the typescript directory can be set to enable TS API generation typescriptDir = project(\":my-typescript-project\").projectDir.resolve(\"src/gen\") } [...] The org.modelix.model-api-gen.gradle Gradle helper provides an additional target which will integrate into your build, so a simple re-build of your Gradle project should be sufficient. Alternatively, you can directly trigger the API generation via ./gradlew mps:metamodel:build Done. You can now use the generated Classes in your code Kotlin (or TypeScript) project in the mps/metamodel sub-project.","title":"How-To apply the Model API Generator using the Gradle Plugin","component":"core","version":"modelix-23.1","name":"usage-model-api-gen-gradle","url":"/core/latest/core/howto/usage-model-api-gen-gradle.html","titles":[]},"204":{"id":204,"text":"If you are interested in a more practical usage of what is presented here, check out the samples project To run the model-server with default configuration run: [modelix.core] $ ./gradlew model-server:run To specify a different jdbc configuration, you can add the -jdbcconf arguement: [modelix.core] $ ./gradlew model-server:run --args='-jdbcconf path-to-my-database.properties' During development or to perform tests it is recommended to start the model-server with in-memory storage: [modelix.core] $ ./gradlew model-server:run --args='-inmemory'","title":"How-To start a local model-server","component":"core","version":"modelix-23.1","name":"usage-model-server","url":"/core/latest/core/howto/usage-model-server.html","titles":[]},"205":{"id":205,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The light-model-client is designed to connect to either an MPS instance or a Modelix model-server. It is implemented in Kotlin multi-platform so that it can also be run in the browser. While the alternative \"advanced model client\" provides more features and should be used for long-running processes, the light-model-client is optimized for a lower resource consumption and short living processes like in a browser tab. The server is responsible for resolving conflicts and to keep the client side model in a valid state.","title":"Accessing models: The light-model-client","component":"core","version":"modelix-23.1","name":"component-light-model-client","url":"/core/latest/core/reference/component-light-model-client.html","titles":[]},"206":{"id":206,"text":"Repository | buildfile | Artifacts: Nexus GitHub Packages In order to export a meta-model (i.e. the structure aspect of a langauge) from MPS, modelix uses the MPS solution metamodel-export. This solution maps the structure of a language to corresponding serializable data classes of the model-api (e.g. LanguageData and ConcepData). Further, the metamodel-expor provides a command line interface to export these data classes to a JSON file from outside of MPS. Unfold to see an exemplary JSON file which is generated from the export { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca\", \"name\": \"University.Schedule\", \"concepts\": [ { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560\", \"name\": \"Lecture\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188010563\", \"name\": \"description\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188010565\", \"name\": \"maxParticipants\", \"type\": \"INT\" } ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188058355\", \"name\": \"schedule\", \"type\": \"University.Schedule.Schedule\", \"optional\": false } ], \"references\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188058364\", \"name\": \"room\", \"type\": \"University.Schedule.Room\", \"optional\": false } ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\", \"jetbrains.mps.lang.core.INamedConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010568\", \"name\": \"Schedule\", \"abstract\": true, \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010568/4128798754188010578\", \"name\": \"at\", \"type\": \"University.Schedule.DateAndTime\", \"optional\": false } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010569\", \"name\": \"Recurring\", \"properties\": [ ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"University.Schedule.Schedule\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010570\", \"name\": \"DateAndTime\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010570/4128798754188010571\", \"name\": \"date\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010570/4128798754188010573\", \"name\": \"time\" } ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010580\", \"name\": \"Room\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010580/4128798754188010583\", \"name\": \"maxPlaces\", \"type\": \"INT\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010580/4128798754188010585\", \"name\": \"hasRemoteEquipment\", \"type\": \"BOOLEAN\" } ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\", \"jetbrains.mps.lang.core.INamedConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010588\", \"name\": \"Rooms\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010588/4128798754188010589\", \"name\": \"rooms\", \"type\": \"University.Schedule.Room\", \"multiple\": true } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188057192\", \"name\": \"Courses\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188057192/4128798754188057193\", \"name\": \"lectures\", \"type\": \"University.Schedule.Lecture\", \"multiple\": true } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188059567\", \"name\": \"OneOff\", \"properties\": [ ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"University.Schedule.Schedule\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449\", \"name\": \"Student\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449/1648392019017048450\", \"name\": \"name\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449/1648392019017048454\", \"name\": \"semester\", \"type\": \"INT\" } ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449/1648392019017048452\", \"name\": \"born\", \"type\": \"University.Schedule.DateAndTime\", \"optional\": false } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048457\", \"name\": \"Students\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048457/1648392019017048458\", \"name\": \"students\", \"type\": \"University.Schedule.Student\", \"multiple\": true } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048460\", \"name\": \"LectureAssignments\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048460/1648392019017048466\", \"name\": \"lectures\", \"type\": \"University.Schedule.Assignment\", \"multiple\": true } ], \"references\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048460/1648392019017048461\", \"name\": \"student\", \"type\": \"University.Schedule.Student\", \"optional\": false } ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048463\", \"name\": \"Assignment\", \"properties\": [ ], \"children\": [ ], \"references\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048463/1648392019017048464\", \"name\": \"lecture\", \"type\": \"University.Schedule.Lecture\", \"optional\": false } ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] } ] } The metamodel-export is primarily intended to be used by the Model API Generator.","title":"MPS solution for metamodel-export","component":"core","version":"modelix-23.1","name":"component-metamodel-export","url":"/core/latest/core/reference/component-metamodel-export.html","titles":[{"text":"Overview","hash":"_overview","id":1}]},"207":{"id":207,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The model-api-gen.gradle.plugin is a Gradle plugin that wraps the functionality of the MPS solution for metamodel-export and Model API Generator. It provides an additional Gradle task which will apply a 2-staged process: MPS metamodel export to JSON (optional) In the first step the metamodel-export MPS solution is executed by the plugin to export the MPS structure aspect (i.e. the metamodel) to JSON files. In case your metamodel comes from another source this is an external entry point: As long as you can export your metamodel to JSON, you can use model-api-gen. To use JSON from another source or JSON files from a previous export, you can skip this step by simply specifying a directory, which contains the JSON files, in the configuration of the gradle task: metamodel { //... jsonDir = File(\"path/to/json/dir\") } As a result, all MPS-specific configuration settings will be ignored and the specified directory will be used for the next step. JSON to model API generation In the second step, the previously generated JSON files containing the metamodel are being used to generate the typed API using the Kotlin/TypeScript generator in model-api-gen. Inside of the metamodel block the following settings can be configured. setting type description javaExecutable File Location of the Java executable moduleFolders ArrayList Directories, that contain the language modules mpsHome File Home directory of MPS mpsHeapSize String MPS heap size specified as a String, e.g. \"2g\" for 2GB includedLanguages Set Set of languages, for which an API should be generated includedLanguageNamespaces Set Set of language namespaces, for which an API should be generated includedConcepts Set Set of concepts, for which an API should be generated includedModules Set Set of modules, for which an API should be generated jsonDir File Directory containing JSON files, which represent a metamodel. Will be used as input for the generation. Specifying this will skip the export from MPS and all MPS-specific configurations will be ignored. kotlinDir File Target Kotlin directory of the generator kotlinProject Project Target Kotlin project of the generator typescriptDir File Target TypeScript directory of the generator registrationHelperName String Name of the registration helper taskDependencies List List of tasks, on which the generation process depends method parameter type description names Action Block used to set a name configuration. dependsOn vararg Any Adds a dependency to taskDependencies javaExecutable File Sets the java executable. modulesFrom File Adds a directory to `moduleFolders includeLanguage String Adds the language specified by this fully qualified name to ìncludedLanguages includeNamespace String Adds the namespace specified by this languagePrefix to includedNamespaces includeConcept String Adds the concept specified by this fully qualified name to includedConcepts exportModules String Adds the module specified by this name prefix to includedModules Inside the metamodel block a names block can be declared to configure prefix, suffix, and baseNameConversion of generated Kotlin/TypeScript elements. This is achieved by setting the attributes of the NameConfig object accordingly. attribute default prefix default suffix languageClass \"L_\" \"\" typedNode \"N_\" \"\" typedNodeImpl` \"_N_TypedImpl_\" \"\" untypedConcept \"_C_UntypedImpl_\" \"\" typedConcept` \"C_\" \"\" typedConceptImpl` \"_C_TypedImpl_\" \"\" metamodel { mpsHome = file(\"path/to/mps/home\") mpsHeapSize = \"2g\" kotlinDir = file(\"build/kotlin_gen\") registrationHelperName = \"org.modelix.Languages\" typescriptDir = file(\"build/ts_gen\") includeNamespace(\"jetbrains.mps.baseLanguage\") exportModules(\"jetbrains.mps.runtime\") names { languageClass.prefix = \"MyLanguagePrefix\" languageClass.suffix = \"MyLanguageSuffix\" } }","title":"Gradle Plugin for the Model API Generator","component":"core","version":"modelix-23.1","name":"component-model-api-gen-gradle","url":"/core/latest/core/reference/component-model-api-gen-gradle.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Configuration settings","hash":"_configuration_settings","id":2},{"text":"Configurable Attributes","hash":"_configurable_attributes","id":3},{"text":"Configuration Methods","hash":"_configuration_methods","id":4},{"text":"Name Configuration","hash":"_name_configuration","id":5},{"text":"Default Values","hash":"_default_values","id":6},{"text":"Example","hash":"_example","id":7}]},"208":{"id":208,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The Model API Generator (model-api-gen) is a Kotlin component which generates a domain-specific model API. Currently, the generator supports either Kotlin and TypeScipt as target languages. As a source for the generated API, model-api-gen consumes a given metamodel specified by JSON files. The Model API Generator is mainly used in the corresponding gradle plugin model-api-gen-gradle.","title":"Model API Generator","component":"core","version":"modelix-23.1","name":"component-model-api-gen","url":"/core/latest/core/reference/component-model-api-gen.html","titles":[]},"209":{"id":209,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The model-server component provides a storage for models. Bringing models to the cloud requires an alternative to the file system (and git) based storage of models. Modelix implements a data structure that allows replication between all MPS instances connected to the same model-server. It is very similar to the git storage format, but instead of files it stores nodes in its key-value data store. To support real-time collaboration, in addition to the snapshot of a version, the model-server also stores the operations that were applied on the previous version to produce the new version. Conflicts between concurrent modification are resolved using operational transformation (OT). The usually hard part of OT is to guarantee convergence, meaning that all clients end up with the same result independent of the order in which they receive changes. This problem becomes trivial, because versions are identified by a hash over all the content. Any divergence will result in a different hash which can easily be detected. The remaining problem is what to do when a divergence is detected. From git we know that switching between versions is fast, because it only has to apply the difference between these versions. The same is true here: Fixing a divergence is as easy as switching to the correct version. If a client does not have any local changes it does not even need to apply the change operations itself - it can just switch to the new version. So in the rare case of a divergence fixing it is nothing special and is an operation that happens all the time. While this component is independent of MPS, it is possible to replicates the data of the MPS internal module repository into a running model-server. This can be achieved using the modelix MPS plugin: One can connect an MPS instances to a model-server, upload the current module repository, and keep it synchronized. This can also be a local MPS instance without a web editor - both options are supported at the same time. To reformat and add license header to all files run: ../gradlew spotlessApply Valid keys are keys starting with the PROTECTED_PREFIX ($$$). For details please refer to the OpenAPI documentation under doc/model-server.json.","title":"A Cloud Model Storage/Repository: The modelix model-server","component":"core","version":"modelix-23.1","name":"component-model-server","url":"/core/latest/core/reference/component-model-server.html","titles":[{"text":"Real-Time Collaboration and Operational Transformation","hash":"_real_time_collaboration_and_operational_transformation","id":1},{"text":"MPS and the model-server","hash":"_mps_and_the_model_server","id":2},{"text":"Development","hash":"_development","id":3},{"text":"APIs","hash":"_apis","id":4}]},"210":{"id":210,"text":"TODO","title":"modelix.core Tutorials","component":"core","version":"modelix-23.1","name":"index","url":"/core/latest/core/tutorial/index.html","titles":[]},"211":{"id":211,"text":"The modelix.core repository contains the core components of the modelix platform. These components include among others the model-server, model-api-gen, model-api-gen-gradle, and light-model-client. All components in this repository have no dependencies to JetBrains MPS. The modelix project uses Gradle to build the individual components. Simply call the following in the top level folder of a repository: ./gradlew build # mac/linux or if you are on windows use: gradlew.bat build # windows At the moment most modelix artifacts are stored on the itemis nexus with no access restriction. As a consequence, when you build modelix or use modelix components via Gradle there is no repository access setup required. This is optional when you want to obtain modelix artifacts from GitHub packages rather than the itemis nexus server. Most packages are also published to GitHub packages for which a GithHub account and credentials are required. To access GitHub packaged you need to specify your credentials. First of all you will need to generate a personal access token with access to GitHub Packages. The project assumes that your username is available as the variable gpr.user and the token as gpr.key. The easiest way to configure the credentials is copy the example below, paste it into the gradle.properties file in the repository and replace the values with your credentials: gpr.user= gpr.key= Gradle also supports other locations for specifying these properties.","title":"Welcome to modelix.core!","component":"core","version":"main","name":"index","url":"/core/main/core/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Getting Started","hash":"_getting_started","id":2},{"text":"Build components using Gradle","hash":"_build_components_using_gradle","id":3},{"text":"Build from console","hash":"_build_from_console","id":4},{"text":"modelix Artifact Publication","hash":"_modelix_artifact_publication","id":5},{"text":"How to set up GitHub packages authentication","hash":"_how_to_set_up_github_packages_authentication","id":6}]},"212":{"id":212,"text":"TODO","title":"modelix.core Explanation","component":"core","version":"main","name":"index","url":"/core/main/core/explanation/index.html","titles":[]},"213":{"id":213,"text":"TODO","title":"modelix.core How-To","component":"core","version":"main","name":"index","url":"/core/main/core/howto/index.html","titles":[]},"214":{"id":214,"text":"If you are interested in a more practical usage of what is presented here, check out the samples project Creating an instance that loads the entire model from the server can be done like this: val client = LightModelClient.builder() .url(\"ws://localhost/json/v2/test-repo/ws\") // optional, by default it connects to the MPS plugin .build() You have to set a model query using changeQuery() to tell the server in what data you are interested in. Without a query the client will not receive any data. client.changeQuery(buildModelQuery { root { descendants { } } }) To read or write any nodes you have to start a read/write transaction by using runRead {}/runWrite {}. An exception is thrown when you try to access a node outside a transaction. val rootNode = client.waitForRootNode()!! client.runRead { val modules = rootNode.getChildren(\"modules\") // ... } If you try to access a node that is not included in your model query an exception is thrown. You can use INode.isLoaded() to check if a node was loaded on the client to prevent this exception. You can also filter a list of nodes like this: node.getChildren(\"modules\").filterLoaded(), to iterate only over the nodes that are included in your query.","title":"How-To use the light-model-client","component":"core","version":"main","name":"usage-light-model-client","url":"/core/main/core/howto/usage-light-model-client.html","titles":[]},"215":{"id":215,"text":"If you are interested in a more practical usage of what is presented here, check out the samples project To apply model-api-gen to an existing JetBrains MPS language, it is necessary to build the project via Gradle. This How-To assumes a folder structure as follows . ├── mps │ ├── build │ ├── metamodel │ │ └── [kotlin gradle sub-project] │ │ │ ├── languages │ │ └── [your MPS languages] │ └── solutions │ └── [your MPS solutions] │ ├── settings.gradle.kts ├── gradle.properties ├── gradle.properties ├── build.gradle.kts └── [...] Once you have your Gradle setup done, add the following lines the respective files. gradle.properties file: modelixCoreVersion=1.4.10 mpsVersion=2021.3.2 [...] The versions listed here are not the latest versions, refer to the repositories or use our latest release. settings.gradle.kts file: pluginManagement { val modelixCoreVersion: String by settings plugins { // the gradle plugin that provides easy access to the meta-model generator id(\"org.modelix.model-api-gen.gradle\") version modelixCoreVersion [...] } repositories { maven { url = uri(\"https://artifacts.itemis.cloud/repository/maven-mps/\") } [...] } } [...] build.gradle.kts file: plugins { id(\"org.modelix.model-api-gen\") } val mpsVersion: String by rootProject val modelixCoreVersion: String by rootProject // ensure that the MPS directory name is correct val mpsDir = buildDir.resolve(\"mps\") val mps by configurations.creating val mpsDependencies by configurations.creating dependencies { mps(\"com.jetbrains:mps:$mpsVersion\") [...] } // you might already have this if you use Gradle to build your MPS languages val resolveMps by tasks.registering(Sync::class) { from(mps.resolve().map { zipTree(it) }) into(mpsDir) } // the specific addition of the meta-model generator Gradle helper metamodel { dependsOn(resolveMps) mpsHome = mpsDir // Source // ensure that your languages and solutions you want to generate are listed here modulesFrom(projectDir.resolve(\"languages\")) modulesFrom(projectDir.resolve(\"solutions\")) // further restrictions can be made to filter namespaces, languages or concepts includeNamespace(\"org.example\") includeLanguage(\"language.fq.name\") includeConcept(\"concept.fq.name\") // this example imports dependencies from the shared dependencies folder modulesFrom(projectDir.resolve(\"build/dependencies\")) // and specifically adds repository related concepts includeLanguage(\"org.modelix.model.repositoryconcepts\") // Target // Kotlin // the target project into which the kotlin API will be build (requires the project to exist in the gradle setup) kotlinDir = project(\":mps:metamodel\").projectDir.resolve(\"src/main/kotlin\") // an alternative to the line above // kotlinProject = project(\":my-kotlin-project\") // you can set the name of the registration helper class here registrationHelperName = \"org.example.MyLanguages\" // TypeScript // similar to the Kotlin API above, the typescript directory can be set to enable TS API generation typescriptDir = project(\":my-typescript-project\").projectDir.resolve(\"src/gen\") } [...] The org.modelix.model-api-gen.gradle Gradle helper provides an additional target which will integrate into your build, so a simple re-build of your Gradle project should be sufficient. Alternatively, you can directly trigger the API generation via ./gradlew mps:metamodel:build Done. You can now use the generated Classes in your code Kotlin (or TypeScript) project in the mps/metamodel sub-project.","title":"How-To apply the Model API Generator using the Gradle Plugin","component":"core","version":"main","name":"usage-model-api-gen-gradle","url":"/core/main/core/howto/usage-model-api-gen-gradle.html","titles":[]},"216":{"id":216,"text":"If you are interested in a more practical usage of what is presented here, check out the samples project To run the model-server with default configuration run: [modelix.core] $ ./gradlew model-server:run To specify a different jdbc configuration, you can add the -jdbcconf arguement: [modelix.core] $ ./gradlew model-server:run --args='-jdbcconf path-to-my-database.properties' During development or to perform tests it is recommended to start the model-server with in-memory storage: [modelix.core] $ ./gradlew model-server:run --args='-inmemory'","title":"How-To start a local model-server","component":"core","version":"main","name":"usage-model-server","url":"/core/main/core/howto/usage-model-server.html","titles":[]},"217":{"id":217,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The light-model-client is designed to connect to either an MPS instance or a Modelix model-server. It is implemented in Kotlin multi-platform so that it can also be run in the browser. While the alternative \"advanced model client\" provides more features and should be used for long-running processes, the light-model-client is optimized for a lower resource consumption and short living processes like in a browser tab. The server is responsible for resolving conflicts and to keep the client side model in a valid state.","title":"Accessing models: The light-model-client","component":"core","version":"main","name":"component-light-model-client","url":"/core/main/core/reference/component-light-model-client.html","titles":[]},"218":{"id":218,"text":"Repository | buildfile | Artifacts: Nexus GitHub Packages In order to export a meta-model (i.e. the structure aspect of a langauge) from MPS, modelix uses the MPS solution metamodel-export. This solution maps the structure of a language to corresponding serializable data classes of the model-api (e.g. LanguageData and ConcepData). Further, the metamodel-expor provides a command line interface to export these data classes to a JSON file from outside of MPS. Unfold to see an exemplary JSON file which is generated from the export { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca\", \"name\": \"University.Schedule\", \"concepts\": [ { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560\", \"name\": \"Lecture\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188010563\", \"name\": \"description\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188010565\", \"name\": \"maxParticipants\", \"type\": \"INT\" } ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188058355\", \"name\": \"schedule\", \"type\": \"University.Schedule.Schedule\", \"optional\": false } ], \"references\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010560/4128798754188058364\", \"name\": \"room\", \"type\": \"University.Schedule.Room\", \"optional\": false } ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\", \"jetbrains.mps.lang.core.INamedConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010568\", \"name\": \"Schedule\", \"abstract\": true, \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010568/4128798754188010578\", \"name\": \"at\", \"type\": \"University.Schedule.DateAndTime\", \"optional\": false } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010569\", \"name\": \"Recurring\", \"properties\": [ ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"University.Schedule.Schedule\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010570\", \"name\": \"DateAndTime\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010570/4128798754188010571\", \"name\": \"date\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010570/4128798754188010573\", \"name\": \"time\" } ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010580\", \"name\": \"Room\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010580/4128798754188010583\", \"name\": \"maxPlaces\", \"type\": \"INT\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010580/4128798754188010585\", \"name\": \"hasRemoteEquipment\", \"type\": \"BOOLEAN\" } ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\", \"jetbrains.mps.lang.core.INamedConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010588\", \"name\": \"Rooms\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188010588/4128798754188010589\", \"name\": \"rooms\", \"type\": \"University.Schedule.Room\", \"multiple\": true } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188057192\", \"name\": \"Courses\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188057192/4128798754188057193\", \"name\": \"lectures\", \"type\": \"University.Schedule.Lecture\", \"multiple\": true } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/4128798754188059567\", \"name\": \"OneOff\", \"properties\": [ ], \"children\": [ ], \"references\": [ ], \"extends\": [ \"University.Schedule.Schedule\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449\", \"name\": \"Student\", \"properties\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449/1648392019017048450\", \"name\": \"name\" }, { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449/1648392019017048454\", \"name\": \"semester\", \"type\": \"INT\" } ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048449/1648392019017048452\", \"name\": \"born\", \"type\": \"University.Schedule.DateAndTime\", \"optional\": false } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048457\", \"name\": \"Students\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048457/1648392019017048458\", \"name\": \"students\", \"type\": \"University.Schedule.Student\", \"multiple\": true } ], \"references\": [ ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048460\", \"name\": \"LectureAssignments\", \"properties\": [ ], \"children\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048460/1648392019017048466\", \"name\": \"lectures\", \"type\": \"University.Schedule.Assignment\", \"multiple\": true } ], \"references\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048460/1648392019017048461\", \"name\": \"student\", \"type\": \"University.Schedule.Student\", \"optional\": false } ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] }, { \"uid\": \"mps:96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048463\", \"name\": \"Assignment\", \"properties\": [ ], \"children\": [ ], \"references\": [ { \"uid\": \"96533389-8d4c-46f2-b150-8d89155f7fca/1648392019017048463/1648392019017048464\", \"name\": \"lecture\", \"type\": \"University.Schedule.Lecture\", \"optional\": false } ], \"extends\": [ \"jetbrains.mps.lang.core.BaseConcept\" ] } ] } The metamodel-export is primarily intended to be used by the Model API Generator.","title":"MPS solution for metamodel-export","component":"core","version":"main","name":"component-metamodel-export","url":"/core/main/core/reference/component-metamodel-export.html","titles":[{"text":"Overview","hash":"_overview","id":1}]},"219":{"id":219,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The model-api-gen.gradle.plugin is a Gradle plugin that wraps the functionality of the MPS solution for metamodel-export and Model API Generator. It provides an additional Gradle task which will apply a 2-staged process: MPS metamodel export to JSON (optional) In the first step the metamodel-export MPS solution is executed by the plugin to export the MPS structure aspect (i.e. the metamodel) to JSON files. In case your metamodel comes from another source this is an external entry point: As long as you can export your metamodel to JSON, you can use model-api-gen. To use JSON from another source or JSON files from a previous export, you can skip this step by simply specifying a directory, which contains the JSON files, in the configuration of the gradle task: metamodel { //... jsonDir = File(\"path/to/json/dir\") } As a result, all MPS-specific configuration settings will be ignored and the specified directory will be used for the next step. JSON to model API generation In the second step, the previously generated JSON files containing the metamodel are being used to generate the typed API using the Kotlin/TypeScript generator in model-api-gen. Inside of the metamodel block the following settings can be configured. setting type description javaExecutable File Location of the Java executable moduleFolders ArrayList Directories, that contain the language modules mpsHome File Home directory of MPS mpsHeapSize String MPS heap size specified as a String, e.g. \"2g\" for 2GB includedLanguages Set Set of languages, for which an API should be generated includedLanguageNamespaces Set Set of language namespaces, for which an API should be generated includedConcepts Set Set of concepts, for which an API should be generated includedModules Set Set of modules, for which an API should be generated jsonDir File Directory containing JSON files, which represent a metamodel. Will be used as input for the generation. Specifying this will skip the export from MPS and all MPS-specific configurations will be ignored. kotlinDir File Target Kotlin directory of the generator kotlinProject Project Target Kotlin project of the generator typescriptDir File Target TypeScript directory of the generator registrationHelperName String Name of the registration helper taskDependencies List List of tasks, on which the generation process depends method parameter type description names Action Block used to set a name configuration. dependsOn vararg Any Adds a dependency to taskDependencies javaExecutable File Sets the java executable. modulesFrom File Adds a directory to `moduleFolders includeLanguage String Adds the language specified by this fully qualified name to ìncludedLanguages includeNamespace String Adds the namespace specified by this languagePrefix to includedNamespaces includeConcept String Adds the concept specified by this fully qualified name to includedConcepts exportModules String Adds the module specified by this name prefix to includedModules Inside the metamodel block a names block can be declared to configure prefix, suffix, and baseNameConversion of generated Kotlin/TypeScript elements. This is achieved by setting the attributes of the NameConfig object accordingly. attribute default prefix default suffix languageClass \"L_\" \"\" typedNode \"N_\" \"\" typedNodeImpl` \"_N_TypedImpl_\" \"\" untypedConcept \"_C_UntypedImpl_\" \"\" typedConcept` \"C_\" \"\" typedConceptImpl` \"_C_TypedImpl_\" \"\" metamodel { mpsHome = file(\"path/to/mps/home\") mpsHeapSize = \"2g\" kotlinDir = file(\"build/kotlin_gen\") registrationHelperName = \"org.modelix.Languages\" typescriptDir = file(\"build/ts_gen\") includeNamespace(\"jetbrains.mps.baseLanguage\") exportModules(\"jetbrains.mps.runtime\") names { languageClass.prefix = \"MyLanguagePrefix\" languageClass.suffix = \"MyLanguageSuffix\" } }","title":"Gradle Plugin for the Model API Generator","component":"core","version":"main","name":"component-model-api-gen-gradle","url":"/core/main/core/reference/component-model-api-gen-gradle.html","titles":[{"text":"Overview","hash":"_overview","id":1},{"text":"Configuration settings","hash":"_configuration_settings","id":2},{"text":"Configurable Attributes","hash":"_configurable_attributes","id":3},{"text":"Configuration Methods","hash":"_configuration_methods","id":4},{"text":"Name Configuration","hash":"_name_configuration","id":5},{"text":"Default Values","hash":"_default_values","id":6},{"text":"Example","hash":"_example","id":7}]},"220":{"id":220,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The Model API Generator (model-api-gen) is a Kotlin component which generates a domain-specific model API. Currently, the generator supports either Kotlin and TypeScipt as target languages. As a source for the generated API, model-api-gen consumes a given metamodel specified by JSON files. The Model API Generator is mainly used in the corresponding gradle plugin model-api-gen-gradle.","title":"Model API Generator","component":"core","version":"main","name":"component-model-api-gen","url":"/core/main/core/reference/component-model-api-gen.html","titles":[]},"221":{"id":221,"text":"API doc | Repository | buildfile | Artifacts: Nexus GitHub Packages The model-server component provides a storage for models. Bringing models to the cloud requires an alternative to the file system (and git) based storage of models. Modelix implements a data structure that allows replication between all MPS instances connected to the same model-server. It is very similar to the git storage format, but instead of files it stores nodes in its key-value data store. To support real-time collaboration, in addition to the snapshot of a version, the model-server also stores the operations that were applied on the previous version to produce the new version. Conflicts between concurrent modification are resolved using operational transformation (OT). The usually hard part of OT is to guarantee convergence, meaning that all clients end up with the same result independent of the order in which they receive changes. This problem becomes trivial, because versions are identified by a hash over all the content. Any divergence will result in a different hash which can easily be detected. The remaining problem is what to do when a divergence is detected. From git we know that switching between versions is fast, because it only has to apply the difference between these versions. The same is true here: Fixing a divergence is as easy as switching to the correct version. If a client does not have any local changes it does not even need to apply the change operations itself - it can just switch to the new version. So in the rare case of a divergence fixing it is nothing special and is an operation that happens all the time. While this component is independent of MPS, it is possible to replicates the data of the MPS internal module repository into a running model-server. This can be achieved using the modelix MPS plugin: One can connect an MPS instances to a model-server, upload the current module repository, and keep it synchronized. This can also be a local MPS instance without a web editor - both options are supported at the same time. To reformat and add license header to all files run: ../gradlew spotlessApply Valid keys are keys starting with the PROTECTED_PREFIX ($$$). For details please refer to the OpenAPI documentation under doc/model-server.json.","title":"A Cloud Model Storage/Repository: The modelix model-server","component":"core","version":"main","name":"component-model-server","url":"/core/main/core/reference/component-model-server.html","titles":[{"text":"Real-Time Collaboration and Operational Transformation","hash":"_real_time_collaboration_and_operational_transformation","id":1},{"text":"MPS and the model-server","hash":"_mps_and_the_model_server","id":2},{"text":"Development","hash":"_development","id":3},{"text":"APIs","hash":"_apis","id":4}]},"222":{"id":222,"text":"TODO","title":"modelix.core Tutorials","component":"core","version":"main","name":"index","url":"/core/main/core/tutorial/index.html","titles":[]},"223":{"id":223,"text":"The modelix.platform repository contains the Gradle platforms for modelix. It provides all modelix component versions for each modelix platform release. The modelix project uses Gradle to build the individual components. Simply call the following in the top level folder of a repository: ./gradlew build # mac/linux or if you are on windows use: gradlew.bat build # windows At the moment most modelix artifacts are stored on the itemis nexus with no access restriction. As a consequence, when you build modelix or use modelix components via Gradle there is no repository access setup required. This is optional when you want to obtain modelix artifacts from GitHub packages rather than the itemis nexus server. Most packages are also published to GitHub packages for which a GithHub account and credentials are required. To access GitHub packaged you need to specify your credentials. First of all you will need to generate a personal access token with access to GitHub Packages. The project assumes that your username is available as the variable gpr.user and the token as gpr.key. The easiest way to configure the credentials is copy the example below, paste it into the gradle.properties file in the repository and replace the values with your credentials: gpr.user= gpr.key= Gradle also supports other locations for specifying these properties.","title":"Welcome to modelix.platform!","component":"platform","version":"modelix-23.0","name":"index","url":"/platform/modelix-23.0/platform/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Getting Started","hash":"_getting_started","id":2},{"text":"Build components using Gradle","hash":"_build_components_using_gradle","id":3},{"text":"Build from console","hash":"_build_from_console","id":4},{"text":"modelix Artifact Publication","hash":"_modelix_artifact_publication","id":5},{"text":"How to set up GitHub packages authentication","hash":"_how_to_set_up_github_packages_authentication","id":6}]},"224":{"id":224,"text":"The modelix platform is a Gradle platform built using Gradle’s Java Platform Plugin. It aggregates the versions of individual modelix components. Furthermore, the platform simplifies versioning by mapping the modelix release version to the versions of the individual components. These are curated for each release so that compatibility between them is ensured.","title":"The modelix Gradle platform","component":"platform","version":"modelix-23.0","name":"index","url":"/platform/modelix-23.0/platform/explanation/index.html","titles":[]},"225":{"id":225,"text":"The modelix platform provides component versions. To enforce these versions in your project’s build you can add the platform as an enforcedPlatform. We make the following assumptions: the string variable mps_version contains the mps version that is used in your project, e.g. 2021-1 the string variable modelix_platform_version contains the version of the modelix platform you want to use, e. g. 23.1.0 To enforce the versions provided by the platform in your Gradle build, you can use enforcedPlatform inside of a dependencies block like this: dependencies { implementation(enforcedPlatform(\"org.modelix:platform-mps-$mps_version:$modelix_platform_version\")) } Dependencies to modelix components can then be declared without a version number (as the version declared in the platform will be used). For example: dependencies { implementation(enforcedPlatform(\"org.modelix:platform-mps-$mps_version:$modelix_platform_version\")) implementation(\"org.modelix:model-client\") } If you want to handle dependencies to MPS version-specific modelix components yourself, you can use org.modelix:platform instead, which does not contain these dependencies. However, sometimes it might be necessary to pick a specific version of a single component, e.g. when one wants to test new features. Overriding versions may lead to incompatibilities between individual modelix components. In order to override versions inside the platform during dependency resolution, platform can be used instead of enforcedPlatform: dependencies { implementation(platform(\"org.modelix:platform-mps-$mps_version:$modelix_platform_version\")) implementation(\"org.modelix:model-client:2.4.0\") } If you want to learn more about the difference between platform and enforcedPlatform, you can check out this section in the Gradle documentation.","title":"How-to use the platform to streamline modelix dependencies","component":"platform","version":"modelix-23.0","name":"usage-platform","url":"/platform/modelix-23.0/platform/howto/usage-platform.html","titles":[{"text":"General Usage","hash":"_general_usage","id":1},{"text":"Overriding versions","hash":"_overriding_versions","id":2}]},"226":{"id":226,"text":"TODO","title":"modelix.platform Tutorials","component":"platform","version":"modelix-23.0","name":"index","url":"/platform/modelix-23.0/platform/tutorial/index.html","titles":[]},"227":{"id":227,"text":"The modelix.platform repository contains the Gradle platforms for modelix. It provides all modelix component versions for each modelix platform release. The modelix project uses Gradle to build the individual components. Simply call the following in the top level folder of a repository: ./gradlew build # mac/linux or if you are on windows use: gradlew.bat build # windows At the moment most modelix artifacts are stored on the itemis nexus with no access restriction. As a consequence, when you build modelix or use modelix components via Gradle there is no repository access setup required. This is optional when you want to obtain modelix artifacts from GitHub packages rather than the itemis nexus server. Most packages are also published to GitHub packages for which a GithHub account and credentials are required. To access GitHub packaged you need to specify your credentials. First of all you will need to generate a personal access token with access to GitHub Packages. The project assumes that your username is available as the variable gpr.user and the token as gpr.key. The easiest way to configure the credentials is copy the example below, paste it into the gradle.properties file in the repository and replace the values with your credentials: gpr.user= gpr.key= Gradle also supports other locations for specifying these properties.","title":"Welcome to modelix.platform!","component":"platform","version":"modelix-23.1","name":"index","url":"/platform/latest/platform/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Getting Started","hash":"_getting_started","id":2},{"text":"Build components using Gradle","hash":"_build_components_using_gradle","id":3},{"text":"Build from console","hash":"_build_from_console","id":4},{"text":"modelix Artifact Publication","hash":"_modelix_artifact_publication","id":5},{"text":"How to set up GitHub packages authentication","hash":"_how_to_set_up_github_packages_authentication","id":6}]},"228":{"id":228,"text":"The modelix platform is a Gradle platform built using Gradle’s Java Platform Plugin. It aggregates the versions of individual modelix components. Furthermore, the platform simplifies versioning by mapping the modelix release version to the versions of the individual components. These are curated for each release so that compatibility between them is ensured.","title":"The modelix Gradle platform","component":"platform","version":"modelix-23.1","name":"index","url":"/platform/latest/platform/explanation/index.html","titles":[]},"229":{"id":229,"text":"The modelix platform provides component versions. To enforce these versions in your project’s build you can add the platform as an enforcedPlatform. We make the following assumptions: the string variable mps_version contains the mps version that is used in your project, e.g. 2021-1 the string variable modelix_platform_version contains the version of the modelix platform you want to use, e. g. 23.1.0 To enforce the versions provided by the platform in your Gradle build, you can use enforcedPlatform inside of a dependencies block like this: dependencies { implementation(enforcedPlatform(\"org.modelix:platform-mps-$mps_version:$modelix_platform_version\")) } Dependencies to modelix components can then be declared without a version number (as the version declared in the platform will be used). For example: dependencies { implementation(enforcedPlatform(\"org.modelix:platform-mps-$mps_version:$modelix_platform_version\")) implementation(\"org.modelix:model-client\") } If you want to handle dependencies to MPS version-specific modelix components yourself, you can use org.modelix:platform instead, which does not contain these dependencies. However, sometimes it might be necessary to pick a specific version of a single component, e.g. when one wants to test new features. Overriding versions may lead to incompatibilities between individual modelix components. In order to override versions inside the platform during dependency resolution, platform can be used instead of enforcedPlatform: dependencies { implementation(platform(\"org.modelix:platform-mps-$mps_version:$modelix_platform_version\")) implementation(\"org.modelix:model-client:2.4.0\") } If you want to learn more about the difference between platform and enforcedPlatform, you can check out this section in the Gradle documentation.","title":"How-to use the platform to streamline modelix dependencies","component":"platform","version":"modelix-23.1","name":"usage-platform","url":"/platform/latest/platform/howto/usage-platform.html","titles":[{"text":"General Usage","hash":"_general_usage","id":1},{"text":"Overriding versions","hash":"_overriding_versions","id":2}]},"230":{"id":230,"text":"TODO","title":"modelix.platform Tutorials","component":"platform","version":"modelix-23.1","name":"index","url":"/platform/latest/platform/tutorial/index.html","titles":[]},"231":{"id":231,"text":"The modelix.platform repository contains the Gradle platforms for modelix. It provides all modelix component versions for each modelix platform release. The modelix project uses Gradle to build the individual components. Simply call the following in the top level folder of a repository: ./gradlew build # mac/linux or if you are on windows use: gradlew.bat build # windows At the moment most modelix artifacts are stored on the itemis nexus with no access restriction. As a consequence, when you build modelix or use modelix components via Gradle there is no repository access setup required. This is optional when you want to obtain modelix artifacts from GitHub packages rather than the itemis nexus server. Most packages are also published to GitHub packages for which a GithHub account and credentials are required. To access GitHub packaged you need to specify your credentials. First of all you will need to generate a personal access token with access to GitHub Packages. The project assumes that your username is available as the variable gpr.user and the token as gpr.key. The easiest way to configure the credentials is copy the example below, paste it into the gradle.properties file in the repository and replace the values with your credentials: gpr.user= gpr.key= Gradle also supports other locations for specifying these properties.","title":"Welcome to modelix.platform!","component":"platform","version":"main","name":"index","url":"/platform/main/platform/index.html","titles":[{"text":"Introduction","hash":"_introduction","id":1},{"text":"Getting Started","hash":"_getting_started","id":2},{"text":"Build components using Gradle","hash":"_build_components_using_gradle","id":3},{"text":"Build from console","hash":"_build_from_console","id":4},{"text":"modelix Artifact Publication","hash":"_modelix_artifact_publication","id":5},{"text":"How to set up GitHub packages authentication","hash":"_how_to_set_up_github_packages_authentication","id":6}]},"232":{"id":232,"text":"The modelix platform is a Gradle platform built using Gradle’s Java Platform Plugin. It aggregates the versions of individual modelix components. Furthermore, the platform simplifies versioning by mapping the modelix release version to the versions of the individual components. These are curated for each release so that compatibility between them is ensured.","title":"The modelix Gradle platform","component":"platform","version":"main","name":"index","url":"/platform/main/platform/explanation/index.html","titles":[]},"233":{"id":233,"text":"The modelix platform provides component versions. To enforce these versions in your project’s build you can add the platform as an enforcedPlatform. We make the following assumptions: the string variable mps_version contains the mps version that is used in your project, e.g. 2021-1 the string variable modelix_platform_version contains the version of the modelix platform you want to use, e. g. 23.1.0 To enforce the versions provided by the platform in your Gradle build, you can use enforcedPlatform inside of a dependencies block like this: dependencies { implementation(enforcedPlatform(\"org.modelix:platform-mps-$mps_version:$modelix_platform_version\")) } Dependencies to modelix components can then be declared without a version number (as the version declared in the platform will be used). For example: dependencies { implementation(enforcedPlatform(\"org.modelix:platform-mps-$mps_version:$modelix_platform_version\")) implementation(\"org.modelix:model-client\") } If you want to handle dependencies to MPS version-specific modelix components yourself, you can use org.modelix:platform instead, which does not contain these dependencies. However, sometimes it might be necessary to pick a specific version of a single component, e.g. when one wants to test new features. Overriding versions may lead to incompatibilities between individual modelix components. In order to override versions inside the platform during dependency resolution, platform can be used instead of enforcedPlatform: dependencies { implementation(platform(\"org.modelix:platform-mps-$mps_version:$modelix_platform_version\")) implementation(\"org.modelix:model-client:2.4.0\") } If you want to learn more about the difference between platform and enforcedPlatform, you can check out this section in the Gradle documentation.","title":"How-to use the platform to streamline modelix dependencies","component":"platform","version":"main","name":"usage-platform","url":"/platform/main/platform/howto/usage-platform.html","titles":[{"text":"General Usage","hash":"_general_usage","id":1},{"text":"Overriding versions","hash":"_overriding_versions","id":2}]},"234":{"id":234,"text":"TODO","title":"modelix.platform Tutorials","component":"platform","version":"main","name":"index","url":"/platform/main/platform/tutorial/index.html","titles":[]}},"components":{},"componentVersions":{"modelix/modelix-23.1":{"displayVersion":"modelix-23.1","title":"Modelix Documentation","version":"modelix-23.1","name":"modelix","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Modelix Documentation","site-url":"https://docs.modelix.org","page-pagination":true,"page-partial":true},"sourcemap":false},"url":"/modelix/latest/index.html","navigation":[{"items":[{"content":"General","url":"/modelix/latest/index.html","urlType":"internal","items":[{"content":"Introduction","url":"/modelix/latest/index.html","urlType":"internal"},{"content":"Development, Releases, and Roadmap","url":"/modelix/latest/main/roadmap.html","urlType":"internal"}]}],"root":true,"order":0},{"items":[{"content":"Tutorials","url":"/modelix/latest/tutorial/index.html","urlType":"internal","items":[{"content":"Build components using Gradle","url":"/modelix/latest/tutorial/build-component.html","urlType":"internal","items":[{"content":"Samples","items":[{"content":"samples:tutorial/startup-usecases.adoc","url":"/modelix/latest/samples/tutorial/startup-usecases.html","urlType":"internal"},{"content":"Run Use-Case 1 Implementation","url":"/modelix/latest/samples/tutorial/start-usecase-1-a.html","urlType":"internal"},{"content":"Run Use-Case 1a Implementation","url":"/modelix/latest/samples/tutorial/start-usecase-1-b.html","urlType":"internal"}]}]}]}],"root":true,"order":0.2},{"items":[{"content":"How-To Guides","url":"/modelix/latest/howto/index.html","urlType":"internal","items":[{"content":"Use platform to streamline dependencies","url":"/modelix/latest/platform/howto/usage-platform.html","urlType":"internal"},{"content":"Start a <code>model-server</code>","url":"/modelix/latest/core/howto/usage-model-server.html","urlType":"internal"},{"content":"Generate <code>Kotlin</code>/ <code>Typescript</code> API from MPS language","url":"/modelix/latest/core/howto/usage-model-api-gen-gradle.html","urlType":"internal"},{"content":"Use the <code>light-model-client</code>","url":"/modelix/latest/core/howto/usage-light-model-client.html","urlType":"internal"}]}],"root":true,"order":0.4},{"items":[{"content":"Reference","url":"/modelix/latest/reference/index.html","urlType":"internal","items":[{"content":"Samples","items":[{"content":"System Architecture","url":"/modelix/latest/samples/reference/architecture.html","urlType":"internal"},{"content":"Meta-model &amp; Generated Model API","url":"/modelix/latest/samples/reference/meta-model-model-api.html","urlType":"internal"},{"content":"Dashboard","url":"/modelix/latest/samples/reference/dashboard.html","urlType":"internal"},{"content":"Local model-server","url":"/modelix/latest/samples/reference/model-server.html","urlType":"internal"},{"content":"Intermediate OpenAPI","url":"/modelix/latest/samples/reference/openapi.html","urlType":"internal","items":[{"content":"modelQL API","url":"/modelix/latest/samples/reference/rest-api-model-ql.html","urlType":"internal"},{"content":"model-server API","url":"/modelix/latest/samples/reference/rest-api-model-server.html","urlType":"internal"}]}]},{"content":"List of Repositories","url":"/modelix/latest/reference/repositories-components.html","urlType":"internal"},{"content":"Table of Components","url":"/modelix/latest/reference/components-table.html","urlType":"internal"},{"content":"<code>model-server</code>","url":"/modelix/latest/core/reference/component-model-server.html","urlType":"internal"},{"content":"<code>metamodel-export</code> (MPS)","url":"/modelix/latest/core/reference/component-metamodel-export.html","urlType":"internal"},{"content":"<code>model-api-gen</code>","url":"/modelix/latest/core/reference/component-model-api-gen.html","urlType":"internal"},{"content":"<code>model-api-gen-gradle</code>","url":"/modelix/latest/core/reference/component-model-api-gen-gradle.html","urlType":"internal"},{"content":"<code>light-model-client</code>","url":"/modelix/latest/core/reference/component-light-model-client.html","urlType":"internal"}]}],"root":true,"order":0.6},{"items":[{"content":"Explanation","url":"/modelix/latest/explanation/index.html","urlType":"internal","items":[{"content":"Samples","items":[{"content":"Samples Introduction","url":"/modelix/latest/samples/index.html","urlType":"internal"},{"content":"Sample Structure","url":"/modelix/latest/samples/explanation/structure.html","urlType":"internal"},{"content":"Use-Cases","items":[{"content":"Use-cases Overview","url":"/modelix/latest/samples/explanation/usecases.html","urlType":"internal"},{"content":"Use-Case 1: Dashboard","url":"/modelix/latest/samples/explanation/usecase-1.html","urlType":"internal"},{"content":"Use-Case 2: Manual Schedule Creation","url":"/modelix/latest/samples/explanation/usecase-2.html","urlType":"internal"}]}]},{"content":"Gradle Platform","url":"/modelix/latest/platform/explanation/index.html","urlType":"internal"},{"content":"Architecture","url":"/modelix/latest/explanation/architecture.html","urlType":"internal"},{"content":"Modelix Goals","url":"/modelix/latest/explanation/goals.html","urlType":"internal"},{"content":"Glossary","url":"/modelix/latest/explanation/glossary.html","urlType":"internal"}]}],"root":true,"order":0.8}]},"modelix/modelix-23.0":{"displayVersion":"modelix-23.0","title":"Modelix Documentation","version":"modelix-23.0","name":"modelix","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Modelix Documentation","site-url":"https://docs.modelix.org","page-pagination":true,"page-partial":true},"sourcemap":false},"url":"/modelix/modelix-23.0/index.html","navigation":[{"items":[{"content":"General","url":"/modelix/modelix-23.0/index.html","urlType":"internal","items":[{"content":"Introduction","url":"/modelix/modelix-23.0/index.html","urlType":"internal"},{"content":"Development, Releases, and Roadmap","url":"/modelix/modelix-23.0/main/roadmap.html","urlType":"internal"}]}],"root":true,"order":0},{"items":[{"content":"Tutorials","url":"/modelix/modelix-23.0/tutorial/index.html","urlType":"internal","items":[{"content":"Build components using Gradle","url":"/modelix/latest/tutorial/build-component.html","urlType":"internal","items":[{"content":"Samples","items":[{"content":"samples:tutorial/startup-usecases.adoc","url":"/modelix/modelix-23.0/samples/tutorial/startup-usecases.html","urlType":"internal"},{"content":"Run Use-Case 1 Implementation","url":"/modelix/modelix-23.0/samples/tutorial/start-usecase-1-a.html","urlType":"internal"},{"content":"Run Use-Case 1a Implementation","url":"/modelix/modelix-23.0/samples/tutorial/start-usecase-1-b.html","urlType":"internal"}]}]}]}],"root":true,"order":0.2},{"items":[{"content":"How-To Guides","url":"/modelix/modelix-23.0/howto/index.html","urlType":"internal","items":[{"content":"Use platform to streamline dependencies","url":"/modelix/modelix-23.0/platform/howto/usage-platform.html","urlType":"internal"},{"content":"Start a <code>model-server</code>","url":"/modelix/modelix-23.0/core/howto/usage-model-server.html","urlType":"internal"},{"content":"Generate <code>Kotlin</code>/ <code>Typescript</code> API from MPS language","url":"/modelix/modelix-23.0/core/howto/usage-model-api-gen-gradle.html","urlType":"internal"},{"content":"Use the <code>light-model-client</code>","url":"/modelix/modelix-23.0/core/howto/usage-light-model-client.html","urlType":"internal"}]}],"root":true,"order":0.4},{"items":[{"content":"Reference","url":"/modelix/modelix-23.0/reference/index.html","urlType":"internal","items":[{"content":"Samples","items":[{"content":"System Architecture","url":"/modelix/modelix-23.0/samples/reference/architecture.html","urlType":"internal"},{"content":"Meta-model &amp; Generated Model API","url":"/modelix/modelix-23.0/samples/reference/meta-model-model-api.html","urlType":"internal"},{"content":"Dashboard","url":"/modelix/modelix-23.0/samples/reference/dashboard.html","urlType":"internal"},{"content":"Local model-server","url":"/modelix/modelix-23.0/samples/reference/model-server.html","urlType":"internal"},{"content":"Intermediate OpenAPI","url":"/modelix/modelix-23.0/samples/reference/openapi.html","urlType":"internal","items":[{"content":"modelQL API","url":"/modelix/modelix-23.0/samples/reference/rest-api-model-ql.html","urlType":"internal"},{"content":"model-server API","url":"/modelix/modelix-23.0/samples/reference/rest-api-model-server.html","urlType":"internal"}]}]},{"content":"List of Repositories","url":"/modelix/modelix-23.0/reference/repositories-components.html","urlType":"internal"},{"content":"Table of Components","url":"/modelix/modelix-23.0/reference/components-table.html","urlType":"internal"},{"content":"<code>model-server</code>","url":"/modelix/modelix-23.0/core/reference/component-model-server.html","urlType":"internal"},{"content":"<code>metamodel-export</code> (MPS)","url":"/modelix/modelix-23.0/core/reference/component-metamodel-export.html","urlType":"internal"},{"content":"<code>model-api-gen</code>","url":"/modelix/modelix-23.0/core/reference/component-model-api-gen.html","urlType":"internal"},{"content":"<code>model-api-gen-gradle</code>","url":"/modelix/modelix-23.0/core/reference/component-model-api-gen-gradle.html","urlType":"internal"},{"content":"<code>light-model-client</code>","url":"/modelix/modelix-23.0/core/reference/component-light-model-client.html","urlType":"internal"}]}],"root":true,"order":0.6},{"items":[{"content":"Explanation","url":"/modelix/modelix-23.0/explanation/index.html","urlType":"internal","items":[{"content":"Samples","items":[{"content":"Samples Introduction","url":"/modelix/modelix-23.0/samples/index.html","urlType":"internal"},{"content":"Sample Structure","url":"/modelix/modelix-23.0/samples/explanation/structure.html","urlType":"internal"},{"content":"Use-Cases","items":[{"content":"Use-cases Overview","url":"/modelix/modelix-23.0/samples/explanation/usecases.html","urlType":"internal"},{"content":"Use-Case 1: Dashboard","url":"/modelix/modelix-23.0/samples/explanation/usecase-1.html","urlType":"internal"},{"content":"Use-Case 2: Manual Schedule Creation","url":"/modelix/modelix-23.0/samples/explanation/usecase-2.html","urlType":"internal"}]}]},{"content":"Gradle Platform","url":"/modelix/modelix-23.0/platform/explanation/index.html","urlType":"internal"},{"content":"Architecture","url":"/modelix/modelix-23.0/explanation/architecture.html","urlType":"internal"},{"content":"Modelix Goals","url":"/modelix/modelix-23.0/explanation/goals.html","urlType":"internal"},{"content":"Glossary","url":"/modelix/modelix-23.0/explanation/glossary.html","urlType":"internal"}]}],"root":true,"order":0.8}]},"modelix/main":{"displayVersion":"main","title":"Modelix Documentation","version":"main","name":"modelix","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Modelix Documentation","site-url":"https://docs.modelix.org","page-pagination":true,"page-partial":true},"sourcemap":false},"url":"/modelix/main/index.html","navigation":[{"items":[{"content":"General","url":"/modelix/main/index.html","urlType":"internal","items":[{"content":"Introduction","url":"/modelix/main/index.html","urlType":"internal"},{"content":"Development, Releases, and Roadmap","url":"/modelix/main/main/roadmap.html","urlType":"internal"}]}],"root":true,"order":0},{"items":[{"content":"Tutorials","url":"/modelix/main/tutorial/index.html","urlType":"internal","items":[{"content":"Build components using Gradle","url":"/modelix/latest/tutorial/build-component.html","urlType":"internal","items":[{"content":"Samples","items":[{"content":"samples:tutorial/startup-usecases.adoc","url":"/modelix/main/samples/tutorial/startup-usecases.html","urlType":"internal"},{"content":"Run Use-Case 1 Implementation","url":"/modelix/main/samples/tutorial/start-usecase-1-a.html","urlType":"internal"},{"content":"Run Use-Case 1a Implementation","url":"/modelix/main/samples/tutorial/start-usecase-1-b.html","urlType":"internal"}]}]}]}],"root":true,"order":0.2},{"items":[{"content":"How-To Guides","url":"/modelix/main/howto/index.html","urlType":"internal","items":[{"content":"Use platform to streamline dependencies","url":"/modelix/main/platform/howto/usage-platform.html","urlType":"internal"},{"content":"Start a <code>model-server</code>","url":"/modelix/main/core/howto/usage-model-server.html","urlType":"internal"},{"content":"Generate <code>Kotlin</code>/ <code>Typescript</code> API from MPS language","url":"/modelix/main/core/howto/usage-model-api-gen-gradle.html","urlType":"internal"},{"content":"Use the <code>light-model-client</code>","url":"/modelix/main/core/howto/usage-light-model-client.html","urlType":"internal"}]}],"root":true,"order":0.4},{"items":[{"content":"Reference","url":"/modelix/main/reference/index.html","urlType":"internal","items":[{"content":"Samples","items":[{"content":"System Architecture","url":"/modelix/main/samples/reference/architecture.html","urlType":"internal"},{"content":"Meta-model &amp; Generated Model API","url":"/modelix/main/samples/reference/meta-model-model-api.html","urlType":"internal"},{"content":"Dashboard","url":"/modelix/main/samples/reference/dashboard.html","urlType":"internal"},{"content":"Local model-server","url":"/modelix/main/samples/reference/model-server.html","urlType":"internal"},{"content":"Intermediate OpenAPI","url":"/modelix/main/samples/reference/openapi.html","urlType":"internal","items":[{"content":"modelQL API","url":"/modelix/main/samples/reference/rest-api-model-ql.html","urlType":"internal"},{"content":"model-server API","url":"/modelix/main/samples/reference/rest-api-model-server.html","urlType":"internal"}]}]},{"content":"List of Repositories","url":"/modelix/main/reference/repositories-components.html","urlType":"internal"},{"content":"Table of Components","url":"/modelix/main/reference/components-table.html","urlType":"internal"},{"content":"<code>model-server</code>","url":"/modelix/main/core/reference/component-model-server.html","urlType":"internal"},{"content":"<code>metamodel-export</code> (MPS)","url":"/modelix/main/core/reference/component-metamodel-export.html","urlType":"internal"},{"content":"<code>model-api-gen</code>","url":"/modelix/main/core/reference/component-model-api-gen.html","urlType":"internal"},{"content":"<code>model-api-gen-gradle</code>","url":"/modelix/main/core/reference/component-model-api-gen-gradle.html","urlType":"internal"},{"content":"<code>light-model-client</code>","url":"/modelix/main/core/reference/component-light-model-client.html","urlType":"internal"}]}],"root":true,"order":0.6},{"items":[{"content":"Explanation","url":"/modelix/main/explanation/index.html","urlType":"internal","items":[{"content":"Samples","items":[{"content":"Samples Introduction","url":"/modelix/main/samples/index.html","urlType":"internal"},{"content":"Sample Structure","url":"/modelix/main/samples/explanation/structure.html","urlType":"internal"},{"content":"Use-Cases","items":[{"content":"Use-cases Overview","url":"/modelix/main/samples/explanation/usecases.html","urlType":"internal"},{"content":"Use-Case 1: Dashboard","url":"/modelix/main/samples/explanation/usecase-1.html","urlType":"internal"},{"content":"Use-Case 2: Manual Schedule Creation","url":"/modelix/main/samples/explanation/usecase-2.html","urlType":"internal"}]}]},{"content":"Gradle Platform","url":"/modelix/main/platform/explanation/index.html","urlType":"internal"},{"content":"Architecture","url":"/modelix/main/explanation/architecture.html","urlType":"internal"},{"content":"Modelix Goals","url":"/modelix/main/explanation/goals.html","urlType":"internal"},{"content":"Glossary","url":"/modelix/main/explanation/glossary.html","urlType":"internal"}]}],"root":true,"order":0.8}]},"samples/modelix-23.1":{"displayVersion":"modelix-23.1","title":"modelix.samples","version":"modelix-23.1","name":"samples","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Modelix Documentation","site-url":"https://docs.modelix.org","page-pagination":true,"page-partial":true},"sourcemap":false},"url":"/samples/latest/samples/index.html","navigation":[{"items":[{"content":"Samples","items":[{"content":"Welcome","url":"/samples/latest/samples/index.html","urlType":"internal"},{"content":"Tutorials","items":[{"content":"Samples","items":[{"content":"samples:tutorial/startup-usecases.adoc","url":"/samples/latest/samples/tutorial/startup-usecases.html","urlType":"internal"},{"content":"Run Use-Case 1 Implementation","url":"/samples/latest/samples/tutorial/start-usecase-1-a.html","urlType":"internal"},{"content":"Run Use-Case 1a Implementation","url":"/samples/latest/samples/tutorial/start-usecase-1-b.html","urlType":"internal"}]}]},{"content":"How-To Guides"},{"content":"Reference","items":[{"content":"Samples","items":[{"content":"System Architecture","url":"/samples/latest/samples/reference/architecture.html","urlType":"internal"},{"content":"Meta-model &amp; Generated Model API","url":"/samples/latest/samples/reference/meta-model-model-api.html","urlType":"internal"},{"content":"Dashboard","url":"/samples/latest/samples/reference/dashboard.html","urlType":"internal"},{"content":"Local model-server","url":"/samples/latest/samples/reference/model-server.html","urlType":"internal"},{"content":"Intermediate OpenAPI","url":"/samples/latest/samples/reference/openapi.html","urlType":"internal","items":[{"content":"modelQL API","url":"/samples/latest/samples/reference/rest-api-model-ql.html","urlType":"internal"},{"content":"model-server API","url":"/samples/latest/samples/reference/rest-api-model-server.html","urlType":"internal"}]}]}]},{"content":"Explanation","items":[{"content":"Samples","items":[{"content":"Samples Introduction","url":"/samples/latest/samples/index.html","urlType":"internal"},{"content":"Sample Structure","url":"/samples/latest/samples/explanation/structure.html","urlType":"internal"},{"content":"Use-Cases","items":[{"content":"Use-cases Overview","url":"/samples/latest/samples/explanation/usecases.html","urlType":"internal"},{"content":"Use-Case 1: Dashboard","url":"/samples/latest/samples/explanation/usecase-1.html","urlType":"internal"},{"content":"Use-Case 2: Manual Schedule Creation","url":"/samples/latest/samples/explanation/usecase-2.html","urlType":"internal"}]}]}]}]}],"root":true,"order":0}]},"samples/modelix-23.0":{"displayVersion":"modelix-23.0","title":"modelix.samples","version":"modelix-23.0","name":"samples","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Modelix Documentation","site-url":"https://docs.modelix.org","page-pagination":true,"page-partial":true},"sourcemap":false},"url":"/samples/modelix-23.0/samples/index.html","navigation":[{"items":[{"content":"Samples","items":[{"content":"Welcome","url":"/samples/modelix-23.0/samples/index.html","urlType":"internal"},{"content":"Tutorials","items":[{"content":"Samples","items":[{"content":"samples:tutorial/startup-usecases.adoc","url":"/samples/modelix-23.0/samples/tutorial/startup-usecases.html","urlType":"internal"},{"content":"Run Use-Case 1 Implementation","url":"/samples/modelix-23.0/samples/tutorial/start-usecase-1-a.html","urlType":"internal"},{"content":"Run Use-Case 1a Implementation","url":"/samples/modelix-23.0/samples/tutorial/start-usecase-1-b.html","urlType":"internal"}]}]},{"content":"How-To Guides"},{"content":"Reference","items":[{"content":"Samples","items":[{"content":"System Architecture","url":"/samples/modelix-23.0/samples/reference/architecture.html","urlType":"internal"},{"content":"Meta-model &amp; Generated Model API","url":"/samples/modelix-23.0/samples/reference/meta-model-model-api.html","urlType":"internal"},{"content":"Dashboard","url":"/samples/modelix-23.0/samples/reference/dashboard.html","urlType":"internal"},{"content":"Local model-server","url":"/samples/modelix-23.0/samples/reference/model-server.html","urlType":"internal"},{"content":"Intermediate OpenAPI","url":"/samples/modelix-23.0/samples/reference/openapi.html","urlType":"internal","items":[{"content":"modelQL API","url":"/samples/modelix-23.0/samples/reference/rest-api-model-ql.html","urlType":"internal"},{"content":"model-server API","url":"/samples/modelix-23.0/samples/reference/rest-api-model-server.html","urlType":"internal"}]}]}]},{"content":"Explanation","items":[{"content":"Samples","items":[{"content":"Samples Introduction","url":"/samples/modelix-23.0/samples/index.html","urlType":"internal"},{"content":"Sample Structure","url":"/samples/modelix-23.0/samples/explanation/structure.html","urlType":"internal"},{"content":"Use-Cases","items":[{"content":"Use-cases Overview","url":"/samples/modelix-23.0/samples/explanation/usecases.html","urlType":"internal"},{"content":"Use-Case 1: Dashboard","url":"/samples/modelix-23.0/samples/explanation/usecase-1.html","urlType":"internal"},{"content":"Use-Case 2: Manual Schedule Creation","url":"/samples/modelix-23.0/samples/explanation/usecase-2.html","urlType":"internal"}]}]}]}]}],"root":true,"order":0}]},"samples/main":{"displayVersion":"main","title":"modelix.samples","version":"main","name":"samples","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Modelix Documentation","site-url":"https://docs.modelix.org","page-pagination":true,"page-partial":true},"sourcemap":false},"url":"/samples/main/samples/index.html","navigation":[{"items":[{"content":"Samples","items":[{"content":"Welcome","url":"/samples/main/samples/index.html","urlType":"internal"},{"content":"Tutorials","items":[{"content":"Samples","items":[{"content":"samples:tutorial/startup-usecases.adoc","url":"/samples/main/samples/tutorial/startup-usecases.html","urlType":"internal"},{"content":"Run Use-Case 1 Implementation","url":"/samples/main/samples/tutorial/start-usecase-1-a.html","urlType":"internal"},{"content":"Run Use-Case 1a Implementation","url":"/samples/main/samples/tutorial/start-usecase-1-b.html","urlType":"internal"}]}]},{"content":"How-To Guides"},{"content":"Reference","items":[{"content":"Samples","items":[{"content":"System Architecture","url":"/samples/main/samples/reference/architecture.html","urlType":"internal"},{"content":"Meta-model &amp; Generated Model API","url":"/samples/main/samples/reference/meta-model-model-api.html","urlType":"internal"},{"content":"Dashboard","url":"/samples/main/samples/reference/dashboard.html","urlType":"internal"},{"content":"Local model-server","url":"/samples/main/samples/reference/model-server.html","urlType":"internal"},{"content":"Intermediate OpenAPI","url":"/samples/main/samples/reference/openapi.html","urlType":"internal","items":[{"content":"modelQL API","url":"/samples/main/samples/reference/rest-api-model-ql.html","urlType":"internal"},{"content":"model-server API","url":"/samples/main/samples/reference/rest-api-model-server.html","urlType":"internal"}]}]}]},{"content":"Explanation","items":[{"content":"Samples","items":[{"content":"Samples Introduction","url":"/samples/main/samples/index.html","urlType":"internal"},{"content":"Sample Structure","url":"/samples/main/samples/explanation/structure.html","urlType":"internal"},{"content":"Use-Cases","items":[{"content":"Use-cases Overview","url":"/samples/main/samples/explanation/usecases.html","urlType":"internal"},{"content":"Use-Case 1: Dashboard","url":"/samples/main/samples/explanation/usecase-1.html","urlType":"internal"},{"content":"Use-Case 2: Manual Schedule Creation","url":"/samples/main/samples/explanation/usecase-2.html","urlType":"internal"}]}]}]}]}],"root":true,"order":0}]},"core/modelix-23.1":{"displayVersion":"modelix-23.1","title":"modelix.core","version":"modelix-23.1","name":"core","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Modelix Documentation","site-url":"https://docs.modelix.org","page-pagination":true,"page-partial":true},"sourcemap":false},"url":"/core/latest/core/index.html","navigation":[{"items":[{"content":"Core","items":[{"content":"Welcome","url":"/core/latest/core/index.html","urlType":"internal"},{"content":"How-To Guides","items":[{"content":"Start a <code>model-server</code>","url":"/core/latest/core/howto/usage-model-server.html","urlType":"internal"},{"content":"Generate <code>Kotlin</code>/ <code>Typescript</code> API from MPS language","url":"/core/latest/core/howto/usage-model-api-gen-gradle.html","urlType":"internal"},{"content":"Use the <code>light-model-client</code>","url":"/core/latest/core/howto/usage-light-model-client.html","urlType":"internal"}]},{"content":"Reference","items":[{"content":"<code>model-server</code>","url":"/core/latest/core/reference/component-model-server.html","urlType":"internal"},{"content":"<code>metamodel-export</code> (MPS)","url":"/core/latest/core/reference/component-metamodel-export.html","urlType":"internal"},{"content":"<code>model-api-gen</code>","url":"/core/latest/core/reference/component-model-api-gen.html","urlType":"internal"},{"content":"<code>model-api-gen-gradle</code>","url":"/core/latest/core/reference/component-model-api-gen-gradle.html","urlType":"internal"},{"content":"<code>light-model-client</code>","url":"/core/latest/core/reference/component-light-model-client.html","urlType":"internal"}]}]}],"root":true,"order":0}]},"core/modelix-23.0":{"displayVersion":"modelix-23.0","title":"modelix.core","version":"modelix-23.0","name":"core","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Modelix Documentation","site-url":"https://docs.modelix.org","page-pagination":true,"page-partial":true},"sourcemap":false},"url":"/core/modelix-23.0/core/index.html","navigation":[{"items":[{"content":"Core","items":[{"content":"Welcome","url":"/core/modelix-23.0/core/index.html","urlType":"internal"},{"content":"How-To Guides","items":[{"content":"Start a <code>model-server</code>","url":"/core/modelix-23.0/core/howto/usage-model-server.html","urlType":"internal"},{"content":"Generate <code>Kotlin</code>/ <code>Typescript</code> API from MPS language","url":"/core/modelix-23.0/core/howto/usage-model-api-gen-gradle.html","urlType":"internal"},{"content":"Use the <code>light-model-client</code>","url":"/core/modelix-23.0/core/howto/usage-light-model-client.html","urlType":"internal"}]},{"content":"Reference","items":[{"content":"<code>model-server</code>","url":"/core/modelix-23.0/core/reference/component-model-server.html","urlType":"internal"},{"content":"<code>metamodel-export</code> (MPS)","url":"/core/modelix-23.0/core/reference/component-metamodel-export.html","urlType":"internal"},{"content":"<code>model-api-gen</code>","url":"/core/modelix-23.0/core/reference/component-model-api-gen.html","urlType":"internal"},{"content":"<code>model-api-gen-gradle</code>","url":"/core/modelix-23.0/core/reference/component-model-api-gen-gradle.html","urlType":"internal"},{"content":"<code>light-model-client</code>","url":"/core/modelix-23.0/core/reference/component-light-model-client.html","urlType":"internal"}]}]}],"root":true,"order":0}]},"core/main":{"displayVersion":"main","title":"modelix.core","version":"main","name":"core","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Modelix Documentation","site-url":"https://docs.modelix.org","page-pagination":true,"page-partial":true},"sourcemap":false},"url":"/core/main/core/index.html","navigation":[{"items":[{"content":"Core","items":[{"content":"Welcome","url":"/core/main/core/index.html","urlType":"internal"},{"content":"How-To Guides","items":[{"content":"Start a <code>model-server</code>","url":"/core/main/core/howto/usage-model-server.html","urlType":"internal"},{"content":"Generate <code>Kotlin</code>/ <code>Typescript</code> API from MPS language","url":"/core/main/core/howto/usage-model-api-gen-gradle.html","urlType":"internal"},{"content":"Use the <code>light-model-client</code>","url":"/core/main/core/howto/usage-light-model-client.html","urlType":"internal"}]},{"content":"Reference","items":[{"content":"<code>model-server</code>","url":"/core/main/core/reference/component-model-server.html","urlType":"internal"},{"content":"<code>metamodel-export</code> (MPS)","url":"/core/main/core/reference/component-metamodel-export.html","urlType":"internal"},{"content":"<code>model-api-gen</code>","url":"/core/main/core/reference/component-model-api-gen.html","urlType":"internal"},{"content":"<code>model-api-gen-gradle</code>","url":"/core/main/core/reference/component-model-api-gen-gradle.html","urlType":"internal"},{"content":"<code>light-model-client</code>","url":"/core/main/core/reference/component-light-model-client.html","urlType":"internal"}]}]}],"root":true,"order":0}]},"platform/modelix-23.1":{"displayVersion":"modelix-23.1","title":"modelix.platform","version":"modelix-23.1","name":"platform","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Modelix Documentation","site-url":"https://docs.modelix.org","page-pagination":true,"page-partial":true},"sourcemap":false},"url":"/platform/latest/platform/index.html","navigation":[{"items":[{"content":"Platform","items":[{"content":"Welcome","url":"/platform/latest/platform/index.html","urlType":"internal"},{"content":"How-To Guides","items":[{"content":"Use platform to streamline dependencies","url":"/platform/latest/platform/howto/usage-platform.html","urlType":"internal"}]},{"content":"Explanation","items":[{"content":"Gradle Platform","url":"/platform/latest/platform/explanation/index.html","urlType":"internal"}]}]}],"root":true,"order":0}]},"platform/modelix-23.0":{"displayVersion":"modelix-23.0","title":"modelix.platform","version":"modelix-23.0","name":"platform","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Modelix Documentation","site-url":"https://docs.modelix.org","page-pagination":true,"page-partial":true},"sourcemap":false},"url":"/platform/modelix-23.0/platform/index.html","navigation":[{"items":[{"content":"Platform","items":[{"content":"Welcome","url":"/platform/modelix-23.0/platform/index.html","urlType":"internal"},{"content":"How-To Guides","items":[{"content":"Use platform to streamline dependencies","url":"/platform/modelix-23.0/platform/howto/usage-platform.html","urlType":"internal"}]},{"content":"Explanation","items":[{"content":"Gradle Platform","url":"/platform/modelix-23.0/platform/explanation/index.html","urlType":"internal"}]}]}],"root":true,"order":0}]},"platform/main":{"displayVersion":"main","title":"modelix.platform","version":"main","name":"platform","asciidoc":{"attributes":{"env":"site","env-site":"","site-gen":"antora","site-gen-antora":"","attribute-missing":"warn","data-uri":null,"icons":"font","sectanchors":"","source-highlighter":"highlight.js","site-title":"Modelix Documentation","site-url":"https://docs.modelix.org","page-pagination":true,"page-partial":true},"sourcemap":false},"url":"/platform/main/platform/index.html","navigation":[{"items":[{"content":"Platform","items":[{"content":"Welcome","url":"/platform/main/platform/index.html","urlType":"internal"},{"content":"How-To Guides","items":[{"content":"Use platform to streamline dependencies","url":"/platform/main/platform/howto/usage-platform.html","urlType":"internal"}]},{"content":"Explanation","items":[{"content":"Gradle Platform","url":"/platform/main/platform/explanation/index.html","urlType":"internal"}]}]}],"root":true,"order":0}]}}}})